{"version":3,"sources":["components/Forms.js","components/Marketplace.js"],"names":["MilestoneForm","action","client","onSuccess","definedAmount","order","refund","strict","useContext","SiteContext","user","config","setUser","useState","loading","setLoading","userDetail","clientDetail","dscr","setDscr","amount","setAmount","fee","setFee","msg","setMsg","onTimeout","useRef","requestMilestone","useCallback","fetch","method","headers","body","JSON","stringify","buyer_id","_id","then","res","json","data","code","milestone","onClick","catch","err","console","log","createMilestone","seller","to","useEffect","fix","className","onSubmit","e","preventDefault","toast","current","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","onClose","draggable","progress","undefined","readOnly","min","defaultValue","required","onChange","target","value","toString","firstName","lastName","type","src","profileImg","phone","email","address","street","city","zip","open","MilestoneReleaseForm","setReleaseForm","AddressForm","onCancel","name","setName","setPhone","setZip","locality","setLocatily","setStreet","setCity","state","setState","landmark","setLandmark","altPhone","setAltPhone","htmlFor","resiz","DisputeForm","setDisputeForm","issue","setIssue","caseFiles","setCaseFiles","submit","a","length","UploadFiles","files","fileLinks","milestoneId","defendantId","_case","options","role","label","multiple","accept","TicketForm","setMilestone","transaction","setTransaction","setFiles","message","setMessage","ticket","TicketReplyForm","lazy","mod","default","require","MiniChat","onToggle","ChatContext","contacts","setContacts","setOpen","userCard","setUserCard","chat","setChat","clientChat","find","contact","status","userBlock","messages","socket","emit","client_id","newChat","prev","xmlns","width","height","viewBox","id","d","transform","fill","Product","userType","setCart","finalPrice","calculatePrice","product","gst","images","discount","disabled","available","addToCart","SingleProduct","match","nativeShare","setNativeShare","setProduct","chatOpen","setChatOpen","params","navigator","share","Gallery","title","url","window","location","href","view","setView","ImageView","img","map","item","i","setSrc","boundingBody","setBoundingBody","applyStyle","setApplyStyle","style","setStyle","container","useLayoutEffect","getBoundingClientRect","ref","onMouseMove","x","Math","abs","round","clientX","y","clientY","max","onTouchStart","document","querySelector","overflow","onTouchEnd","onTouchMove","touches","transition","onMouseEnter","onMouseLeave","onError","Cart","cart","carts","setCarts","products","Shop","deliveryDetail","setDeliveryDetail","addressForm","setAddressForm","milestoneForm","setMilestoneForm","showTerms","setShowTerms","couponCode","setCouponCode","validCoupon","setValidCoupon","couponCodeForm","setCouponCodeForm","productPrice","reduce","c","qty","couponCodeDiscount","maxDiscount","total","shopInfo","shippingCost","CartItem","coupon","sellers","filter","threshold","usage","validPerUser","onBlur","toUpperCase","refundable","Object","entries","key","head","deliveryWithin","some","terms","price","verified","Marketplace","history","useOnScreen","rootMargin","loadingRef","loadingVisible","sortOptions","column","categories","setCategories","setTotal","queryString","parse","search","perPage","page","setPage","q","setSearch","sort","setSort","setProducts","category","setCategory","sellerDetail","setSellerDetail","setLoadingMore","replace","pathname","URLSearchParams","display","shopName","opacity","placeholder"],"mappings":"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","file":"static/js/3.c25559f1.chunk.js","sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport {\n  NumberInput,\n  Combobox,\n  Err_svg,\n  FileInput,\n  UploadFiles,\n  Img,\n} from \"./Elements\";\nimport { Link } from \"react-router-dom\";\nimport { Modal } from \"./Modal\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const MilestoneForm = ({\n  action,\n  client,\n  onSuccess,\n  definedAmount,\n  order,\n  refund,\n  strict,\n}) => {\n  const { user, setUser, config } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [addressForm, setAddressForm] = useState(false);\n  const [userDetail, setUserDetail] = useState({ ...user });\n  const [clientDetail, setClientDetail] = useState({ ...client });\n  const [dscr, setDscr] = useState(\"\");\n  const [amount, setAmount] = useState(definedAmount || \"\");\n  const [fee, setFee] = useState(0);\n  const [msg, setMsg] = useState(null);\n  const onTimeout = useRef();\n  const requestMilestone = useCallback(() => {\n    fetch(\"/api/requestMilestone\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        buyer_id: client._id,\n        amount,\n        dscr,\n        order,\n        refund,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.milestone);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not request milestone. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not request milestone. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [clientDetail, userDetail, amount, dscr]);\n  const createMilestone = useCallback(() => {\n    fetch(\"/api/createMilestone\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        seller: { ...clientDetail },\n        amount,\n        dscr,\n        order,\n        refund,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.({ ...data });\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Insufficient fund</h4>\n                <Link to=\"/account/profile/wallet\">\n                  Add Money to your wallet now.\n                </Link>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not create milestone. Try again</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not create milestone. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [clientDetail, userDetail, amount, dscr]);\n  useEffect(() => {\n    setFee(() => {\n      return ((+amount / 100) * config.fee).fix();\n    });\n  }, [amount]);\n  return (\n    <>\n      <form\n        className=\"milestonesForm\"\n        onSubmit={(e) => {\n          setLoading(true);\n          e.preventDefault();\n          toast(\n            <div className=\"toast\">\n              Milestone is being{\" \"}\n              {action === \"create\" ? \"created.\" : \"requested.\"}{\" \"}\n              <button\n                className=\"undo\"\n                onClick={() => {\n                  onTimeout.current = null;\n                }}\n              >\n                Undo\n              </button>\n            </div>,\n            {\n              position: \"bottom-center\",\n              autoClose: 8000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              onClose: () => {\n                onTimeout.current?.();\n                setLoading(false);\n              },\n              draggable: true,\n              progress: undefined,\n            }\n          );\n          if (action === \"create\") {\n            onTimeout.current = createMilestone;\n          } else {\n            onTimeout.current = requestMilestone;\n          }\n        }}\n      >\n        <section className=\"transactionDetail\">\n          <section className=\"amount\">\n            <label>Amount</label>\n            <NumberInput\n              readOnly={strict}\n              min={10}\n              defaultValue={definedAmount || 0}\n              required={true}\n              onChange={(e) => setAmount((+e.target.value).toString())}\n            />\n          </section>\n          {amount && (\n            <>\n              {action === \"create\" && (\n                <label className=\"receivable\">\n                  {client.firstName} {client.lastName} will recieve ₹\n                  {(amount - fee).fix()}\n                </label>\n              )}\n              {action === \"request\" && (\n                <label className=\"receivable\">\n                  You will recieve ₹{(amount - fee).fix()}\n                </label>\n              )}\n            </>\n          )}\n          <section>\n            <label>Detail</label>\n            <input\n              value={dscr}\n              required={true}\n              onChange={(e) => setDscr(e.target.value)}\n            />\n          </section>\n          <button type=\"submit\">\n            {action === \"create\" ? \"Create Milestone\" : \"Request Milestone\"}\n          </button>\n        </section>\n        <section className=\"clientDetail\">\n          {action === \"request\" && (\n            <>\n              <Img src={client?.profileImg || \"/profile-user.jpg\"} />\n              <label>Buyer Information</label>\n              <div className=\"detail\">\n                <section className=\"profileDetail\">\n                  <p className=\"name\">\n                    {client?.firstName + \" \" + client?.lastName}\n                  </p>\n                  <p className=\"phone\">{client?.phone}</p>\n                  <p className=\"email\">{client?.email}</p>\n                </section>\n                {client?.address?.street && (\n                  <section className=\"address\">\n                    <p className=\"street\">\n                      {client.address?.street}, {client.address?.city},{\" \"}\n                      {client.address?.zip}\n                    </p>\n                  </section>\n                )}\n              </div>\n            </>\n          )}\n          {action === \"request\" ? null : (\n            <div className=\"sellerInfo\">\n              <Img src={clientDetail?.profileImg || \"/profile-user.jpg\"} />\n              <label>Seller Information</label>\n              <div className=\"detail\">\n                <section className=\"profileDetail\">\n                  <p className=\"name\">\n                    {clientDetail?.firstName} {clientDetail?.lastName}\n                  </p>\n                  <p className=\"phone\">{clientDetail?.phone}</p>\n                  <p className=\"email\">{clientDetail?.email}</p>\n                </section>\n              </div>\n            </div>\n          )}\n        </section>\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nexport const MilestoneReleaseForm = ({\n  milestone,\n  setReleaseForm,\n  onSuccess,\n}) => {\n  const [amount, setAmount] = useState(milestone.amount);\n  const [msg, setMsg] = useState(null);\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        fetch(\"/api/releaseMilestone\", {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ _id: milestone._id, amount }),\n        })\n          .then((res) => res.json())\n          .then(({ code, milestone }) => {\n            if (milestone) {\n              onSuccess?.(milestone);\n            } else if (code === 403) {\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Err_svg />\n                    <h4>Could not release Milestone due to low balance.</h4>\n                  </div>\n                </>\n              );\n            } else {\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Err_svg />\n                    <h4>Could not release Milestone.</h4>\n                  </div>\n                </>\n              );\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not release Milestone. Make sure you're online.</h4>\n              </div>\n            </>;\n          });\n      }}\n    >\n      You sure want to release this Milestone?\n      {\n        // <label>How much money you want to release?</label>\n        //   <NumberInput\n        //   defaultValue={amount}\n        //   onChange={(e) => setAmount(e.target.value)}\n        // />\n      }\n      <section className=\"btns\">\n        <button type=\"submit\">Confirm</button>\n        <button\n          className=\"cancel\"\n          type=\"button\"\n          onClick={() => setReleaseForm(false)}\n        >\n          Cancel\n        </button>\n      </section>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </form>\n  );\n};\n\nexport const AddressForm = ({ client, onSuccess, onCancel }) => {\n  const [name, setName] = useState(\n    client ? client.name || client.firstName + \" \" + client.lastName : \"\"\n  );\n  const [phone, setPhone] = useState(client?.phone || \"\");\n  const [zip, setZip] = useState(client?.address?.zip || \"\");\n  const [locality, setLocatily] = useState(client?.address?.locality || \"\");\n  const [street, setStreet] = useState(client?.address?.street || \"\");\n  const [city, setCity] = useState(client?.address?.city || \"\");\n  const [state, setState] = useState(client?.address?.state || \"\");\n  const [landmark, setLandmark] = useState(client?.address?.landmark || \"\");\n  const [altPhone, setAltPhone] = useState(client?.address?.altPhone || \"\");\n  return (\n    <form\n      className=\"addressForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSuccess?.({\n          address: {\n            name,\n            phone,\n            street,\n            city,\n            state,\n            zip,\n            locality,\n            landmark,\n            altPhone,\n          },\n        });\n      }}\n    >\n      <section>\n        <label htmlFor=\"name\">Full Name</label>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"phone\">Phone Number</label>\n        <input\n          value={phone}\n          onChange={(e) => setPhone(e.target.value)}\n          type=\"tel\"\n          name=\"phone\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"zip\">PIN Code</label>\n        <input\n          value={zip}\n          onChange={(e) => setZip(e.target.value)}\n          type=\"number\"\n          name=\"zip\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"locality\">Locality</label>\n        <input\n          value={locality}\n          onChange={(e) => setLocatily(e.target.value)}\n          type=\"text\"\n          name=\"locality\"\n          required={true}\n        />\n      </section>\n      <section className=\"street\">\n        <label htmlFor=\"address\">Address</label>\n        <textarea\n          value={street}\n          onChange={(e) => setStreet(e.target.value)}\n          resiz=\"off\"\n          type=\"text\"\n          name=\"address\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"city\">City</label>\n        <input\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n          type=\"text\"\n          name=\"city\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"state\">State</label>\n        <input\n          value={state}\n          onChange={(e) => setState(e.target.value)}\n          type=\"text\"\n          name=\"state\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"landmark\">Landmark (Optional)</label>\n        <input\n          value={landmark}\n          onChange={(e) => setLandmark(e.target.value)}\n          type=\"text\"\n          name=\"landmark\"\n        />\n      </section>\n      <section>\n        <label htmlFor=\"altPhone\">Alternate Phone (Optional)</label>\n        <input\n          value={altPhone}\n          onChange={(e) => setAltPhone(e.target.value)}\n          type=\"tel\"\n          name=\"altPhone\"\n        />\n      </section>\n      <button className=\"save\">Save</button>\n      <button className=\"cancel\" type=\"button\" onClick={() => onCancel?.()}>\n        Cancel\n      </button>\n      <section className=\"pBtm\" />\n    </form>\n  );\n};\n\nexport const DisputeForm = ({ milestone, setDisputeForm, onSuccess }) => {\n  const [issue, setIssue] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [dscr, setDscr] = useState(\"\");\n  const [caseFiles, setCaseFiles] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = caseFiles.length\n      ? await UploadFiles({\n          files: caseFiles,\n          setMsg,\n        })\n      : [];\n    fetch(\"/api/fileDispute\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        issue,\n        milestoneId: milestone._id,\n        defendantId: milestone.client._id,\n        _case: { dscr, files: fileLinks },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.milestone);\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>\n                  Insufficient fund! you have to have ₹500 in your wallet to\n                  file a dispute.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not file dispute.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(true);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not file dispute. make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"disputeForm\" onSubmit={submit}>\n        <h4>You feel like you are getting scammed?</h4>\n        <section>\n          <label htmlFor=\"issue\">Issue</label>\n          <Combobox\n            name=\"issue\"\n            options={\n              milestone.role === \"buyer\"\n                ? [\n                    {\n                      label: \"Buyer Not Releasing Payments\",\n                      value: \"Buyer Not Releasing Payments\",\n                    },\n                  ]\n                : [\n                    {\n                      label: \"Goods Not Received\",\n                      value: \"Goods Not Received\",\n                    },\n                    {\n                      label: \"Services Not Received\",\n                      value: \"Services Not Received\",\n                    },\n                    {\n                      label: \"Damaged\",\n                      value: \"Damaged\",\n                    },\n                    {\n                      label: \"Not As Agreed\",\n                      value: \"Not As Agreed\",\n                    },\n                    {\n                      label: \"Not As Displayed\",\n                      value: \"Not As Displayed\",\n                    },\n                  ]\n            }\n            onChange={(e) => {\n              setIssue(e.value);\n            }}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"description\">Description</label>\n          <TextareaAutosize\n            name=\"description\"\n            value={dscr}\n            required={true}\n            onChange={(e) => setDscr(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">\n            Upload images to prove your case. ie: Product of image, proof of\n            delivery.\n          </label>\n          <FileInput\n            multiple={true}\n            accept=\"audio/*,video/*,image/*\"\n            onChange={(e) => setCaseFiles(e)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport const TicketForm = ({ onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [issue, setIssue] = useState(\"\");\n  const [milestone, setMilestone] = useState(\"\");\n  const [transaction, setTransaction] = useState(\"\");\n  const [files, setFiles] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = files.length ? await UploadFiles({ files, setMsg }) : [];\n    fetch(\"/api/openTicket\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        issue,\n        milestone,\n        transaction,\n        message: {\n          body: message,\n          files: fileLinks,\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.ticket);\n        } else if (data.message === \"milestone ID is invalid\") {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Milestone Id is invalid.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Ticket could not be submitted.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Ticket could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"ticketForm\" onSubmit={submit}>\n        <section>\n          <label>Issue</label>\n          <input\n            value={issue}\n            required={true}\n            onChange={(e) => setIssue(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Milestone ID (optional)</label>\n          <input\n            value={milestone}\n            onChange={(e) => setMilestone(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Transaction ID (optional)</label>\n          <input\n            value={transaction}\n            onChange={(e) => setTransaction(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Detail</label>\n          <TextareaAutosize\n            required={true}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">Upload relevant files (optional)</label>\n          <FileInput onChange={(files) => setFiles(files)} />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\nexport const TicketReplyForm = ({ _id, onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = files.length ? await UploadFiles({ files, setMsg }) : [];\n    fetch(\"/api/addTicketReply\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id,\n        message: { body: message, files: fileLinks },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.ticket);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Reply could not be submitted.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Reply could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"ticketReplyForm\" onSubmit={submit}>\n        <section>\n          <label>Message</label>\n          <TextareaAutosize\n            required={true}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">Upload relevant files (optional)</label>\n          <FileInput\n            accept=\"audio/*,video/*,image/*\"\n            multiple={true}\n            onChange={(files) => setFiles(files)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  useContext,\n  lazy,\n} from \"react\";\nimport {\n  X_svg,\n  Combobox,\n  Err_svg,\n  Succ_svg,\n  calculatePrice,\n  calculateDiscount,\n  Minus_svg,\n  Plus_svg,\n  addToCart,\n  Header,\n  Footer,\n  Tip,\n  Cart_svg,\n  Img,\n  Moment,\n  useOnScreen,\n  Arrow_left_svg,\n} from \"./Elements\";\nimport { AddressForm } from \"./Forms\";\nimport { SiteContext, ChatContext, socket } from \"../SiteContext\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Modal, Confirm } from \"./Modal\";\nimport { Chat } from \"./Deals\";\nimport queryString from \"query-string\";\nimport { toast } from \"react-toastify\";\nconst MilestoneForm = lazy(() =>\n  import(\"./Forms\").then((mod) => ({ default: mod.MilestoneForm }))\n);\n\nrequire(\"./styles/marketplace.scss\");\n\nconst Marketplace = ({ history, location, match }) => {\n  const { userType } = useContext(SiteContext);\n  const [nativeShare, setNativeShare] = useState(false);\n  const [loadingRef, loadingVisible] = useOnScreen({ rootMargin: \"100px\" });\n  const sortOptions = useRef([\n    {\n      label: \"Newest first\",\n      value: { column: \"createdAt\", order: \"dsc\" },\n    },\n    {\n      label: \"Oldest first\",\n      value: { column: \"createdAt\", order: \"asc\" },\n    },\n    {\n      label: \"Price high-low\",\n      value: { column: \"price\", order: \"dsc\" },\n    },\n    {\n      label: \"Price low-high\",\n      value: { column: \"price\", order: \"asc\" },\n    },\n  ]);\n  const [categories, setCategories] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [type, setType] = useState(\n    queryString.parse(location.search).type || \"\"\n  );\n  const [perPage, setPerPage] = useState(\n    queryString.parse(location.search).perPage || 20\n  );\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState(\n    queryString.parse(location.search).q || \"\"\n  );\n  const [sort, setSort] = useState({\n    column: queryString.parse(location.search).sort || \"createdAt\",\n    order: queryString.parse(location.search).order || \"dsc\",\n  });\n  const [products, setProducts] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const [category, setCategory] = useState(\"\");\n  const [seller, setSeller] = useState(\n    queryString.parse(location.search).seller\n  );\n  const [sellerDetail, setSellerDetail] = useState(null);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [chatOpen, setChatOpen] = useState(false);\n  const loadMore = () => {\n    setLoadingMore(true);\n    fetch(`/api/getProducts${location.search}&page=${page + 1}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoadingMore(false);\n        if (data.code === \"ok\") {\n          if (data.products.length) {\n            setProducts((prev) => [...prev, ...data.products]);\n            setPage((prev) => prev + 1);\n          } else {\n          }\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not get products. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoadingMore(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get products. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    fetch(`/api/getProducts${location.search}&page=${1}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setTotal(data.total);\n          setProducts(data.products);\n          if (data.seller) {\n            setSellerDetail(data.seller);\n            if (data.categories) {\n              setCategories(data.categories);\n            }\n          } else {\n            setSellerDetail(null);\n          }\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not get products. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get products. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [location.search]);\n  useEffect(() => {\n    history.replace({\n      pathname: history.location.pathname,\n      search:\n        \"?\" +\n        new URLSearchParams({\n          ...(seller && { seller }),\n          ...(search.length >= 4 && { q: search }),\n          perPage,\n          sort: sort.column,\n          order: sort.order,\n          ...(type && { type }),\n          ...(category && { category }),\n        }).toString(),\n    });\n  }, [page, search, sort, seller, type, category]);\n  useEffect(() => {\n    if (loadingVisible && total > products.length) {\n      loadMore();\n    }\n  }, [loadingVisible]);\n  useEffect(() => {\n    if (navigator.share) {\n      setNativeShare(true);\n    }\n  }, []);\n  return (\n    <div className={`generic marketplace ${chatOpen ? \"chatOpen\" : \"\"}`}>\n      <Header />\n      {userType === \"seller\" && <Redirect to=\"/account/myShop/products\" />}\n      <div style={{ display: \"none\" }}>\n        <X_svg />\n      </div>\n      <div className=\"benner\">\n        <h1>Delivery Pay Marketplace</h1>\n      </div>\n      <div className=\"content\">\n        <div className=\"mainContent\">\n          {sellerDetail && (\n            <div className=\"sellerDetail\">\n              {sellerDetail?.profileImg && (\n                <Img className=\"logo\" src={\"/profile-user.jpg\"} />\n              )}\n              <p>\n                {seller.shopInfo?.shopName ||\n                  sellerDetail.firstName + \" \" + sellerDetail.lastName}\n              </p>\n            </div>\n          )}\n          <div className=\"filters\">\n            <section className=\"categories\">\n              <label>Category</label>\n              <Combobox\n                defaultValue={0}\n                options={[\n                  { label: \"All\", value: \"\" },\n                  ...categories.map((item) => ({ label: item, value: item })),\n                ]}\n                onChange={(e) => {\n                  setCategory(e.value);\n                }}\n              />\n            </section>\n            <section className=\"search\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"23\"\n                height=\"23\"\n                viewBox=\"0 0 23 23\"\n              >\n                <path\n                  id=\"Icon_ionic-ios-search\"\n                  data-name=\"Icon ionic-ios-search\"\n                  d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n                  transform=\"translate(-4.5 -4.493)\"\n                  fill=\"#707070\"\n                  opacity=\"0.74\"\n                />\n              </svg>\n              <input\n                value={search}\n                onChange={(e) => {\n                  setSearch(e.target.value);\n                }}\n                placeholder=\"Search for products or services\"\n              />\n              {search && (\n                <button onClick={() => setSearch(\"\")}>\n                  <X_svg />\n                </button>\n              )}\n            </section>\n            <section className=\"sort\">\n              <label>Sort by:</label>\n              <Combobox\n                defaultValue={sortOptions.current.find(\n                  (item) =>\n                    item.value.column === sort.column &&\n                    item.value.order === sort.order\n                )}\n                options={sortOptions.current}\n                onChange={(e) => setSort(e.value)}\n              />\n            </section>\n            {nativeShare && (\n              <section className=\"share\">\n                <button\n                  onClick={async () => {\n                    try {\n                      await navigator.share({\n                        title: `Delivery Pay | ${\n                          sellerDetail\n                            ? `${\n                                sellerDetail.firstName +\n                                \" \" +\n                                sellerDetail.lastName\n                              }`\n                            : \"Marketplace\"\n                        }`,\n                        url: window.location.href,\n                      });\n                    } catch (err) {}\n                  }}\n                >\n                  Share this page\n                </button>\n              </section>\n            )}\n          </div>\n          <div className={`products ${products.length === 0 ? \"empty\" : \"\"}`}>\n            {products.map((item) => (\n              <Product key={item._id} data={item} />\n            ))}\n            {total > products.length && (\n              <div className=\"placeholder\">Loading</div>\n            )}\n            {products.length === 0 && (\n              <div className=\"placeholder\">\n                <Img src=\"/open_box.png\" />\n                <p>No Product Found</p>\n              </div>\n            )}\n          </div>\n        </div>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </div>\n      <div ref={loadingRef} />\n      {sellerDetail && (\n        <MiniChat client={sellerDetail} onToggle={setChatOpen} />\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nconst MiniChat = ({ client, onToggle }) => {\n  const { user } = useContext(SiteContext);\n  const { contacts, setContacts } = useContext(ChatContext);\n  const [open, setOpen] = useState(false);\n  const [userCard, setUserCard] = useState(null);\n  const [chat, setChat] = useState(null);\n  useEffect(() => {\n    if (user) {\n      // console.log(client);\n      const clientChat = contacts.find(\n        (contact) => contact.client._id === client._id\n      );\n      if (clientChat) {\n        setUserCard({\n          ...clientChat.client,\n          status: clientChat.userBlock ? \"blocked\" : \"\",\n        });\n        setChat(clientChat.messages);\n        socket.emit(\"initiateChat\", {\n          client_id: client._id,\n          ...(clientChat.messages === undefined && { newChat: true }),\n        });\n      }\n      // else {\n      //   socket.emit(\"initiateChat\", {\n      //     client_id: client._id,\n      //     newChat: true,\n      //   });\n      // }\n    }\n  }, [client, contacts]);\n  useEffect(() => {\n    onToggle?.(open);\n  }, [open]);\n  if (!open) {\n    return (\n      <button\n        className=\"chatBtn\"\n        onClick={() => {\n          if (user && !userCard) {\n            const clientChat = contacts.find(\n              (contact) => contact.client._id === client._id\n            );\n            console.log(clientChat);\n            if (clientChat) {\n              setUserCard({\n                ...clientChat.client,\n                status: clientChat.userBlock ? \"blocked\" : \"\",\n              });\n\n              setChat(clientChat.messages);\n              socket.emit(\"initiateChat\", {\n                client_id: client._id,\n                ...(clientChat.messages === undefined && { newChat: true }),\n              });\n            } else {\n              setContacts((prev) => [\n                ...prev,\n                { client, messages: [], status: \"\" },\n              ]);\n              socket.emit(\"initiateChat\", {\n                client_id: client._id,\n                newChat: true,\n              });\n            }\n          }\n          setOpen(true);\n        }}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"26.55\"\n          height=\"25.219\"\n          viewBox=\"0 0 26.55 25.219\"\n        >\n          <path\n            id=\"Path_1\"\n            data-name=\"Path 1\"\n            d=\"M-242.2-184.285h-13l26.55-10.786-4.252,25.219-5.531-10.637-2.127,4.68v-6.382l7.659-9.148h2.34\"\n            transform=\"translate(255.198 195.071)\"\n            fill=\"#fff\"\n          />\n        </svg>\n      </button>\n    );\n  }\n  if (!user) {\n    return (\n      <div className=\"chatWrapper\">\n        <button className=\"closeChat\" onClick={() => setOpen(false)}>\n          <Arrow_left_svg />\n        </button>\n        <div className=\"chat\">\n          <div className=\"startChat\">\n            <Link to=\"/u/login\">\n              <p>Login to start chat with this seller.</p>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"chatWrapper\">\n      <button className=\"closeChat\" onClick={() => setOpen(false)}>\n        <Arrow_left_svg />\n      </button>\n      <Chat\n        chat={chat}\n        setContacts={setContacts}\n        userCard={userCard}\n        setUserCard={setUserCard}\n        user={user}\n        setChat={setChat}\n      />\n    </div>\n  );\n};\n\nconst Product = ({ data }) => {\n  const { user, userType, setCart } = useContext(SiteContext);\n  let finalPrice = calculatePrice({ product: data, gst: data.user?.gst });\n  return (\n    <div className=\"product\">\n      <Link to={`/marketplace/${data._id}`}>\n        <div className={`thumb ${data.images[0] ? \"\" : \"noThumb\"}`}>\n          <Img src={data.images[0] || \"/open_box.png\"} />\n        </div>\n      </Link>\n      <div className=\"detail\">\n        <h3>{data.name}</h3>\n        <p className=\"dscr\">{data.dscr}</p>\n        <div className=\"price\">\n          <span className=\"symbol\">₹ </span>\n          {finalPrice}{\" \"}\n          {finalPrice !==\n            calculatePrice({\n              product: data,\n              gst: data.user.gst,\n              discount: false,\n            }) && (\n            <span className=\"originalPrice\">\n              {calculatePrice({\n                product: data,\n                gst: data.user?.gst,\n                discount: false,\n              })}\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\"actions\">\n        {userType === \"buyer\" && data?.user._id === user?._id && (\n          <p className=\"note\">Can't buy product from self.</p>\n        )}\n        <button\n          disabled={!data.available || data?.user._id === user?._id}\n          onClick={() => {\n            setCart((prev) => addToCart(prev, data));\n          }}\n        >\n          Add to Cart\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport const SingleProduct = ({ match }) => {\n  const { user, setCart, userType } = useContext(SiteContext);\n  const [nativeShare, setNativeShare] = useState(false);\n  const [product, setProduct] = useState(null);\n  const [msg, setMsg] = useState(null);\n  const [chatOpen, setChatOpen] = useState(false);\n  useEffect(() => {\n    fetch(`/api/singleProduct?_id=${match.params._id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setProduct(data.product);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Product does not exists.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get product. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n    if (navigator.share) {\n      setNativeShare(true);\n    }\n  }, []);\n  if (product) {\n    return (\n      <div className={`generic singleProduct ${chatOpen ? \"chatOpen\" : \"\"}`}>\n        <Header />\n        <div className=\"content\">\n          <Gallery images={product.images} />\n          <div className=\"detail\">\n            <h1>{product.name}</h1>\n            <p>{product.dscr}</p>\n            <p className=\"price\">\n              <label>Price: </label> <span className=\"symbol\">₹</span>\n              {calculatePrice({ product, gst: product.user?.gst })}{\" \"}\n              {calculatePrice({ product, gst: product.user?.gst }) !==\n                calculatePrice({\n                  product,\n                  gst: product.user?.gst,\n                  discount: false,\n                }) && (\n                <span className=\"originalPrice\">\n                  {calculatePrice({\n                    product,\n                    gst: product.user?.gst,\n                    discount: false,\n                  })}\n                </span>\n              )}\n            </p>\n            {\n              //   product.user?.gst?.verified && (\n              //   <p className=\"gst\">\n              //     Including {product.gst || product.user.gst.amount}% GST\n              //   </p>\n              // )\n            }\n            <p>\n              {product.type === \"product\" && (\n                <>\n                  Available: {product.available && product.available}{\" \"}\n                  {product.available === 0 && <>Out of stock</>}\n                  {product.available < 7 && product.available > 0 && (\n                    <>Low stock</>\n                  )}\n                </>\n              )}\n              {product.type !== \"product\" && (\n                <>\n                  Availability:{\" \"}\n                  {product.available ? \"Available\" : \"Unavailable\"}\n                </>\n              )}\n            </p>\n            <div className=\"actions\">\n              <button\n                disabled={\n                  !product.available ||\n                  userType === \"seller\" ||\n                  product.user?._id === user?._id\n                }\n                onClick={() => {\n                  setCart((prev) => addToCart(prev, product));\n                }}\n              >\n                Add to Cart\n              </button>\n              {nativeShare && (\n                <button\n                  onClick={async () => {\n                    try {\n                      await navigator.share({\n                        title: `${product.name} | Delivery Pay`,\n                        url: window.location.href,\n                      });\n                    } catch (err) {}\n                  }}\n                >\n                  Share this Product\n                </button>\n              )}\n              {userType === \"seller\" && product?.user._id !== user?._id && (\n                <p className=\"note\">\n                  Switch to buyer profile to buy this product.\n                </p>\n              )}\n              {userType === \"buyer\" && product?.user._id === user?._id && (\n                <p className=\"note\">Can't buy product from self.</p>\n              )}\n            </div>\n            <div className=\"seller\">\n              <label>Being sold by:</label>\n              <Link to={`/marketplace?seller=${product.user?._id}`}>\n                <div className=\"profile\">\n                  <Img src={product.user.profileImg || \"/profile-user.jpg\"} />\n                  <p className=\"name\">\n                    {product.user.firstName} {product.user.lastName}{\" \"}\n                    <span className=\"contact\">{product.user.phone}</span>\n                  </p>\n                </div>\n              </Link>\n            </div>\n          </div>\n          <Modal className=\"msg\" open={msg}>\n            {msg}\n          </Modal>\n        </div>\n        {product && <MiniChat client={product.user} onToggle={setChatOpen} />}\n        <Footer />\n      </div>\n    );\n  }\n  return (\n    <div className={`generic singleProduct ${chatOpen ? \"chatOpen\" : \"\"}`}>\n      <Header />\n      loading\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n      <Footer />\n    </div>\n  );\n};\n\nconst Gallery = ({ images }) => {\n  const [view, setView] = useState(images[0]);\n  return (\n    <div className=\"gallery\">\n      <ImageView img={view} />\n      <div className=\"thumbs\">\n        {images.map((item, i) => (\n          <Img key={i} src={item} onClick={() => setView(item)} />\n        ))}\n        {images.length === 0 && <p>No image was provided by the seller.</p>}\n      </div>\n    </div>\n  );\n};\n\nconst ImageView = ({ img }) => {\n  const [src, setSrc] = useState(img || \"/open_box.png\");\n  const [boundingBody, setBoundingBody] = useState(null);\n  const [applyStyle, setApplyStyle] = useState(false);\n  const [style, setStyle] = useState({});\n  const container = useRef();\n  useLayoutEffect(() => {\n    setBoundingBody(container.current?.getBoundingClientRect());\n  }, []);\n  useEffect(() => {\n    setSrc(img || \"/open_box.png\");\n  }, [img]);\n  return (\n    <div\n      ref={container}\n      className={`mainView ${!img ? \"noImg\" : \"\"}`}\n      onMouseMove={(e) => {\n        if (img) {\n          const x =\n            Math.abs(\n              Math.round(\n                (e.clientX - boundingBody.x) / (boundingBody.width / 100)\n              )\n            ) * 0.65;\n          const y =\n            Math.round(\n              (e.clientY - boundingBody.y) / (boundingBody.height / 100)\n            ) * 0.65;\n          setStyle({\n            transform: `scale(2) translateY(${Math.max(\n              30 + -y,\n              -30\n            )}%) translateX(${Math.max(30 + -x, -30)}%)`,\n          });\n        }\n      }}\n      onTouchStart={(e) => {\n        document.querySelector(\"body\").style.overflow = \"hidden\";\n        setApplyStyle(true);\n      }}\n      onTouchEnd={(e) => {\n        document.querySelector(\"body\").style.overflow = \"auto\";\n        setApplyStyle(false);\n      }}\n      onTouchMove={(e) => {\n        if (img) {\n          const x =\n            Math.abs(\n              Math.round(\n                (e.touches[0].clientX - boundingBody.x) /\n                  (boundingBody.width / 100)\n              )\n            ) * 0.65;\n          const y =\n            Math.round(\n              (e.touches[0].clientY - boundingBody.y) /\n                (boundingBody.height / 100)\n            ) * 0.65;\n          setStyle({\n            transform: `scale(2) translateY(${Math.max(\n              30 + -y,\n              -30\n            )}%) translateX(${Math.max(30 + -x, -30)}%)`,\n            transition: \"none\",\n          });\n        }\n      }}\n      onMouseEnter={() => setApplyStyle(true)}\n      onMouseLeave={() => setApplyStyle(false)}\n    >\n      <img\n        className={applyStyle ? \"scale\" : \"\"}\n        style={applyStyle ? style : {}}\n        src={src}\n        onError={() => setSrc(\"/img_err.png\")}\n      />\n    </div>\n  );\n};\n\nexport const Cart = () => {\n  const { setCart, cart } = useContext(SiteContext);\n  const [loading, setLoading] = useState(true);\n  const [carts, setCarts] = useState(null);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"/api/getCartDetail\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        cart,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          setCarts(data.carts);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get cart detail. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [cart]);\n  if (carts) {\n    return (\n      <div className=\"fullCart\">\n        <div className=\"head\">\n          <h1>Cart</h1>\n        </div>\n        <div className=\"allCarts\">\n          {carts.map(({ seller, products }) =>\n            products?.length ? (\n              <Shop\n                key={seller._id}\n                seller={seller}\n                products={products}\n                loading={loading}\n              />\n            ) : null\n          )}\n          {carts?.length === 0 && <p>Cart is empty</p>}\n        </div>\n        <Modal open={msg} className=\"msg\">\n          {msg}\n        </Modal>\n      </div>\n    );\n  }\n  return (\n    <div className=\"fullCart\">\n      <div className=\"head\">\n        <h1>Cart</h1>\n      </div>\n      <div className=\"allCarts\">Cart is empty.</div>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst Shop = ({ seller, products, loading }) => {\n  const { user, setCart, config } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [deliveryDetail, setDeliveryDetail] = useState({\n    name: user.firstName + \" \" + user.lastName,\n    phone: user.phone,\n  });\n  const [addressForm, setAddressForm] = useState(false);\n  const [milestoneForm, setMilestoneForm] = useState(false);\n  const [showTerms, setShowTerms] = useState(false);\n  const [couponCode, setCouponCode] = useState(\"\");\n  const [validCoupon, setValidCoupon] = useState(false);\n  const [couponCodeForm, setCouponCodeForm] = useState(false);\n  const productPrice = products.reduce(\n    (a, c) =>\n      (\n        a +\n        calculatePrice({ product: c.product, gst: seller.gst }) * c.qty\n      ).fix(),\n    0\n  );\n  const couponCodeDiscount =\n    (validCoupon?.type === \"percent\" &&\n      Math.min(\n        (productPrice / 100) * validCoupon.amount,\n        validCoupon.maxDiscount\n      )) ||\n    (validCoupon?.type === \"flat\" && validCoupon?.amount) ||\n    0;\n  const total =\n    +(productPrice - couponCodeDiscount) +\n    (seller.shopInfo?.shippingCost || 0).fix();\n  const fee = (total * ((100 + config.fee) / 100) - total).fix();\n  return (\n    <>\n      <div className=\"shop\">\n        <div className=\"seller\">\n          <div className=\"profile\">\n            <Img src={seller.profileImg || \"/profile-user.jpg\"} />\n            <p className=\"name\">\n              {seller.firstName} {seller.lastName} •{\" \"}\n              <span className=\"role\">Seller</span>\n              <span className=\"contact\">{seller.phone}</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"cart\">\n          <ul className=\"items\">\n            {products.map(({ product, qty }, i) => (\n              <CartItem key={i} gst={seller.gst} product={product} qty={qty} />\n            ))}\n            <div className=\"total\">\n              <p>\n                <label>Total</label>₹{productPrice}\n              </p>\n              <hr />\n              <div className=\"coupon\">\n                {!validCoupon ? (\n                  <label>Coupon</label>\n                ) : (\n                  <label>\n                    Coupon Code {validCoupon.code}\n                    <br />\n                    Discount{\" \"}\n                    {validCoupon.type === \"percent\" ? (\n                      <>\n                        {validCoupon.amount}% (Upto ₹{validCoupon.maxDiscount})\n                      </>\n                    ) : (\n                      <>flat</>\n                    )}\n                  </label>\n                )}\n                {!couponCodeForm && !validCoupon && (\n                  <button onClick={() => setCouponCodeForm(true)}>\n                    Add Coupon\n                  </button>\n                )}\n                {validCoupon && <span>₹{couponCodeDiscount}</span>}\n                {couponCodeForm && (\n                  <form\n                    onSubmit={(e) => {\n                      e.preventDefault();\n                      fetch(`/api/getCoupon/${couponCode}`)\n                        .then((res) => res.json())\n                        .then(({ code, coupon }) => {\n                          if (code === \"ok\") {\n                            if (\n                              !coupon.sellers ||\n                              coupon.sellers?.filter(\n                                (_id) => _id === seller._id\n                              ).length === 0\n                            ) {\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Err_svg />\n                                    <h4>\n                                      This seller does not accept this coupon\n                                      code.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            } else if (total < coupon.threshold) {\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Err_svg />\n                                    <h4>\n                                      Coupon code {couponCode} can only be\n                                      applied on order more that ₹\n                                      {coupon.threshold}.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            } else if (coupon.usage >= coupon.validPerUser) {\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Err_svg />\n                                    <h4>\n                                      Each user can use this Coupon{\" \"}\n                                      {coupon.validPerUser} times.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            } else {\n                              setValidCoupon(coupon);\n                              setCouponCodeForm(false);\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Succ_svg />\n                                    <h4>\n                                      Coupon code {couponCode} has been applied.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            }\n                          } else {\n                            setMsg(\n                              <>\n                                <button onClick={() => setMsg(null)}>\n                                  Okay\n                                </button>\n                                <div>\n                                  <Err_svg />\n                                  <h4>Invalid Coupon code.</h4>\n                                </div>\n                              </>\n                            );\n                          }\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                          setMsg(\n                            <>\n                              <button onClick={() => setMsg(null)}>Okay</button>\n                              <div>\n                                <Err_svg />\n                                <h4>\n                                  Could not apply Coupon code. Make sure you're\n                                  online.\n                                </h4>\n                              </div>\n                            </>\n                          );\n                        });\n                    }}\n                  >\n                    <input\n                      required={true}\n                      value={couponCode}\n                      onBlur={(e) => {\n                        if (!couponCode) {\n                          setCouponCodeForm(false);\n                        }\n                      }}\n                      onChange={(e) =>\n                        setCouponCode(e.target.value.toUpperCase())\n                      }\n                    />\n                    <button>Apply</button>\n                  </form>\n                )}\n              </div>\n              <hr />\n              <p>\n                <label>Shipping</label>₹{seller.shopInfo?.shippingCost}\n              </p>\n              <p>\n                <label>Delivery Pay Fee {config.fee}%</label>₹{fee}\n              </p>\n              <hr />\n              <p>\n                <label>Grand total</label>₹{total + fee}\n              </p>\n              {\n                //   <span className=\"note\">\n                //   All tax and fee inclued.\n                //   <Tip>\n                //     Seller specified GST TAX and 10% Delivery Pay Fee applies to\n                //     all orders.\n                //   </Tip>\n                // </span>\n              }\n            </div>\n            <div className=\"terms\">\n              <p>\n                <label>Refundable: </label>\n                {seller.shopInfo?.refundable || \"N/A\"}\n              </p>\n              <p>\n                By proceeding, I agree to seller's all{\" \"}\n                <span className=\"btn\" onClick={() => setShowTerms(true)}>\n                  Terms\n                </span>\n              </p>\n            </div>\n          </ul>\n          <span className=\"devider\" />\n          <div className=\"deliveryDetail\">\n            <div className=\"head\">\n              <h3>Delivery Information</h3>\n              <button onClick={() => setAddressForm(true)}>Edit</button>\n            </div>\n            <ul>\n              {Object.entries(deliveryDetail).map(([key, value], i) => (\n                <li key={i}>\n                  <label>{key}</label>\n                  {value}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div className=\"actions\">\n          <button onClick={() => setMilestoneForm(true)}>Place order</button>\n        </div>\n        <Modal\n          open={addressForm}\n          head={true}\n          label=\"Delivery Address\"\n          setOpen={setAddressForm}\n          className=\"addAddress\"\n        >\n          <AddressForm\n            client={{\n              name: deliveryDetail.name,\n              phone: deliveryDetail.phone,\n              address: deliveryDetail,\n            }}\n            onSuccess={(data) => {\n              setDeliveryDetail((prev) => ({ ...prev, ...data.address }));\n              setAddressForm(false);\n            }}\n            onCancel={() => setAddressForm(false)}\n          />\n        </Modal>\n        <Modal\n          className=\"milestoneRequest\"\n          head={true}\n          label=\"Checkout\"\n          open={milestoneForm}\n          setOpen={setMilestoneForm}\n        >\n          <MilestoneForm\n            action=\"create\"\n            client={seller}\n            definedAmount={total + fee}\n            order={{\n              products,\n              deliveryDetail: {\n                ...deliveryDetail,\n                deliveryWithin: seller.shopInfo?.deliveryWithin,\n              },\n              ...(validCoupon && { couponCode: validCoupon?.code }),\n            }}\n            onSuccess={({ milestone, order }) => {\n              setCart((prev) =>\n                prev.filter(({ product }) => {\n                  return !order.products.some(\n                    (order) => order.product._id === product._id\n                  );\n                })\n              );\n              setMilestoneForm(false);\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4>Order successfully submitted.</h4>\n                    <Link to=\"/account/myShopping/orders\">View All orders</Link>\n                  </div>\n                </>\n              );\n            }}\n          />\n        </Modal>\n        <Modal\n          open={showTerms}\n          setOpen={setShowTerms}\n          head={true}\n          label=\"Seller's Terms\"\n          className=\"shopTerms\"\n        >\n          <ul>\n            {seller.shopInfo?.terms?.map((item, i) => (\n              <li key={i}>{item}</li>\n            ))}\n          </ul>\n        </Modal>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </div>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport const CartItem = ({ product, gst, qty }) => {\n  const { setCart } = useContext(SiteContext);\n  const price = calculatePrice({ product, gst: gst || product.user?.gst });\n  return (\n    <li className={`item ${!product.images.length && \"noImg\"}`}>\n      <Img src={product.images[0] || \"/open_box.png\"} />\n      <div className=\"detail\">\n        <p className=\"name\">{product.name}</p>\n        <div className=\"qty\">\n          QTY:{\" \"}\n          <div className=\"addRemove\">\n            <button\n              onClick={() => {\n                setCart((prev) =>\n                  prev\n                    .map((item) => {\n                      if (item.product._id === product._id) {\n                        return {\n                          ...item,\n                          qty: item.qty - 1,\n                        };\n                      } else {\n                        return item;\n                      }\n                    })\n                    .filter((item) => item.qty > 0)\n                );\n              }}\n            >\n              <Minus_svg />\n            </button>\n            {qty}\n            <button\n              onClick={() => {\n                setCart((prev) =>\n                  prev.map((item) => {\n                    if (item.product._id === product._id) {\n                      return {\n                        ...item,\n                        qty: item.qty + 1,\n                      };\n                    } else {\n                      return item;\n                    }\n                  })\n                );\n              }}\n            >\n              <Plus_svg />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"price\">\n        <span className=\"qty\">\n          {price} x {qty}\n        </span>\n        ₹{(price * qty).fix()}\n      </div>\n      {gst?.verified && <Tip>Including {product.gst}% GST.</Tip>}\n    </li>\n  );\n};\n\nexport default Marketplace;\n"],"sourceRoot":""}