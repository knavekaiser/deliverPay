{"version":3,"sources":["components/OrderManagement.js"],"names":["MilestoneForm","lazy","then","mod","default","SingleOrder","order","setOrders","selectAll","setBatch","batch","actionsRef","useRef","checkRef","history","useHistory","useContext","SiteContext","user","useState","selected","setSelected","msg","setMsg","cancelOrder","fetch","method","headers","body","JSON","stringify","_id","res","json","data","code","prev","map","item","status","onClick","catch","err","console","log","acceptOrder","requestCancellation","useEffect","filter","className","e","nativeEvent","path","includes","current","length","push","format","createdAt","buyer","products","reduce","a","c","qty","refundable","milestones","total","ref","icon","to","Confirm","label","question","callback","open","FullOrder","match","userType","setOrder","shopInfo","shippingCost","setShipping","milestoneForm","setMilestoneForm","fileUpload","setFileUpload","declineOrder","markAsShipped","markAsDelivered","params","productPrice","calculatePrice","product","gst","fix","couponCodeDiscount","coupon","type","Math","min","amount","maxDiscount","fee","lable","Object","entries","deliveryDetail","i","key","value","deliveryWithin","available","src","images","name","toString","milestone","dscr","files","links","terms","head","setOpen","action","definedAmount","client","onSuccess","FileUploadForm","loading","setLoading","setFiles","submit","UploadFiles","fileLinks","onSubmit","preventDefault","title","multiple","accept","required","onChange","Orders","categories","setTotal","page","setPage","perPage","setPerPage","setStatus","search","setSearch","column","sort","dateRange","setDateRange","orders","setSelectAll","startDate","moment","time","endDate","setHours","URLSearchParams","q","dateFrom","dateTo","defaultValue","options","xmlns","width","height","viewBox","id","d","transform","fill","opacity","target","placeholder","range","btns","currentPage"],"mappings":"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","file":"static/js/9.6c507326.chunk.js","sourcesContent":["import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  useContext,\n  lazy,\n} from \"react\";\nimport {\n  Succ_svg,\n  Err_svg,\n  Plus_svg,\n  X_svg,\n  Combobox,\n  Pagination,\n  Checkbox,\n  calculateDiscount,\n  calculatePrice,\n  Actions,\n  Chev_down_svg,\n  User,\n  Arrow_left_svg,\n  NumberInput,\n  Media,\n  UploadFiles,\n  FileInput,\n  Img,\n  Moment,\n  moment,\n  InputDateRange,\n} from \"./Elements\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { SiteContext } from \"../SiteContext\";\nimport { Modal, Confirm } from \"./Modal\";\nimport { DateRange } from \"react-date-range\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { toast } from \"react-toastify\";\nconst MilestoneForm = lazy(() =>\n  import(\"./Forms\").then((mod) => ({ default: mod.MilestoneForm }))\n);\n\nconst Orders = ({ categories }) => {\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(20);\n  const [status, setStatus] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState({\n    column: \"createdAt\",\n    order: \"dsc\",\n  });\n  const [dateRange, setDateRange] = useState(null);\n  const [orders, setOrders] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [batch, setBatch] = useState([]);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    const startDate = moment({\n      time: dateRange?.startDate,\n      format: \"YYYY-MM-DD\",\n    });\n    const endDate = moment({\n      time: dateRange?.endDate.setHours(24, 0, 0, 0),\n      format: \"YYYY-MM-DD\",\n    });\n    fetch(\n      `/api/getOrders?${new URLSearchParams({\n        user: \"seller\",\n        ...(search && { q: search }),\n        page,\n        perPage,\n        sort: sort.column,\n        order: sort.order,\n        ...(dateRange && {\n          dateFrom: startDate,\n          dateTo: endDate,\n        }),\n        ...(status && { status }),\n      })}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrders(data.orders);\n          setTotal(data.total);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get orders.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [status, search, page, perPage, dateRange]);\n  useEffect(() => {\n    if (selectAll) {\n    } else {\n      setBatch([]);\n    }\n  }, [selectAll]);\n  useEffect(() => {\n    if (batch.length === 0) {\n      setSelectAll(false);\n    }\n  }, [batch]);\n  return (\n    <>\n      <div className=\"benner\">\n        <p>Order Management</p>\n      </div>\n      <div className=\"filters\">\n        <section>\n          <label>Total:</label>\n          {total}\n        </section>\n        <section>\n          <label>Per Page:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"20\", value: 20 },\n              { label: \"30\", value: 30 },\n              { label: \"50\", value: 50 },\n            ]}\n            onChange={(e) => setPerPage(e.value)}\n          />\n        </section>\n        <section className=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 23 23\"\n          >\n            <path\n              id=\"Icon_ionic-ios-search\"\n              data-name=\"Icon ionic-ios-search\"\n              d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n              transform=\"translate(-4.5 -4.493)\"\n              fill=\"#707070\"\n              opacity=\"0.74\"\n            />\n          </svg>\n          <input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search for Buyer\"\n          />\n          {search && (\n            <button onClick={() => setSearch(\"\")}>\n              <X_svg />\n            </button>\n          )}\n        </section>\n        <section className=\"category\">\n          <label>Status:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"All\", value: \"\" },\n              { label: \"Pending\", value: \"pending\" },\n              { label: \"Approved\", value: \"approved\" },\n              { label: \"Cancelled\", value: \"cancelled\" },\n              { label: \"Hold\", value: \"Hold\" },\n              { label: \"Shipped\", value: \"shipped\" },\n              { label: \"Delivered\", value: \"delivered\" },\n              { label: \"Refunded\", value: \"refunded\" },\n            ]}\n            onChange={(e) => setStatus(e.value)}\n          />\n        </section>\n        <section className={`date`}>\n          <InputDateRange\n            dateRange={dateRange}\n            onChange={(range) => setDateRange(range)}\n          />\n        </section>\n      </div>\n      {batch.length > 0 && (\n        <div className=\"batchAction\">\n          <button onClick={() => console.log(\"batch delete\")}>Delete</button>\n        </div>\n      )}\n      <table className=\"table orders\">\n        <thead>\n          <tr>\n            {\n              //   <th className=\"checkContainer\">\n              //   <Checkbox\n              //     value={selectAll}\n              //     defaultValue={selectAll}\n              //     onChange={(e) => setSelectAll(e)}\n              //   />\n              // </th>\n            }\n            <th className=\"date\">Date</th>\n            <th>Buyer</th>\n            <th>QTY</th>\n            <th>Refundable</th>\n            <th>Milestone</th>\n            <th>Status</th>\n            <th>Total Price</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders.map((order, i) => (\n            <SingleOrder\n              key={i}\n              order={order}\n              setOrders={setOrders}\n              selectAll={selectAll}\n              setBatch={setBatch}\n              batch={batch}\n            />\n          ))}\n          {orders.length === 0 && (\n            <tr className=\"placeholder\">\n              <td>No product yet.</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <Pagination\n        total={total}\n        btns={5}\n        currentPage={page}\n        perPage={perPage}\n        setPage={setPage}\n      />\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nconst SingleOrder = ({ order, setOrders, selectAll, setBatch, batch }) => {\n  const actionsRef = useRef();\n  const checkRef = useRef();\n  const history = useHistory();\n  const { user } = useContext(SiteContext);\n  const [selected, setSelected] = useState(selectAll || false);\n  const [edit, setEdit] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const cancelOrder = () => {\n    fetch(\"/api/declineOrder\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: order._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrders((prev) =>\n            prev.map((item) => {\n              if (item._id === order._id) {\n                return {\n                  ...item,\n                  status: data.order?.status,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not cancel order. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not cancel order. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const acceptOrder = () => {\n    fetch(\"/api/acceptOrder\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: order._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrders((prev) =>\n            prev.map((item) => {\n              if (item._id === order._id) {\n                return {\n                  ...item,\n                  status: data.order?.status,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Orders does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not accept order. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const requestCancellation = () => {\n    fetch(\"/api/requestCancellation\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: order._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrders((prev) =>\n            prev.map((item) => {\n              if (item._id === order._id) {\n                return {\n                  ...item,\n                  status: data.order?.status,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not cancel order. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not cancel order. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    setSelected(selectAll);\n  }, [selectAll]);\n  useEffect(() => {\n    if (selected) {\n      setBatch((prev) => [...prev, order._id]);\n    } else {\n      setBatch((prev) => prev.filter((item) => item !== order._id));\n    }\n  }, [selected]);\n  return (\n    <>\n      <tr\n        className={`order ${selected ? \"selected\" : \"\"}`}\n        onClick={(e) => {\n          if (\n            e.nativeEvent.path.includes(actionsRef.current) ||\n            e.nativeEvent.path.includes(checkRef.current) ||\n            batch.length > 0\n          ) {\n          } else {\n            history.push(`/account/myShop/orders/${order._id}`);\n          }\n        }}\n      >\n        {\n          //   <td className=\"checkContainer\" ref={checkRef}>\n          //   <Checkbox\n          //     defaultValue={selected}\n          //     value={selected}\n          //     onChange={(e) => {\n          //       setSelected(e);\n          //     }}\n          //   />\n          // </td>\n        }\n        <td className=\"date\">\n          <Moment format=\"DD MMM YYYY, hh:mm a\">{order.createdAt}</Moment>\n        </td>\n        <td className=\"user\">\n          <User user={order.buyer} />\n        </td>\n        <td>{order.products.reduce((a, c) => a + c.qty, 0)}</td>\n        <td>{order.refundable || \"N/A\"}</td>\n        <td>{order.milestones.length || \"N/A\"}</td>\n        <td>{order.status}</td>\n        <td>₹{order.total}</td>\n        <td ref={actionsRef}>\n          {batch.length === 0 && (\n            <Actions icon={<Chev_down_svg />}>\n              <Link to={`/account/myShopping/orders/${order._id}`}>\n                View Detail\n              </Link>\n              {order.status === \"pending\" && (\n                <>\n                  <Link\n                    to=\"#\"\n                    onClick={(e) => {\n                      Confirm({\n                        label: \"Accept Order\",\n                        question: \"You sure want to accept this order?\",\n                        callback: acceptOrder,\n                      });\n                    }}\n                  >\n                    Accept order\n                  </Link>\n                  <Link\n                    to=\"#\"\n                    onClick={(e) => {\n                      Confirm({\n                        label: \"Order Cancellation\",\n                        question: \"You sure want to cancel this order?\",\n                        callback: cancelOrder,\n                      });\n                    }}\n                  >\n                    Cancel order\n                  </Link>\n                </>\n              )}\n              {order.status === \"approved\" && (\n                <Link\n                  to=\"#\"\n                  onClick={(e) => {\n                    Confirm({\n                      label: \"Order Cancellation\",\n                      question:\n                        \"You sure want to request cancellation for this order?\",\n                      callback: requestCancellation,\n                    });\n                  }}\n                >\n                  Request Cancellation\n                </Link>\n              )}\n            </Actions>\n          )}\n        </td>\n      </tr>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport const FullOrder = ({ history, match }) => {\n  const { user, userType } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [order, setOrder] = useState(null);\n  const [shipping, setShipping] = useState(user.shopInfo?.shippingCost || 0);\n  const [refundable, setRefundable] = useState(null);\n  const [addTerm, setAddTerm] = useState(\"\");\n  const [milestoneForm, setMilestoneForm] = useState(false);\n  const [fileUpload, setFileUpload] = useState(false);\n  const milestoneTimeout = useRef();\n  const acceptOrder = () => {\n    fetch(\"/api/acceptOrder\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id: order._id,\n        // products: order.products,\n        // shippingCost: shipping,\n        // refundable,\n        // terms,\n        // total,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder((prev) => ({ ...prev, status: \"approved\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Order approved.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Orders does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not accept order. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const declineOrder = () => {\n    fetch(\"/api/declineOrder\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: order._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder((prev) => ({ ...prev, status: \"declined\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Order declined.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Orders does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not decline order. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const markAsShipped = () => {\n    fetch(\"/api/updateOrder\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id: order._id,\n        status: \"shipped\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder((prev) => ({ ...order, status: \"shipped\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>\n                  Order has been updated. Don't forget to upload proof of\n                  shipping below.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Order could not be updated. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Order could not be updated. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const markAsDelivered = () => {\n    fetch(\"/api/updateOrder\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id: order._id,\n        status: \"delivered\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder((prev) => ({ ...order, status: \"delivered\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>\n                  Order has been updated. Don't forget to upload proof of\n                  delivery below.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Order could not be updated. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Order could not be updated. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    fetch(`/api/singleOrder?_id=${match.params._id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder(data.order);\n          setShipping(data.shippingCost);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Orders does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get order. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, []);\n  if (order) {\n    const productPrice = order.products.reduce(\n      (a, c) =>\n        (a + calculatePrice({ product: c.product, gst: true }) * c.qty).fix(),\n      0\n    );\n    const couponCodeDiscount =\n      (order.coupon?.type === \"percent\" &&\n        Math.min(\n          (productPrice / 100) * order.coupon.amount,\n          order.coupon.maxDiscount\n        )) ||\n      (order.coupon?.type === \"flat\" && order.coupon?.amount) ||\n      0;\n    const fee = (\n      ((productPrice - couponCodeDiscount + order.shippingCost) / 100) *\n      order.fee\n    ).fix();\n    return (\n      <>\n        <div className=\"actions\">\n          <Link\n            to={`/account/${\n              userType === \"seller\" ? \"myShop\" : \"myShopping\"\n            }/orders`}\n            className=\"back\"\n          >\n            <Arrow_left_svg />\n            Back\n          </Link>\n          {order.status === \"approved\" && (\n            <button\n              onClick={() =>\n                Confirm({\n                  label: \"Mark Order as Shipped\",\n                  question: \"Did you ship the order?\",\n                  callback: markAsShipped,\n                })\n              }\n            >\n              Mark as Shipped\n            </button>\n          )}\n          {order.status === \"shipped\" && (\n            <button\n              onClick={() =>\n                Confirm({\n                  label: \"Mark Order as Delivered\",\n                  question: \"Has the order been delivered?\",\n                  callback: markAsDelivered,\n                })\n              }\n            >\n              Mark as Delivered\n            </button>\n          )}\n          {order.status === \"pending\" && (\n            <>\n              <button\n                onClick={() => {\n                  Confirm({\n                    lable: \"Accept Order\",\n                    question: <>You sure want to accept this order?</>,\n                    callback: acceptOrder,\n                  });\n                }}\n              >\n                Accept\n              </button>\n              <button\n                onClick={() =>\n                  Confirm({\n                    label: \"Decline Order\",\n                    question: \"You sure want to decline this order?\",\n                    callback: declineOrder,\n                  })\n                }\n              >\n                Decline\n              </button>\n            </>\n          )}\n        </div>\n        <div className=\"singleOrder\">\n          <div className=\"summery\">\n            <h3>Order Summery</h3>\n            <ul>\n              <li>\n                <label>Buyer</label>\n                <User user={order.buyer} />\n              </li>\n              <li>\n                <label>Order ID</label>\n                {order._id}\n              </li>\n              <li>\n                <label>Status</label>\n                {order.status}\n              </li>\n              <li>\n                <label>Submitted at</label>\n                <Moment format=\"DD MMM YYYY, hh:mma\">{order.createdAt}</Moment>\n              </li>\n              <li></li>\n              <li className=\"devide\">\n                <label>Delivery Address</label>\n                <span />\n              </li>\n              {Object.entries(order.deliveryDetail).map(([key, value], i) =>\n                key === \"deliveryWithin\" ? (\n                  <li key={i}>\n                    <label>Delivery within</label>\n                    {order.deliveryDetail.deliveryWithin} days\n                  </li>\n                ) : (\n                  <li key={i}>\n                    <label>{key}</label>\n                    {value}\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n          <div className=\"products\">\n            <h3>Products</h3>\n            <ul>\n              {order.products.map(({ product, qty, available }, i) => (\n                <li key={i}>\n                  <Img src={product.images[0] || \"/open_box.png\"} />\n                  <div className=\"detail\">\n                    <p>{product.name}</p>\n                    <p className=\"qty\">QTY: {qty}</p>\n                    {order.status === \"pending\" && (\n                      <p className=\"available\">\n                        Available: {available.toString()}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"price\">\n                    <span>\n                      {calculatePrice({ product, gst: true })} x {qty}\n                    </span>\n                    ₹{(calculatePrice({ product, gst: true }) * qty).fix()}\n                  </div>\n                  {\n                    //   order.status === \"pending\" && (\n                    //   <div className=\"remove\">\n                    //     <button\n                    //       onClick={() => {\n                    //         setOrder((prev) => ({\n                    //           ...prev,\n                    //           products: prev.products.filter((cartProduct) => {\n                    //             console.log(cartProduct, product);\n                    //             return cartProduct.product._id !== product._id;\n                    //           }),\n                    //         }));\n                    //       }}\n                    //     >\n                    //       <X_svg />\n                    //     </button>\n                    //   </div>\n                    // )\n                  }\n                </li>\n              ))}\n            </ul>\n            <div className=\"total\">\n              <div className=\"data\">\n                <label>Total</label>₹{productPrice}\n              </div>\n              {order.coupon && (\n                <>\n                  <div className=\"data\">\n                    <label>\n                      Coupon Code {order.coupon.code}\n                      <br />\n                      Discount{\" \"}\n                      {order.coupon.type === \"percent\" ? (\n                        <>\n                          {order.coupon.amount}% (Upto ₹\n                          {order.coupon.maxDiscount})\n                        </>\n                      ) : (\n                        <>flat</>\n                      )}\n                    </label>\n                    <span>₹{couponCodeDiscount}</span>\n                  </div>\n                </>\n              )}\n              <div className=\"data\">\n                <label>Shipping</label>₹\n                {\n                  //   order.status === \"pending\" ? (\n                  //   <NumberInput\n                  //     value={shipping}\n                  //     onChange={(e) => setShipping(e.target.value)}\n                  //   />\n                  // ) : (\n                  //   <>{shipping || 0}</>\n                  // )\n                  order.shippingCost\n                }\n              </div>\n              <hr />\n              <div className=\"data\">\n                <label>Delivery Pay fee {order.fee}%</label>₹\n                {(order.total - (order.total / (order.fee + 100)) * 100).fix()}\n              </div>\n              <hr />\n              <div className=\"data\">\n                <label>Grand Total</label>₹{order.total.fix()}\n              </div>\n              <hr />\n              <div className=\"data\">\n                <label>You'll recieve</label>₹\n                {((order.total / (order.fee + 100)) * 100).fix()}\n              </div>\n            </div>\n            {\n              //   <div className=\"deliveryInfo\">\n              //   <section>\n              //     <label>Delivery Time</label>\n              //     {order.status === \"pending\" ? (\n              //       <input\n              //         type=\"datetime-local\"\n              //         value={deliveryTime}\n              //         onChange={(e) => setDeliveryTime(e.target.value)}\n              //       />\n              //     ) : order.deliveryDetail?.deliveryTime ? (\n              //       <Moment format=\"DD MMM YYYY hh:mma\">\n              //         order.deliveryDetail?.deliveryTime\n              //       </Moment>\n              //     ) : (\n              //       <>N/A</>\n              //     )}\n              //   </section>\n              //   <section>\n              //     <label>Refundable</label>\n              //     {order.status === \"pending\" ? (\n              //       <Combobox\n              //         required={true}\n              //         defaultValue={0}\n              //         onChange={(e) => setRefundable(e.value)}\n              //         options={[\n              //           { label: \"No\", value: null },\n              //           {\n              //             label: \"Upto 24 Hours After Delivery\",\n              //             value: \"Upto 24 Hours After Delivery\",\n              //           },\n              //           {\n              //             label: \"Upto 7 Days After Delivery\",\n              //             value: \"Upto 7 Days After Delivery\",\n              //           },\n              //           {\n              //             label: \"Upto 15 Days After Delivery\",\n              //             value: \"Upto 15 Days After Delivery\",\n              //           },\n              //         ]}\n              //       />\n              //     ) : (\n              //       <>{order.refundable || \"N/A\"}</>\n              //     )}\n              //   </section>\n              // </div>\n            }\n          </div>\n          <div className=\"milestones\">\n            <h3>\n              Milestones\n              {\n                //   (order.status === \"approved\" ||\n                //   order.status === \"shipped\" ||\n                //   order.status === \"delivered\") && (\n                //   <button onClick={() => setMilestoneForm(true)}>\n                //     Request Milestone\n                //   </button>\n                // )\n              }\n            </h3>\n            <p className=\"subtitle\">Click to view milestone detail.</p>\n            {\n              // {order.status === \"pending\" ? (\n              //   <p>Buyer can create milestones after you accept the order.</p>\n              // ) : (\n            }\n            <table>\n              <thead>\n                <tr>\n                  <td>Date</td>\n                  <td>Descrption</td>\n                  <td>Amount</td>\n                  <td>Status</td>\n                </tr>\n              </thead>\n              <tbody>\n                {order.milestones.map((milestone) => (\n                  <tr\n                    key={milestone._id}\n                    onClick={() =>\n                      history.push(`/account/hold?q=${milestone._id}`)\n                    }\n                  >\n                    <td>\n                      <Moment format=\"DD MMM YYYY, hh:mma\">\n                        {milestone.createdAt}\n                      </Moment>\n                    </td>\n                    <td>{milestone.dscr}</td>\n                    <td>₹{milestone.amount}</td>\n                    <td>{milestone.status}</td>\n                  </tr>\n                ))}\n                {order.milestones.length === 0 && (\n                  <tr className=\"placeholdert\">\n                    <td>Nothing yet.</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n            {\n              // )}\n            }\n          </div>\n          <div className=\"delivery\">\n            <h3>\n              Proof of delivery\n              {(order.status === \"approved\" || order.status === \"shipped\") && (\n                <button onClick={() => setFileUpload(true)}>\n                  Upload proof of delivery\n                </button>\n              )}\n            </h3>\n            {order.files?.length > 0 ? (\n              <div className=\"thumbs\">\n                <Media links={order.files} />\n              </div>\n            ) : (\n              <>No files added.</>\n            )}\n          </div>\n          <section className=\"terms\">\n            <h3>Return Policy Terms</h3>\n            <ul>\n              {order.terms?.map((item, i) => (\n                <li key={i}>\n                  {item}{\" \"}\n                  {\n                    //   order.status === \"pending\" && (\n                    //   <button\n                    //     type=\"button\"\n                    //     onClick={() =>\n                    //       setTerms((prev) => prev.filter((term) => term !== item))\n                    //     }\n                    //   >\n                    //     <X_svg />\n                    //   </button>\n                    // )\n                  }\n                </li>\n              ))}\n              {\n                //   order.status === \"pending\" && (\n                //   <section className=\"addTerm\">\n                //     <TextareaAutosize\n                //       value={addTerm}\n                //       placeholder=\"Add auditional term\"\n                //       onChange={(e) => setAddTerm(e.target.value)}\n                //     />\n                //     <button\n                //       type=\"button\"\n                //       onClick={() => {\n                //         setTerms((prev) =>\n                //           addTerm\n                //             ? [\n                //                 ...prev.filter((term) => term !== addTerm),\n                //                 addTerm,\n                //               ]\n                //             : prev\n                //         );\n                //         setAddTerm(\"\");\n                //       }}\n                //     >\n                //       Add Term\n                //     </button>\n                //   </section>\n                // )\n              }\n            </ul>\n          </section>\n        </div>\n        <Modal\n          head={true}\n          label=\"Create Milestone\"\n          setOpen={setMilestoneForm}\n          className=\"milestoneRequest\"\n          open={milestoneForm}\n        >\n          <MilestoneForm\n            action=\"request\"\n            definedAmount={order.total}\n            client={order.buyer}\n            order={order._id}\n            onSuccess={(milestone) => {\n              setMilestoneForm(false);\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4 className=\"amount\">₹{milestone?.amount}</h4>\n                    <h4>Milestone has been requested</h4>\n                  </div>\n                  <Link to=\"/account/hold\" onClick={() => setMsg(null)}>\n                    Check your Delivery pay Hold\n                  </Link>\n                </>\n              );\n              setOrder((prev) => ({\n                ...prev,\n                milestones: [...prev.milestones, milestone],\n              }));\n            }}\n          />\n        </Modal>\n        <Modal\n          head={true}\n          label=\"Upload proof of shipping & delivery\"\n          setOpen={setFileUpload}\n          open={fileUpload}\n          className=\"fileUpload\"\n        >\n          <FileUploadForm\n            order={order}\n            onSuccess={(order) => {\n              setFileUpload(false);\n              setOrder((prev) => ({ ...prev, files: order.files }));\n            }}\n          />\n        </Modal>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </>\n    );\n  }\n  return <>Loading</>;\n};\nconst FileUploadForm = ({ order, onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const submit = async () => {\n    setLoading(true);\n    const fileLinks = files.length ? await UploadFiles({ files, setMsg }) : [];\n    fetch(\"/api/updateOrder\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: order._id, files: fileLinks }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.order);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not upload files. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not upload files. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          Confirm({\n            title: \"Upload Proof of Shipping & Delivery\",\n            question: (\n              <>\n                You sure want to upload these files?\n                <span className=\"note\">\n                  Keep in mind these files can not be deleted later.\n                </span>\n              </>\n            ),\n            callback: submit,\n          });\n        }}\n      >\n        <section>\n          <label>Upload Images of the products, shipment reciept etc.</label>\n          <FileInput\n            multiple={true}\n            accept=\"image/*\"\n            required={true}\n            onChange={(files) => setFiles(files)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\">Submit</button>\n        </section>\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport default Orders;\n"],"sourceRoot":""}