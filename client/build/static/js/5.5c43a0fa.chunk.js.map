{"version":3,"sources":["components/Wallet.js"],"names":["generateGreetings","currentHour","Date","getHours","Graph","data","max","sort","a","b","balance","fix","className","map","month","i","style","height","_id","PaymentMethodForm","onSuccess","useState","type","setType","onClick","NetBankingForm","UpiForm","id","setId","onSubmit","e","preventDefault","value","required","name","onChange","target","placeholder","BankCardForm","prefill","setUser","useContext","SiteContext","brand","setBrand","nameOnCard","setName","cardNumber","setCardNumber","expMonth","setExpMonth","expYear","setExpYear","cvv","setCvv","unsupporetdCard","setUnsuppportedCard","years","year","getFullYear","push","label","toString","substr","msg","setMsg","useEffect","setTimeout","fetch","method","headers","body","JSON","stringify","exp","then","res","json","paymentMethod","prev","paymentMethods","item","catch","err","console","log","match","options","open","bank","setBank","ifsc","setIfsc","city","setCity","accountNumber","setAccountNumber","accountType","BankCard","card","src","BankAccount","account","Cards","container","useRef","setStyle","wrapperStyle","setWrapperStyle","index","setIndex","paymentForm","setPaymentForm","useLayoutEffect","width","current","getBoundingClientRect","transform","ref","__t","length","xmlns","viewBox","d","fill","x","y","filterUnits","dx","dy","input","stdDeviation","result","floodOpacity","operator","in2","in","filter","stroke","head","setOpen","Transactions","transactions","setTransactions","status","transaction","SingleTransaction","icon","amount","client","firstName","lastName","note","Math","abs","Wallet","history","location","user","setBalance","monthlyBalance","setMonthlyBalance","addMoneyAmount","setAddMoneyAmount","rewards","setRewards","addMoneySuccess","setAddMoneySuccess","setAddMoneyFailed","setLoading","Promise","rej","document","querySelector","scr","createElement","appendChild","onload","onerror","code","format","order","key","Razorpay","window","rzp1","currency","accept_partial","description","image","order_id","handler","transactionId","razorpay_payment_id","razorSignature","razorpay_signature","razorOrderId","razorpay_order_id","message","modal","ondismiss","theme","color","notify","sms","email","reminder_enable","on","handleOrder","step","min","img","dscr","redeemed","reward","pathname","startsWith","x1","y1","x2","y2","gradientUnits","offset","stopColor","rx","clipPath"],"mappings":"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","file":"static/js/5.5c43a0fa.chunk.js","sourcesContent":["import {\n  useState,\n  useEffect,\n  useContext,\n  useCallback,\n  useRef,\n  useLayoutEffect,\n  Fragment,\n  lazy,\n} from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport { Link, Route } from \"react-router-dom\";\nimport { Modal } from \"./Modal\";\nimport {\n  Combobox,\n  Succ_svg,\n  Err_svg,\n  Plus_svg,\n  Minus_svg,\n  Arrow_up_svg,\n  Arrow_down_svg,\n  Img,\n  Moment,\n} from \"./Elements\";\n\nfunction generateGreetings() {\n  const currentHour = new Date().getHours();\n  if (currentHour >= 3 && currentHour < 12) {\n    return \"Good Morning\";\n  } else if (currentHour >= 12 && currentHour < 15) {\n    return \"Good Afternoon\";\n  } else if (currentHour >= 15 && currentHour < 20) {\n    return \"Good Evening\";\n  } else if (currentHour >= 20 && currentHour < 3) {\n    return \"Good Night\";\n  } else {\n    return \"Hello\";\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((res, rej) => {\n    if (!document.querySelector(`script[src=\"${src}\"]`)) {\n      const scr = document.createElement(\"script\");\n      scr.src = src;\n      document.body.appendChild(scr);\n      scr.onload = () => res(true);\n      scr.onerror = () => rej(true);\n    } else {\n      res(true);\n    }\n  });\n}\n\nconst Wallet = ({ history, location, match }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [balance, setBalance] = useState(0);\n  const [monthlyBalance, setMonthlyBalance] = useState([]);\n  const [addMoneyAmount, setAddMoneyAmount] = useState(\"\");\n  const [rewards, setRewards] = useState([]);\n  const [addMoneySuccess, setAddMoneySuccess] = useState(false);\n  const [addMoneyFailed, setAddMoneyFailed] = useState(false);\n  // const [withdrawMoneyAmount, setWithdrawMoneyAmount] = useState(\"\");\n  // const [withdrawMoneyFail, setWithdrawMoneyFail] = useState(false);\n  // const [withdrawOptions, setWithdrawOptions] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState(null);\n  // const withdrawMoney = (method) => {\n  //   let url;\n  //   let options = {\n  //     method: \"POST\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //   };\n  //   switch (method.__t) {\n  //     case \"BankCard\":\n  //       options.body = JSON.stringify({\n  //         paymentMethod: method.__t,\n  //         amount: withdrawMoneyAmount,\n  //         accountDetail: {\n  //           number: +method.cardNumber,\n  //           name: method.nameOnCard,\n  //         },\n  //       });\n  //       break;\n  //     case \"BankAccount\":\n  //       options.body = JSON.stringify({\n  //         paymentMethod: method.__t,\n  //         amount: withdrawMoneyAmount,\n  //         accountDetail: {\n  //           name: method.name,\n  //           ifsc: method.ifsc,\n  //           account_number: method.accountNumber,\n  //         },\n  //       });\n  //       break;\n  //     case \"VpaAccount\":\n  //       options.body = JSON.stringify({\n  //         paymentMethod: method.__t,\n  //         amount: withdrawMoneyAmount,\n  //         accountDetail: {\n  //           address: method.address,\n  //         },\n  //       });\n  //     default:\n  //       return;\n  //   }\n  //   setLoading(true);\n  //   fetch(\"/api/withdrawMoney\", options)\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       setLoading(false);\n  //       if (data.code === \"ok\") {\n  //         setUser((prev) => ({\n  //           ...prev,\n  //           balance: prev.balance - data.transaction.amount,\n  //         }));\n  //         setBalance((prev) => prev - data.transaction.amount);\n  //         history.push(\"/account/wallet\");\n  //         setMsg(\n  //           <>\n  //             <button onClick={() => setMsg(null)}>Okay</button>\n  //             <div>\n  //               <Succ_svg />\n  //               <h4 className=\"amount\">₹{data.transaction?.amount}</h4>\n  //               <h4>Money withdrawed!</h4>\n  //             </div>\n  //           </>\n  //         );\n  //       } else if (data.code === 403) {\n  //         setMsg(\n  //           <>\n  //             <button onClick={() => setMsg(null)}>Okay</button>\n  //             <div>\n  //               <Err_svg />\n  //               <h4>Insufficient fun.</h4>\n  //             </div>\n  //           </>\n  //         );\n  //       } else {\n  //         setMsg(\n  //           <>\n  //             <button onClick={() => setMsg(null)}>Okay</button>\n  //             <div>\n  //               <Err_svg />\n  //               <h4>Could not withdraw money. Please try again.</h4>\n  //             </div>\n  //           </>\n  //         );\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //       setLoading(false);\n  //       setWithdrawMoneyFail(true);\n  //     });\n  // };\n  const handleOrder = (order, key) => {\n    const Razorpay = window.Razorpay;\n    if (Razorpay) {\n      const options = {\n        key,\n        amount: order.amount,\n        currency: order.currency,\n        accept_partial: false,\n        name: `${user.firstName} ${user.lastName}`,\n        description: \"Add money to Delivery Pay wallet\",\n        image: \"/logo_big.jpg\",\n        order_id: order.id,\n        handler: (res) => {\n          fetch(\"/api/addMoney\", {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              transactionId: res.razorpay_payment_id,\n              razorSignature: res.razorpay_signature,\n              razorOrderId: res.razorpay_order_id,\n            }),\n          })\n            .then((res) => res.json())\n            .then(({ code, user, transaction, message }) => {\n              if (code === \"ok\") {\n                history.push(\"/account/profile/wallet\");\n                setAddMoneyFailed(false);\n                setAddMoneySuccess(transaction);\n                setBalance((prev) => prev + transaction.amount);\n                setAddMoneyAmount(\"\");\n                setLoading(false);\n              } else {\n                setMsg(\n                  <>\n                    <button onClick={() => setMsg(null)}>Okay</button>\n                    <div>\n                      <Err_svg />\n                      <h4>\n                        Error happend. Make sure you're payment details are\n                        correct.\n                      </h4>\n                    </div>\n                  </>\n                );\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n              setAddMoneyFailed(true);\n            });\n        },\n        modal: { ondismiss: () => setLoading(false) },\n        theme: { color: \"#336cf9\" },\n        notify: {\n          sms: true,\n          email: true,\n        },\n        reminder_enable: true,\n      };\n      const rzp1 = new Razorpay(options);\n      rzp1.on(\"payment.failed\", (res) => {\n        setAddMoneyFailed(true);\n        setLoading(false);\n      });\n      rzp1.open();\n    }\n  };\n  const addMoneySubmit = (e) => {\n    e.preventDefault();\n    fetch(\"/api/createAddMoneyOrder\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ amount: addMoneyAmount }),\n    })\n      .then((res) => res.json())\n      .then(({ order, key }) => {\n        setLoading(false);\n        if (order) {\n          handleOrder(order, key);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Error happend. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Error happend. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n    fetch(\"/api/dashboardData\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setMonthlyBalance(data.monthlyBalance);\n          setBalance(data.balance);\n          setRewards(data.rewards);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not update balance.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not update balance.</h4>\n            </div>\n          </>\n        );\n      });\n  }, []);\n  useEffect(() => {\n    if (!addMoneyAmount) {\n      history.push(\"/account/profile/wallet\");\n    }\n    // if (!withdrawMoneyAmount) {\n    //   history.push(\"/account/wallet\");\n    // }\n    setLoading(false);\n  }, [\n    addMoneyAmount,\n    // withdrawMoneyAmount\n  ]);\n  return (\n    <div className=\"walletContainer\">\n      <div className=\"leftSection\">\n        <div className=\"nameTag\">\n          <h2>Hello {user.firstName},</h2>\n          <p className=\"greetings\">{generateGreetings()}</p>\n        </div>\n        <div className=\"balance\">\n          <div className=\"currentBalance\">\n            <p className=\"label\">Wallet Balance</p>\n            <h1>₹ {balance.fix()}</h1>\n            <p className=\"updateTime\">\n              <Moment format=\"ddd, DD MMM YYYY\">{new Date()}</Moment>\n            </p>\n          </div>\n          <Graph data={monthlyBalance} />\n        </div>\n        <div className=\"addWithdraw\">\n          <div className=\"add money\">\n            <p className=\"label\">Add Money</p>\n            <form onSubmit={addMoneySubmit}>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"10\"\n                value={addMoneyAmount}\n                onChange={(e) => setAddMoneyAmount(e.target.value)}\n                placeholder=\"Enter amount\"\n                required={true}\n              />\n              <button>Proceed</button>\n            </form>\n          </div>\n          {\n            //   <div className=\"withdraw money\">\n            //   <p className=\"label\">Withdraw</p>\n            //   <form\n            //     onSubmit={(e) => {\n            //       e.preventDefault();\n            //       if (withdrawMoneyAmount > balance) {\n            //         setMsg(\n            //           <>\n            //             <button onClick={() => setMsg(null)}>Okay</button>\n            //             <div>\n            //               <Err_svg />\n            //               <h4>\n            //                 Enter an amount less or equal to currect balance.\n            //               </h4>\n            //             </div>\n            //           </>\n            //         );\n            //       } else {\n            //         history.push(\"/account/wallet/withdrawMoney\");\n            //       }\n            //     }}\n            //   >\n            //     <input\n            //       type=\"number\"\n            //       step=\"0.01\"\n            //       min=\"10\"\n            //       placeholder=\"Enter ammount\"\n            //       required={true}\n            //       value={withdrawMoneyAmount}\n            //       onChange={(e) => setWithdrawMoneyAmount(e.target.value)}\n            //     />\n            //     <button>Proceed</button>\n            //   </form>\n            // </div>\n          }\n        </div>\n        <div className=\"rewards\">\n          <p className=\"label\">Rewards</p>\n          <ul className=\"cards\">\n            {rewards.map((item, i) => (\n              <li key={i}>\n                <p className=\"rewardName\">{item.name}</p>\n                <div>\n                  {item.img && <Img src={item.img} />}\n                  {item.amount && <p className=\"amount\">₹{item.amount}</p>}\n                  <p className=\"rewardDscr\">{item.dscr}</p>\n                </div>\n                {!item.redeemed && (\n                  <button\n                    className=\"redeem\"\n                    onClick={() => {\n                      setMsg(\n                        <>\n                          <div>\n                            <h4>Redeeming Reward...</h4>\n                          </div>\n                        </>\n                      );\n                      fetch(\"/api/redeemReward\", {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({ _id: item._id }),\n                      })\n                        .then((res) => res.json())\n                        .then((data) => {\n                          if (data.code === \"ok\") {\n                            setRewards((prev) =>\n                              prev.map((item) => {\n                                if (item._id === data.reward._id) {\n                                  return data.reward;\n                                } else {\n                                  return item;\n                                }\n                              })\n                            );\n                            setMsg(\n                              <>\n                                <button onClick={() => setMsg(null)}>\n                                  Okay\n                                </button>\n                                <div>\n                                  <Succ_svg />\n                                  <h4>Reward succefully redeemed</h4>\n                                </div>\n                              </>\n                            );\n                          } else {\n                            setMsg(\n                              <>\n                                <button onClick={() => setMsg(null)}>\n                                  Okay\n                                </button>\n                                <div>\n                                  <Err_svg />\n                                  <h4>Could not redeem reward.</h4>\n                                </div>\n                              </>\n                            );\n                          }\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                          setMsg(\n                            <>\n                              <button onClick={() => setMsg(null)}>Okay</button>\n                              <div>\n                                <Err_svg />\n                                <h4>\n                                  Could not redeem reward. Make sure you're\n                                  online.\n                                </h4>\n                              </div>\n                            </>\n                          );\n                        });\n                    }}\n                  >\n                    Redeem\n                  </button>\n                )}\n              </li>\n            ))}\n            {rewards.length === 0 ? (\n              <li className=\"placeholder\">Nothing yet.</li>\n            ) : null}\n          </ul>\n        </div>\n      </div>\n      <div className=\"rightSection\">\n        <Cards paymentMethods={user.paymentMethods} />\n        <Transactions />\n      </div>\n      <Modal\n        className=\"paymentMethodsForm\"\n        head={true}\n        label=\"Add Payment Method\"\n        setOpen={() => {\n          history.push(\"/account/profile/wallet/addMoney\");\n        }}\n        open={location.pathname.startsWith(\n          \"/account/wallet/addMoney/addPaymentMethod\"\n        )}\n      >\n        <PaymentMethodForm\n          onSuccess={() => history.push(\"/account/profile/wallet/addMoney\")}\n        />\n      </Modal>\n      {\n        //   <Modal\n        //   className=\"addMoney\"\n        //   head={true}\n        //   label=\"Withdraw Money\"\n        //   setOpen={() => {\n        //     history.push(\"/account/wallet\");\n        //   }}\n        //   open={location.pathname.startsWith(\"/account/wallet/withdrawMoney\")}\n        //   style={\n        //     loading\n        //       ? {\n        //           filter: \"grayscale(.4)\",\n        //           pointerEvents: \"none\",\n        //         }\n        //       : {}\n        //   }\n        // >\n        //   <PaymentOption\n        //     label=\"Where do you want to recieve your money?\"\n        //     action={withdrawMoney}\n        //   />\n        // </Modal>\n      }\n      <Modal open={addMoneySuccess} className=\"msg\">\n        <button onClick={() => setAddMoneySuccess(null)}>Okay</button>\n        <div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"158\"\n            height=\"158\"\n            viewBox=\"0 0 158 158\"\n          >\n            <defs>\n              <linearGradient\n                id=\"linear-gradient\"\n                x1=\"-0.298\"\n                y1=\"-0.669\"\n                x2=\"1.224\"\n                y2=\"1.588\"\n                gradientUnits=\"objectBoundingBox\"\n              >\n                <stop offset=\"0\" stopColor=\"#336cf9\" />\n                <stop offset=\"1\" stopColor=\"#1be6d6\" />\n              </linearGradient>\n              <clipPath id=\"clip-path\">\n                <rect width=\"64\" height=\"64\" fill=\"none\" />\n              </clipPath>\n            </defs>\n            <g\n              id=\"Group_163\"\n              data-name=\"Group 163\"\n              transform=\"translate(-0.426 -0.384)\"\n            >\n              <g\n                id=\"Group_103\"\n                data-name=\"Group 103\"\n                transform=\"translate(0 0)\"\n              >\n                <rect\n                  id=\"Rectangle_1104\"\n                  data-name=\"Rectangle 1104\"\n                  width=\"158\"\n                  height=\"158\"\n                  rx=\"79\"\n                  transform=\"translate(0.426 0.384)\"\n                  fill=\"url(#linear-gradient)\"\n                />\n              </g>\n              <g\n                id=\"Component_148_2\"\n                data-name=\"Component 148 – 2\"\n                transform=\"translate(47.426 58.384)\"\n                clipPath=\"url(#clip-path)\"\n              >\n                <rect\n                  id=\"Rectangle_460\"\n                  data-name=\"Rectangle 460\"\n                  width=\"64\"\n                  height=\"64\"\n                  transform=\"translate(0 0)\"\n                  fill=\"none\"\n                />\n                <path\n                  id=\"Checkbox\"\n                  d=\"M25.35,44.087,0,18.737l5.143-5.143L25.35,33.432,58.782,0l5.143,5.143Z\"\n                  transform=\"translate(0 1.728)\"\n                  fill=\"#fff\"\n                />\n              </g>\n            </g>\n          </svg>\n          <h4 className=\"amount\">₹{addMoneySuccess?.amount}</h4>\n          <h4>Money added!</h4>\n        </div>\n      </Modal>\n      {\n        //   <Modal open={withdrawMoneyFail} className=\"msg\">\n        //   <button\n        //     onClick={() => {\n        //       setLoading(false);\n        //       setWithdrawMoneyFail(null);\n        //     }}\n        //   >\n        //     Okay\n        //   </button>\n        //   <div>\n        //     <svg\n        //       xmlns=\"http://www.w3.org/2000/svg\"\n        //       width=\"158\"\n        //       height=\"158\"\n        //       viewBox=\"0 0 158 158\"\n        //     >\n        //       <defs>\n        //         <linearGradient\n        //           id=\"linear-gradient-red\"\n        //           x1=\"-0.298\"\n        //           y1=\"-0.669\"\n        //           x2=\"1.224\"\n        //           y2=\"1.588\"\n        //           gradientUnits=\"objectBoundingBox\"\n        //         >\n        //           <stop offset=\"0\" stopColor=\"#f93389\" />\n        //           <stop offset=\"1\" stopColor=\"#e3003e\" />\n        //         </linearGradient>\n        //       </defs>\n        //       <rect\n        //         id=\"Rectangle_1104\"\n        //         data-name=\"Rectangle 1104\"\n        //         width=\"158\"\n        //         height=\"158\"\n        //         rx=\"79\"\n        //         fill=\"url(#linear-gradient-red)\"\n        //       />\n        //       <g\n        //         id=\"Component_85_8\"\n        //         data-name=\"Component 85 – 8\"\n        //         transform=\"translate(49.472 49.472)\"\n        //       >\n        //         <path\n        //           id=\"Union_3\"\n        //           data-name=\"Union 3\"\n        //           d=\"M29.527,34.9,5.368,59.057,0,53.686,24.158,29.527,0,5.368,5.368,0l24.16,24.158L53.686,0l5.371,5.368L34.9,29.527l24.16,24.158-5.371,5.371Z\"\n        //           fill=\"#fff\"\n        //         />\n        //       </g>\n        //     </svg>\n        //     <h4>Could not withdraw money.</h4>\n        //   </div>\n        // </Modal>\n      }\n      <Modal open={false} className=\"msg\">\n        <button onClick={() => setAddMoneyFailed(null)}>Okay</button>\n        <div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"158\"\n            height=\"158\"\n            viewBox=\"0 0 158 158\"\n          >\n            <defs>\n              <linearGradient\n                id=\"linear-gradient\"\n                x1=\"-0.298\"\n                y1=\"-0.669\"\n                x2=\"1.224\"\n                y2=\"1.588\"\n                gradientUnits=\"objectBoundingBox\"\n              >\n                <stop offset=\"0\" stopColor=\"#f93389\" />\n                <stop offset=\"1\" stopColor=\"#e3003e\" />\n              </linearGradient>\n            </defs>\n            <rect\n              id=\"Rectangle_1104\"\n              data-name=\"Rectangle 1104\"\n              width=\"158\"\n              height=\"158\"\n              rx=\"79\"\n              fill=\"url(#linear-gradient)\"\n            />\n            <g\n              id=\"Component_85_8\"\n              data-name=\"Component 85 – 8\"\n              transform=\"translate(49.472 49.472)\"\n            >\n              <path\n                id=\"Union_3\"\n                data-name=\"Union 3\"\n                d=\"M29.527,34.9,5.368,59.057,0,53.686,24.158,29.527,0,5.368,5.368,0l24.16,24.158L53.686,0l5.371,5.368L34.9,29.527l24.16,24.158-5.371,5.371Z\"\n                fill=\"#fff\"\n              />\n            </g>\n          </svg>\n          <h4>Add money failed</h4>\n        </div>\n      </Modal>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst Graph = ({ data }) => {\n  const max =\n    data.sort((a, b) => (a.balance < b.balance ? 1 : -1))[0]?.balance?.fix() ||\n    0;\n  return (\n    <div className=\"graph\">\n      <p className=\"label\">Analytics</p>\n      <ul className=\"bars\" data-max={`₹ ${max || 0}`}>\n        {data.map((month, i) => {\n          return (\n            <li key={i}>\n              <div\n                className=\"bar\"\n                style={{ height: `${month.balance / (max / 100)}%` }}\n              />\n              <label className=\"month\">{month._id}</label>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nconst PaymentOption = ({ label, action }) => {\n  const { user, setUser } = useContext(SiteContext);\n  return (\n    <div className=\"paymentOptions\">\n      <p className=\"label\">{label}</p>\n      <div className=\"options\">\n        {user.paymentMethods.map((method, i) => (\n          <Fragment key={method._id}>\n            {method.__t === \"BankCard\" && (\n              <BankCard card={method} onClick={(card) => action(card)} />\n            )}\n            {method.__t === \"BankAccount\" && (\n              <BankAccount account={method} onClick={(card) => action(card)} />\n            )}\n          </Fragment>\n        ))}\n        {user.paymentMethods.length === 0 && (\n          <div className=\"placeholder\">No payment method added.</div>\n        )}\n      </div>\n      <Link className=\"addMethodLink\" to=\"addMoney/addPaymentMethod\">\n        Add payment method\n      </Link>\n    </div>\n  );\n};\nconst PaymentMethodForm = ({ onSuccess }) => {\n  const [type, setType] = useState(\"netBanking\");\n  return (\n    <div className=\"addPaymentMethod\">\n      {\n        //   <section className=\"paymentOption\">\n        //   <div className=\"header\" onClick={() => setType(\"upi\")}>\n        //     <div className={`redial ${type === \"upi\" && \"active\"}`}>\n        //       <div className=\"fill\" />\n        //     </div>\n        //     <label>\n        //       UPI <Img src=\"/payment_upi.png\" />\n        //     </label>\n        //   </div>\n        //   {type === \"upi\" && <UpiForm />}\n        // </section>\n      }\n      {\n        //   <section className=\"paymentOption\">\n        //   <div className=\"header\" onClick={() => setType(\"bankCard\")}>\n        //     <div className={`redial ${type === \"bankCard\" && \"active\"}`}>\n        //       <div className=\"fill\" />\n        //     </div>\n        //     <label>\n        //       Add Debit/Credit Card <Img src=\"/payment_visa.png\" />{\" \"}\n        //       <Img src=\"/payment_mc.png\" />\n        //     </label>\n        //   </div>\n        //   {type === \"bankCard\" && <BankCardForm onSuccess={onSuccess} />}\n        // </section>\n      }\n      <section className=\"paymentOption\">\n        <div className=\"header\" onClick={() => setType(\"netBanking\")}>\n          <div className={`redial ${type === \"netBanking\" && \"active\"}`}>\n            <div className=\"fill\" />\n          </div>\n          <label>Net Banking</label>\n        </div>\n        {type === \"netBanking\" && <NetBankingForm onSuccess={onSuccess} />}\n      </section>\n    </div>\n  );\n};\n\nexport const UpiForm = () => {\n  const [id, setId] = useState(\"\");\n  const submit = (e) => {\n    e.preventDefault();\n    setId(\"Coming soon!\");\n  };\n  return (\n    <form className=\"paymentMethodForm upi\" onSubmit={submit}>\n      <label>Please enter your UPI ID</label>\n      <section>\n        <input\n          type=\"text\"\n          value={id}\n          required={true}\n          name=\"upiId\"\n          onChange={(e) => setId(e.target.value)}\n          placeholder=\"Ex: MobileNumber@upi\"\n        />\n        <button type=\"submit\">Verify</button>\n      </section>\n    </form>\n  );\n};\nexport const BankCardForm = ({ prefill, onSuccess }) => {\n  const { setUser } = useContext(SiteContext);\n  const [brand, setBrand] = useState(prefill?.brand || null);\n  const [name, setName] = useState(prefill?.nameOnCard || \"\");\n  const [cardNumber, setCardNumber] = useState(prefill?.cardNumber || \"\");\n  const [expMonth, setExpMonth] = useState(\"\");\n  const [expYear, setExpYear] = useState(\"\");\n  const [cvv, setCvv] = useState(prefill?.cvv || \"\");\n  const [unsupporetdCard, setUnsuppportedCard] = useState(false);\n  const years = (() => {\n    const year = new Date().getFullYear();\n    const years = [];\n    for (var i = 0; i < 15; i++) {\n      years.push({ label: year + i, value: (year + i).toString().substr(2) });\n    }\n    return years;\n  })();\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {}, [expYear, expMonth]);\n  const submit = (e) => {\n    e.preventDefault();\n    if (brand === null) {\n      setUnsuppportedCard(true);\n      setTimeout(() => setUnsuppportedCard(false), 1500);\n      return;\n    }\n    fetch(prefill ? \"/api/editPaymentMethod\" : \"/api/addPaymentMethod\", {\n      method: prefill ? \"PATCH\" : \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        type: \"BankCard\",\n        brand,\n        nameOnCard: name,\n        cardNumber,\n        exp: `${expMonth}/${expYear}`,\n        cvv,\n        ...(prefill && { _id: prefill._id }),\n      }),\n    })\n      .then((res) => res.json())\n      .then(({ paymentMethod }) => {\n        if (paymentMethod) {\n          if (!prefill) {\n            setUser((prev) => ({\n              ...prev,\n              paymentMethods: [...prev.paymentMethods, paymentMethod],\n            }));\n          } else {\n            setUser((prev) => ({\n              ...prev,\n              paymentMethods: prev.paymentMethods.map((item) => {\n                if (item._id === paymentMethod._id) {\n                  return paymentMethod;\n                } else {\n                  return item;\n                }\n              }),\n            }));\n          }\n          onSuccess?.(paymentMethod);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>\n                  Payment method could not be {prefill ? \"updated\" : \"added\"}.\n                  Please try again.\n                </h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Error happaned. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <form className=\"paymentMethodForm bankCard\" onSubmit={submit}>\n      {!prefill && (\n        <p className=\"note\">\n          We’ll save this card for your convenience. Remove it by going to Your\n          Account section\n        </p>\n      )}\n      <section className=\"inputs\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name on your card\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"number\"\n          name=\"cardNumber\"\n          placeholder=\"Card Number\"\n          value={cardNumber}\n          onChange={(e) => {\n            if (e.target.value.match(/^3[47][0-9]{13}$/)) {\n              setBrand(\"amex\");\n            } else if (e.target.value.match(/^4[0-9]{12}(?:[0-9]{3})?$$/)) {\n              setBrand(\"visa\");\n            } else if (\n              e.target.value.match(\n                /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14})$/\n              )\n            ) {\n              setBrand(\"masterCard\");\n            } else {\n              setBrand(null);\n            }\n            setCardNumber(e.target.value);\n          }}\n          required={true}\n        />\n        <section className=\"exp\">\n          <label>Expiry Date</label>\n          <Combobox\n            placeholder=\"Month\"\n            options={[\n              { label: \"Jan\", value: \"01\" },\n              { label: \"Feb\", value: \"02\" },\n              { label: \"Mar\", value: \"03\" },\n              { label: \"Apr\", value: \"04\" },\n              { label: \"May\", value: \"05\" },\n              { label: \"Jun\", value: \"06\" },\n              { label: \"Jul\", value: \"07\" },\n              { label: \"Aug\", value: \"08\" },\n              { label: \"Sep\", value: \"09\" },\n              { label: \"Oct\", value: \"10\" },\n              { label: \"Nov\", value: \"11\" },\n              { label: \"Dec\", value: \"12\" },\n            ]}\n            required={true}\n            onChange={(e) => setExpMonth(e.value)}\n          />\n          <Combobox\n            placeholder=\"Year\"\n            options={years}\n            required={true}\n            onChange={(e) => setExpYear(e.value)}\n          />\n        </section>\n        <section className=\"cvv\">\n          <label>CVV</label>\n          <input\n            type=\"number\"\n            name=\"cvv\"\n            required={true}\n            value={cvv}\n            onChange={(e) => setCvv(e.target.value)}\n          />\n        </section>\n      </section>\n      <button>Save</button>\n      {unsupporetdCard && (\n        <p className=\"cardErr\">Enter valid Visa/MasterCard</p>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </form>\n  );\n};\nexport const NetBankingForm = ({ prefill, onSuccess }) => {\n  const { setUser } = useContext(SiteContext);\n  const [bank, setBank] = useState(prefill?.bank || \"\");\n  const [name, setName] = useState(prefill?.name || \"\");\n  const [ifsc, setIfsc] = useState(prefill?.ifsc || \"\");\n  const [city, setCity] = useState(prefill?.city || \"\");\n  const [type, setType] = useState(prefill?.type || \"\");\n  const [msg, setMsg] = useState(null);\n  const [accountNumber, setAccountNumber] = useState(\n    prefill?.accountNumber || \"\"\n  );\n  const submit = (e) => {\n    e.preventDefault();\n    fetch(prefill ? \"/api/editPaymentMethod\" : \"/api/addPaymentMethod\", {\n      method: prefill ? \"PATCH\" : \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        type: \"BankAccount\",\n        name,\n        bank,\n        ifsc,\n        accountNumber,\n        city,\n        accountType: type,\n        ...(prefill && { _id: prefill._id }),\n      }),\n    })\n      .then((res) => res.json())\n      .then(({ paymentMethod }) => {\n        if (paymentMethod) {\n          if (!prefill) {\n            setUser((prev) => ({\n              ...prev,\n              paymentMethods: [...prev.paymentMethods, paymentMethod],\n            }));\n          } else {\n            setUser((prev) => ({\n              ...prev,\n              paymentMethods: prev.paymentMethods.map((item) => {\n                if (item._id === paymentMethod._id) {\n                  return paymentMethod;\n                } else {\n                  return item;\n                }\n              }),\n            }));\n          }\n          onSuccess?.(paymentMethod);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not update payment method. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>\n                Could not updated payment method. Make sure you're online.\n              </h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <form className=\"paymentMethodForm netBanking\" onSubmit={submit}>\n      <section className=\"inputs\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Full name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"bank\"\n          placeholder=\"Bank\"\n          value={bank}\n          onChange={(e) => setBank(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"city\"\n          placeholder=\"City\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"type\"\n          placeholder=\"Account type ie. Savings / Current\"\n          value={type}\n          onChange={(e) => setType(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"accountNumber\"\n          placeholder=\"Account Number\"\n          value={accountNumber}\n          onChange={(e) => setAccountNumber(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"ifsc\"\n          placeholder=\"IFSC\"\n          value={ifsc}\n          onChange={(e) => setIfsc(e.target.value)}\n          required={true}\n        />\n      </section>\n      <button type=\"submit\">Save</button>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </form>\n  );\n};\n\nexport const BankCard = ({ card, onClick }) => {\n  return (\n    <div className=\"paymentMethod card\" onClick={() => onClick?.(card)}>\n      <Img\n        className=\"logo\"\n        src={card.brand === \"visa\" ? \"/payment_visa.png\" : \"/payment_mc.png\"}\n      />\n      <p className=\"cardNumber\">\n        **** **** **** **** {card.cardNumber.substr(-4)}\n      </p>\n      <p className=\"cardHolder\">{card.nameOnCard}</p>\n      <p className=\"exp\">{card.exp}</p>\n    </div>\n  );\n};\nexport const BankAccount = ({ account, onClick }) => {\n  return (\n    <div\n      className=\"paymentMethod bankAccount\"\n      onClick={() => onClick?.(account)}\n    >\n      <p className=\"bank\">{account.bank}</p>\n      {\n        // <p className=\"accountType\">{account.type}</p>\n      }\n      <p className=\"name\">{account.name}</p>\n      <p className=\"accountNumber\">{account.accountNumber}</p>\n      <p className=\"ifsc\">{account.ifsc}</p>\n      {\n        // <p className=\"city\">{account.city}</p>\n      }\n    </div>\n  );\n};\n\nexport const Cards = ({ paymentMethods }) => {\n  const container = useRef(null);\n  const [style, setStyle] = useState({});\n  const [wrapperStyle, setWrapperStyle] = useState({});\n  const [index, setIndex] = useState(0);\n  const [paymentForm, setPaymentForm] = useState(false);\n  useLayoutEffect(() => {\n    const { width } = container.current.getBoundingClientRect();\n    setStyle({\n      width,\n      height: width * 0.55,\n    });\n    setWrapperStyle({\n      transform: `translateX(${-(width * index)}px)`,\n    });\n  }, [index]);\n  return (\n    <div className=\"savedCards\">\n      <div className=\"wrapper\" ref={container}>\n        <ul className=\"cards\" style={wrapperStyle}>\n          {paymentMethods.map((method, i) => (\n            <li style={style} key={i}>\n              {method._id && method.__t === \"BankCard\" && (\n                <BankCard card={method} />\n              )}\n              {method._id && method.__t === \"BankAccount\" && (\n                <BankAccount account={method} />\n              )}\n            </li>\n          ))}\n          {paymentMethods.length === 0 && (\n            <li style={style}>\n              <p className=\"placeholder\">Withdraw Payments</p>\n            </li>\n          )}\n        </ul>\n        <button\n          className=\"addPaymentMethod\"\n          onClick={() => setPaymentForm(true)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"15.999\"\n            viewBox=\"0 0 16 15.999\"\n          >\n            <path\n              id=\"Union_1\"\n              data-name=\"Union 1\"\n              d=\"M-4613,16V9h-7V7h7V0h2V7h7V9h-7v7Z\"\n              transform=\"translate(4620)\"\n              fill=\"#2699fb\"\n            />\n          </svg>\n        </button>\n      </div>\n      {index > 0 && (\n        <button className=\"prev\" onClick={() => setIndex((prev) => prev - 1)}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"31.818\"\n            height=\"44.147\"\n            viewBox=\"0 0 31.818 44.147\"\n          >\n            <defs>\n              <filter\n                id=\"Path_217\"\n                x=\"0\"\n                y=\"0\"\n                width=\"31.818\"\n                height=\"44.147\"\n                filterUnits=\"userSpaceOnUse\"\n              >\n                <feOffset dx=\"-3\" dy=\"3\" input=\"SourceAlpha\" />\n                <feGaussianBlur stdDeviation=\"2.5\" result=\"blur\" />\n                <feFlood floodOpacity=\"0.161\" />\n                <feComposite operator=\"in\" in2=\"blur\" />\n                <feComposite in=\"SourceGraphic\" />\n              </filter>\n            </defs>\n            <g transform=\"matrix(1, 0, 0, 1, 0, 0)\" filter=\"url(#Path_217)\">\n              <g\n                id=\"Path_217-2\"\n                data-name=\"Path 217\"\n                transform=\"translate(27.32 4.5) rotate(90)\"\n                fill=\"#858585\"\n              >\n                <path\n                  d=\"M 27.53220176696777 15.71776485443115 C 26.13888931274414 15.2262544631958 24.10462951660156 14.50919151306152 22.07958030700684 13.79734325408936 C 14.74783992767334 11.22007274627686 14.70039939880371 11.22007274627686 14.5736198425293 11.22007274627686 C 14.44684028625488 11.22007274627686 14.39939975738525 11.22007274627686 7.067659854888916 13.79734325408936 C 5.042610645294189 14.50919151306152 3.00835108757019 15.2262544631958 1.615038275718689 15.71776485443115 L 14.5736198425293 0.7635064125061035 L 27.53220176696777 15.71776485443115 Z\"\n                  stroke=\"none\"\n                />\n                <path\n                  d=\"M 14.5736198425293 1.526998519897461 L 3.229276657104492 14.61841773986816 C 4.349065780639648 14.22377777099609 5.627307891845703 13.77366733551025 6.901840209960938 13.32564258575439 C 14.31408023834229 10.72007274627686 14.33368015289307 10.72007274627686 14.5736198425293 10.72007274627686 C 14.81355953216553 10.72007274627686 14.83315944671631 10.72007274627686 22.24539947509766 13.32564258575439 C 23.51993179321289 13.77366733551025 24.79817390441895 14.22377777099609 25.9179630279541 14.61841773986816 L 14.5736198425293 1.526998519897461 M 14.5736198425293 1.9073486328125e-06 L 29.14723968505859 16.81802368164063 C 29.14723968505859 16.81802368164063 14.71584987640381 11.72007274627686 14.5736198425293 11.72007274627686 C 14.43138980865479 11.72007274627686 0 16.81802368164063 0 16.81802368164063 L 14.5736198425293 1.9073486328125e-06 Z\"\n                  stroke=\"none\"\n                  fill=\"#858585\"\n                />\n              </g>\n            </g>\n          </svg>\n        </button>\n      )}\n      {index + 1 < paymentMethods.length && (\n        <button className=\"next\" onClick={() => setIndex((prev) => prev + 1)}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"31.818\"\n            height=\"44.147\"\n            viewBox=\"0 0 31.818 44.147\"\n          >\n            <defs>\n              <filter\n                id=\"Path_217\"\n                x=\"0\"\n                y=\"0\"\n                width=\"31.818\"\n                height=\"44.147\"\n                filterUnits=\"userSpaceOnUse\"\n              >\n                <feOffset dx=\"-3\" dy=\"3\" input=\"SourceAlpha\" />\n                <feGaussianBlur stdDeviation=\"2.5\" result=\"blur\" />\n                <feFlood floodOpacity=\"0.161\" />\n                <feComposite operator=\"in\" in2=\"blur\" />\n                <feComposite in=\"SourceGraphic\" />\n              </filter>\n            </defs>\n            <g transform=\"matrix(1, 0, 0, 1, 0, 0)\" filter=\"url(#Path_217)\">\n              <g\n                id=\"Path_217-2\"\n                data-name=\"Path 217\"\n                transform=\"translate(27.32 4.5) rotate(90)\"\n                fill=\"#858585\"\n              >\n                <path\n                  d=\"M 27.53220176696777 15.71776485443115 C 26.13888931274414 15.2262544631958 24.10462951660156 14.50919151306152 22.07958030700684 13.79734325408936 C 14.74783992767334 11.22007274627686 14.70039939880371 11.22007274627686 14.5736198425293 11.22007274627686 C 14.44684028625488 11.22007274627686 14.39939975738525 11.22007274627686 7.067659854888916 13.79734325408936 C 5.042610645294189 14.50919151306152 3.00835108757019 15.2262544631958 1.615038275718689 15.71776485443115 L 14.5736198425293 0.7635064125061035 L 27.53220176696777 15.71776485443115 Z\"\n                  stroke=\"none\"\n                />\n                <path\n                  d=\"M 14.5736198425293 1.526998519897461 L 3.229276657104492 14.61841773986816 C 4.349065780639648 14.22377777099609 5.627307891845703 13.77366733551025 6.901840209960938 13.32564258575439 C 14.31408023834229 10.72007274627686 14.33368015289307 10.72007274627686 14.5736198425293 10.72007274627686 C 14.81355953216553 10.72007274627686 14.83315944671631 10.72007274627686 22.24539947509766 13.32564258575439 C 23.51993179321289 13.77366733551025 24.79817390441895 14.22377777099609 25.9179630279541 14.61841773986816 L 14.5736198425293 1.526998519897461 M 14.5736198425293 1.9073486328125e-06 L 29.14723968505859 16.81802368164063 C 29.14723968505859 16.81802368164063 14.71584987640381 11.72007274627686 14.5736198425293 11.72007274627686 C 14.43138980865479 11.72007274627686 0 16.81802368164063 0 16.81802368164063 L 14.5736198425293 1.9073486328125e-06 Z\"\n                  stroke=\"none\"\n                  fill=\"#858585\"\n                />\n              </g>\n            </g>\n          </svg>\n        </button>\n      )}\n      <Modal\n        head={true}\n        label=\"Add Payment Method\"\n        setOpen={setPaymentForm}\n        className=\"paymentMethodsForm\"\n        open={paymentForm}\n      >\n        <PaymentMethodForm\n          onSuccess={(method) => {\n            setPaymentForm(false);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\nconst Transactions = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    fetch(\"/api/transactions\")\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n      })\n      .then((data) => {\n        if (data) {\n          setTransactions(data);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not get transactions</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Error happened. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, []);\n  return (\n    <div className=\"transactions\">\n      <div className=\"head\">\n        <p>All Transaction History</p>\n      </div>\n      <ul className=\"allTransactions\">\n        {transactions.map((transaction) => (\n          <SingleTransaction key={transaction._id} transaction={transaction} />\n        ))}\n        {transactions.length === 0 && (\n          <p className=\"placeholder\">No transaction yet.</p>\n        )}\n      </ul>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\nconst SingleTransaction = ({ transaction }) => {\n  let icon = null;\n  switch (transaction.__t) {\n    case \"AddMoney\":\n      icon = (\n        <>\n          <div className=\"icon\">\n            <Plus_svg />\n          </div>\n          <p className=\"detail\">Money added to wallet</p>\n        </>\n      );\n      break;\n    case \"WithdrawMoney\":\n      icon = (\n        <>\n          <div className=\"icon\">\n            <Minus_svg />\n          </div>\n          <p className=\"detail\">Money withdrawal from Wallet</p>\n        </>\n      );\n      break;\n    case \"P2PTransaction\":\n      icon =\n        transaction.amount < 0 ? (\n          <>\n            <div className=\"icon\">\n              <Arrow_up_svg />\n            </div>\n            <p className=\"detail\">\n              Paid to{\" \"}\n              <span className=\"userName\">\n                {transaction.client?.firstName +\n                  \" \" +\n                  transaction.client?.lastName}\n              </span>\n            </p>\n          </>\n        ) : (\n          <>\n            <div className=\"icon\">\n              <Arrow_down_svg />\n            </div>\n            <p className=\"detail\">\n              Received from{\" \"}\n              <span className=\"userName\">\n                {transaction.client?.firstName +\n                  \" \" +\n                  transaction.client?.lastName}\n              </span>\n            </p>\n          </>\n        );\n      break;\n    default:\n      icon =\n        transaction.amount < 0 ? (\n          <>\n            <div className=\"icon\">\n              <Minus_svg />\n            </div>\n            <p className=\"detail\">{transaction.note}</p>\n          </>\n        ) : (\n          <>\n            <div className=\"icon\">\n              <Plus_svg />\n            </div>\n            <p className=\"detail\">{transaction.note}</p>\n          </>\n        );\n  }\n  return (\n    <li className=\"transaction\">\n      {icon}\n      <p className=\"amount\">₹{Math.abs(transaction.amount.fix())}</p>\n    </li>\n  );\n};\n\nexport default Wallet;\n"],"sourceRoot":""}