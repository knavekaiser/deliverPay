{"version":3,"sources":["components/Profile.js","components/RefundManagement.js","components/CampaignManagement.js","components/fbMarketplace.js","components/MyShop.js"],"names":["updateProfileInfo","newData","a","fetch","method","headers","body","JSON","stringify","then","res","json","require","SinglePaymentMethod","setMsg","setUser","useContext","SiteContext","useState","edit","setEdit","deletePaymentMethod","useCallback","_id","code","prev","paymentMethods","filter","item","onClick","className","__t","Confirm","label","question","callback","card","open","head","setOpen","prefill","onSuccess","paymentMethod","account","DataEdit","fields","value","onError","formData","form","useRef","submit","e","preventDefault","allData","FormData","target","entries","field","password","confirm_password","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","type","coordinates","UploadFiles","files","user","alert","catch","err","console","log","ref","onSubmit","Profile","history","match","location","mismatchPass","setMismatchPass","msg","kycFiles","setKycFiles","addGoogleId","googleId","data","disconnectFromGoogle","src","profileImg","xmlns","width","height","viewBox","id","transform","fill","d","stroke","accept","onChange","file","cdn","process","_file","append","firstName","lastName","userId","placeholder","defaultValue","name","required","phone","pattern","email","gender","age","address","street","city","state","zip","multiple","kyc","verified","links","map","i","length","clientId","buttonText","onFailure","cookiePolicy","MilestoneForm","lazy","mod","default","SingleRefund","refund","selectAll","setRefunds","setBatch","batch","useHistory","selected","setSelected","useEffect","push","format","createdAt","seller","order","products","reduce","c","qty","status","total","Modal","FullRefund","userType","setRefund","setOrder","milestoneForm","setMilestoneForm","refundTill","setRefundTill","updateRefund","acceptRefund","declineRefund","params","refundable","days","Date","getTime","to","deliveredAt","issue","dscr","Object","deliveryDetail","key","deliveryTime","product","images","calculatePrice","gst","shipping","cellSpacing","cellPadding","milestones","milestone","amount","terms","action","definedAmount","client","Refunds","setTotal","page","setPage","perPage","setPerPage","search","setSearch","setStatus","column","sort","startDate","endDate","dateRange","setDateRange","refunds","setSelectAll","moment","time","setHours","URLSearchParams","q","dateFrom","dateTo","options","opacity","range","btns","currentPage","SingleCoupon","coupon","setCoupons","actionsRef","checkRef","couponDetail","setCouponDetail","nativeEvent","path","includes","current","title","maxDiscount","threshold","date","from","icon","Coupons","categories","coupons","Step","defaultStatus","children","disabled","step","BusinessManager","setLoading","FB","window","businessManagers","setBusinessManagers","setErr","fbMarket","business","api","access_token","LS","get","businesses","businessManager","href","created_time","newUser","picture","url","business_id","asset_id","vertical","error","error_user_msg","message","FbPage","fbPages","setFbPages","createNew","setCreateNew","facebookPage","category","CommerceAccount","setStep","commerceAccount","catalog","setCatalog","find","delCatalog","Marketplace","userAgreement","logout","remove","login","set","authResponse","accessToken","long_lived_token","ProductForm","loading","setType","setCategory","discount","setDiscount","setName","setDscr","price","setPrice","setFiles","setGst","hsn","setHsn","available","setAvailable","tags","setTags","tag","onKeyPress","trim","charCode","focus","input","previousElementSibling","fix","Products","shopSetupComplete","productForm","setProductForm","setProducts","addMany","setAddMany","deleteItems","items","_ids","some","deleteMany","addToFbMarket","fb_products","success","failed","forEach","prod","fbMarketId","removeFromFbMarket","SingleProduct","calculateDiscount","BatchUpload","batchItems","setBatchItems","setImages","csvDraft","setCsvDraft","addBatchProducts","updated","uploadImages","imgLinks","Images","Name","Description","Material","Category","Type","filename","toLowerCase","newItems","splice","cb","reader","FileReader","onload","evt","bstr","result","XLSX","wb","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","arr","cols","shift","row","col","j","readAsBinaryString","parseXLSXtoJSON","undefined","split","defaultTerms","Settings","setCategories","gstEdit","setGstEdit","shippingEdit","setShippingEdit","termsEdit","setTermsEdit","editPayment","setEditPayment","shopInfo","shippingCost","deliveryWithin","values","cat","querySelector","detail","reg","bank","accountType","accountNumber","ifsc","toString","GstEditForm","gstFiles","setGstFiles","gstReg","setGstReg","setAmount","fileLinks","ShippingEditForm","setShippingCost","setDeliveryWithin","setRefundable","min","TermsEditForm","setTerms","addTerm","setAddTerm","term","PaymentMethodForm","setBank","setIfsc","setCity","setAccountNumber","MyShop","setShopSetupComplete","style","display","basepath","tabs","component","FullOrder","OrderManagement","RefundManagement","Campaigns","FBMarket"],"mappings":"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","file":"static/js/15.eed6a3ee.chunk.js","sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport { BankCard, BankAccount, BankCardForm, NetBankingForm } from \"./Wallet\";\nimport { Modal, Confirm } from \"./Modal\";\nimport {\n  Err_svg,\n  Succ_svg,\n  FileInput,\n  Media,\n  UploadFiles,\n  Img,\n} from \"./Elements\";\nimport GoogleLogin from \"react-google-login\";\nrequire(\"./styles/profile.scss\");\n\nexport async function updateProfileInfo(newData) {\n  return fetch(\"/api/editUserProfile\", {\n    method: \"PATCH\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(newData),\n  }).then((res) => res.json());\n}\n\nconst Profile = ({ history, match, location }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [mismatchPass, setMismatchPass] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const [kycFiles, setKycFiles] = useState([]);\n  const [gstFiles, setGstFiles] = useState([]);\n  const addGoogleId = (e) => {\n    if (e.googleId) {\n      updateProfileInfo({ googleId: e.googleId })\n        .then((data) => {\n          setUser((prev) => ({ ...prev, googleId: e.googleId }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Google account successfully connected.</h4>\n              </div>\n            </>\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not connect Google account.</h4>\n              </div>\n            </>\n          );\n        });\n    }\n  };\n  const disconnectFromGoogle = (e) => {\n    updateProfileInfo({ googleId: null })\n      .then((data) => {\n        if (data.user) {\n          setUser((prev) => ({ ...prev, googleId: null }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Successfully disconnected Google.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not disconnect Google account. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not disconnect Google account.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <div className=\"profileContainer\">\n      <div className=\"benner\">\n        <div className=\"profileImg\">\n          <Img src={user.profileImg || \"/profile-user.jpg\"} />\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"91.832\"\n            height=\"25.468\"\n            viewBox=\"0 0 91.832 25.468\"\n          >\n            <g\n              id=\"Path_1937\"\n              data-name=\"Path 1937\"\n              transform=\"translate(15.429 -9.647)\"\n              fill=\"#fff\"\n            >\n              <path\n                d=\"M 29.79687690734863 34.6146240234375 C 22.21588897705078 34.6146240234375 13.43720626831055 32.0111198425293 5.0779709815979 27.28368377685547 C -2.8753981590271 22.78578186035156 -9.78753662109375 16.7585563659668 -14.48426628112793 10.24203777313232 C -13.95890235900879 10.24473857879639 -13.30369663238525 10.25548648834229 -12.80753517150879 10.26361274719238 C -12.44524097442627 10.26955413818359 -12.15906429290771 10.27424812316895 -12.02891159057617 10.27424812316895 C -11.93940830230713 10.27424812316895 -11.86373233795166 10.26253128051758 -11.79978466033936 10.24241733551025 C -11.48864650726318 10.21196746826172 -10.04010391235352 10.17821311950684 -5.149840831756592 10.17821311950684 C -1.226676225662231 10.17821311950684 4.093100070953369 10.19837760925293 9.725229263305664 10.21973037719727 C 16.20444107055664 10.24428367614746 23.54814720153809 10.27211856842041 29.79687690734863 10.27211856842041 C 31.89767646789551 10.27211856842041 43.68988800048828 10.22107124328613 56.17448806762695 10.16702461242676 L 59.24650192260742 10.15374183654785 C 60.32665252685547 10.14907169342041 61.61424255371094 10.14680099487305 63.18285369873047 10.14680099487305 C 64.99295043945313 10.14680099487305 66.92156219482422 10.14978885650635 68.78666687011719 10.15269470214844 C 70.55825042724609 10.1554479598999 72.23158264160156 10.15804767608643 73.72422027587891 10.15804767608643 C 74.4501953125 10.15804767608643 75.08247375488281 10.1574182510376 75.63590240478516 10.15613842010498 C 74.24596405029297 13.15391826629639 71.95748138427734 16.1362361907959 68.82386779785156 19.03109550476074 C 65.67525482177734 21.9398250579834 61.6738166809082 24.71903610229492 57.25215911865234 27.06828308105469 C 52.91740798950195 29.37135314941406 48.15610122680664 31.27616500854492 43.48295974731445 32.57678985595703 C 38.69290161132813 33.90995407104492 33.96032333374023 34.6146240234375 29.79687690734863 34.6146240234375 Z\"\n                stroke=\"none\"\n              />\n              <path\n                d=\"M 63.18235397338867 10.64679336547852 C 61.61428070068359 10.64679336547852 60.32755279541016 10.64906692504883 59.24865341186523 10.65373229980469 L 56.18099212646484 10.6670036315918 C 43.69374084472656 10.72105407714844 31.89901733398438 10.77211761474609 29.79687881469727 10.77211761474609 C 23.54719161987305 10.77211761474609 16.2029914855957 10.74428176879883 9.723331451416016 10.71971893310547 C 4.091693878173828 10.69837951660156 -1.227619171142578 10.67821884155273 -5.149848937988281 10.67821884155273 C -9.844169616699219 10.67821884155273 -11.33226013183594 10.70873641967773 -11.7083740234375 10.73677062988281 C -11.80277252197266 10.76053237915039 -11.90915679931641 10.77424240112305 -12.0289306640625 10.77424240112305 C -12.16323089599609 10.77424240112305 -12.45131683349609 10.7695198059082 -12.81605529785156 10.76354217529297 C -13.01943206787109 10.76021194458008 -13.24966430664063 10.75643920898438 -13.48653411865234 10.75296401977539 C -8.851593017578125 16.903076171875 -2.239547729492188 22.57095718383789 5.324104309082031 26.84845542907715 C 13.60947799682617 31.53411865234375 22.30074310302734 34.11461639404297 29.79687881469727 34.11461639404297 C 33.91565704345703 34.11461639404297 38.60186767578125 33.41628265380859 43.34890747070313 32.0950927734375 C 47.98773193359375 30.80401802062988 52.71426773071289 28.91309356689453 57.0175666809082 26.62672996520996 C 61.40182876586914 24.29735565185547 65.3670654296875 21.5438175201416 68.48458099365234 18.6638298034668 C 71.32099151611328 16.04351997375488 73.45128631591797 13.35661125183105 74.83492279052734 10.65748596191406 C 74.4908447265625 10.65786743164063 74.12125396728516 10.65805435180664 73.72370147705078 10.65805435180664 C 72.23068237304688 10.65805435180664 70.55716705322266 10.65545654296875 68.78539276123047 10.65269470214844 C 66.92047119140625 10.6497917175293 64.9920654296875 10.64679336547852 63.18235397338867 10.64679336547852 M 63.18235778808594 9.646797180175781 C 66.69034576416016 9.646797180175781 70.639892578125 9.658050537109375 73.72370910644531 9.658050537109375 C 74.72272491455078 9.658050537109375 75.63052368164063 9.656867980957031 76.4033203125 9.653743743896484 C 70.7041015625 23.3221435546875 47.19384002685547 35.11461639404297 29.79687881469727 35.11461639404297 C 13.80905532836914 35.11461639404297 -5.7138671875 23.84020614624023 -15.427734375 9.772117614746094 C -15.45098876953125 9.749141693115234 -15.14891815185547 9.741405487060547 -14.71451568603516 9.741401672363281 C -13.8193359375 9.741401672363281 -12.36181640625 9.774246215820313 -12.02893829345703 9.774246215820313 C -11.98212432861328 9.774246215820313 -11.95759582519531 9.773597717285156 -11.9599609375 9.772117614746094 C -12.07225799560547 9.701694488525391 -9.402595520019531 9.678211212158203 -5.14984130859375 9.678211212158203 C 3.356430053710938 9.678211212158203 18.19854354858398 9.772117614746094 29.79687881469727 9.772117614746094 C 32.07231903076172 9.772117614746094 46.01445388793945 9.710941314697266 59.24433135986328 9.653743743896484 C 60.42824935913086 9.648624420166016 61.76977157592773 9.646797180175781 63.18235778808594 9.646797180175781 Z\"\n                stroke=\"none\"\n                fill=\"#336cf9\"\n              />\n            </g>\n          </svg>\n          <input\n            type=\"file\"\n            accept=\".jpg, .png, .jpeg\"\n            onChange={(e) => {\n              const file = e.target.files[0];\n              const cdn = process.env.REACT_APP_CDN_HOST;\n              if (file) {\n                let imgLink = \"\";\n                const formData = new FormData();\n                for (var _file of e.target.files) {\n                  formData.append(\"file\", _file);\n                }\n                fetch(`${cdn}/upload`, {\n                  method: \"POST\",\n                  body: formData,\n                })\n                  .then((res) => res.json())\n                  .then((data) => {\n                    if (data.code === \"ok\") {\n                      imgLink = cdn + \"/\" + data.files[0];\n                      updateProfileInfo({ profileImg: imgLink }).then(\n                        (data) => {\n                          if (data.user) {\n                            setUser((prev) => ({\n                              ...prev,\n                              profileImg: data.user.profileImg,\n                            }));\n                          }\n                        }\n                      );\n                    } else {\n                      setMsg(\n                        <>\n                          <button onClick={() => setMsg(null)}>Okay</button>\n                          <div>\n                            <Err_svg />\n                            <h4>Image upload failed</h4>\n                          </div>\n                        </>\n                      );\n                    }\n                  })\n                  .catch((err) => {\n                    setMsg(\n                      <>\n                        <button onClick={() => setMsg(null)}>Okay</button>\n                        <div>\n                          <Err_svg />\n                          <h4>Image upload failed. Make sure you're online.</h4>\n                        </div>\n                      </>\n                    );\n                  });\n              }\n            }}\n          />\n          <label>Edit</label>\n        </div>\n        <div>\n          <p className=\"name\">{user.firstName + \" \" + user.lastName}</p>\n          <p className=\"id\">Delivery pay ID: {user.userId || user._id}</p>\n        </div>\n      </div>\n      <div className=\"settings\">\n        <div className=\"head\">Account Settings</div>\n        <ul>\n          <DataEdit\n            label=\"Name\"\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"First name\"\n                    defaultValue={user.firstName}\n                    name=\"firstName\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    placeholder=\"last name\"\n                    defaultValue={user.lastName}\n                    name=\"lastName\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.firstName + \" \" + user.lastName}\n          />\n          <DataEdit\n            label=\"Phone Number\"\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"Phone Number\"\n                    defaultValue={user.phone}\n                    name=\"phone\"\n                    required={true}\n                    pattern=\"^(\\+91|91|1|)\\d{10}$\"\n                  />\n                </section>\n              </>\n            }\n            value={user.phone}\n          />\n          <DataEdit\n            label=\"Email\"\n            fields={\n              <>\n                <section>\n                  <input\n                    type=\"email\"\n                    placeholder=\"Phone Number\"\n                    defaultValue={user.email}\n                    name=\"email\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.email}\n          />\n          <DataEdit\n            label=\"Password\"\n            onError={() => setMismatchPass(true)}\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    required={true}\n                    type=\"password\"\n                    onChange={(e) => setMismatchPass(false)}\n                  />\n                </section>\n                <section>\n                  <input\n                    placeholder=\"Confirm password\"\n                    name=\"confirm_password\"\n                    required={true}\n                    type=\"password\"\n                    onChange={(e) => setMismatchPass(false)}\n                  />\n                </section>\n                {mismatchPass && (\n                  <p className=\"errMsg\">Password did not match.</p>\n                )}\n              </>\n            }\n            value=\"••••••••••••\"\n          />\n          <DataEdit\n            label=\"Gender\"\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"Gender\"\n                    defaultValue={user.gender}\n                    name=\"gender\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.gender}\n          />\n          <DataEdit\n            label=\"Age\"\n            fields={\n              <>\n                <section>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Age\"\n                    defaultValue={user.age}\n                    name=\"age\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.age}\n          />\n          <DataEdit\n            label=\"Address\"\n            fields={\n              <>\n                <section>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Address\"\n                    defaultValue={user.address.street}\n                    name=\"address.street\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    type=\"text\"\n                    placeholder=\"City\"\n                    defaultValue={user.address.city}\n                    name=\"address.city\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    type=\"text\"\n                    placeholder=\"State\"\n                    defaultValue={user.address.state}\n                    name=\"address.state\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    type=\"number\"\n                    placeholder=\"PIN Code\"\n                    defaultValue={user.address.zip}\n                    name=\"address.zip\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={`${user.address?.street || \"\"} ${user.address?.city || \"\"} ${\n              user.address?.state || \"\"\n            } ${user.address?.zip || \"\"}`}\n          />\n        </ul>\n      </div>\n      <div className=\"kyc\">\n        <div className=\"head\">KYC</div>\n        <ul>\n          <DataEdit\n            label=\"KYC\"\n            setMsg={setMsg}\n            formData={kycFiles}\n            fields={\n              <>\n                <section>\n                  <label>Upload files for verification.</label>\n                  <FileInput\n                    multiple={true}\n                    prefill={user.kyc?.files}\n                    name=\"kyc.files\"\n                    onChange={(files) => setKycFiles(files)}\n                  />\n                </section>\n              </>\n            }\n            value={\n              <>\n                <p>Status: {user.kyc?.verified ? \"Verified\" : \"Unverified\"}</p>\n                <label>Files for verification:</label>\n                <ul className=\"thumbs\">\n                  <Media links={user.kyc?.files} />\n                </ul>\n              </>\n            }\n          />\n        </ul>\n      </div>\n      <div className=\"paymentMethods\">\n        <div className=\"head\">Payment Methods</div>\n        <ul className=\"methods\">\n          {user.paymentMethods.map((method, i) => (\n            <SinglePaymentMethod key={i} setMsg={setMsg} method={method} />\n          ))}\n          {user.paymentMethods?.length === 0 && <p>No payment method added.</p>}\n        </ul>\n      </div>\n      <div className=\"socials\">\n        <div className=\"head\">Connect Social Accounts</div>\n        <ul className=\"providers\">\n          {user.googleId ? (\n            <GoogleLogin\n              className=\"google\"\n              clientId=\"978249749020-kjq65au1n373ur5oap7n4ebo2fq1jdhq.apps.googleusercontent.com\"\n              buttonText=\"Disconnect from Google\"\n              onSuccess={disconnectFromGoogle}\n              onFailure={disconnectFromGoogle}\n              cookiePolicy={\"single_host_origin\"}\n            />\n          ) : (\n            <GoogleLogin\n              className=\"google\"\n              clientId=\"978249749020-kjq65au1n373ur5oap7n4ebo2fq1jdhq.apps.googleusercontent.com\"\n              buttonText=\"Connect with Google\"\n              onSuccess={addGoogleId}\n              onFailure={addGoogleId}\n              cookiePolicy={\"single_host_origin\"}\n            />\n          )}\n        </ul>\n      </div>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\nconst SinglePaymentMethod = ({ method, setMsg }) => {\n  const { setUser } = useContext(SiteContext);\n  const [edit, setEdit] = useState(false);\n  const deletePaymentMethod = useCallback((method) => {\n    fetch(\"/api/deletePaymentMethod\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: method._id }),\n    })\n      .then((res) => res.json())\n      .then(({ code }) => {\n        if (code === \"ok\") {\n          setUser((prev) => ({\n            ...prev,\n            paymentMethods: prev.paymentMethods.filter(\n              (item) => item._id !== method._id\n            ),\n          }));\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Payment method could not be deleted.</h4>\n              </div>\n            </>\n          );\n        }\n      });\n  }, []);\n  return (\n    <li>\n      <div className=\"actions\">\n        <button className=\"edit\" onClick={() => setEdit(method.__t)}>\n          Edit\n        </button>\n        <button\n          className=\"delete\"\n          onClick={() => {\n            return Confirm({\n              label: \"Payment method delete\",\n              question: \"Do you want to delete this payment method?\",\n              callback: () => deletePaymentMethod(method),\n            });\n          }}\n        >\n          Delete\n        </button>\n      </div>\n      {method.__t === \"BankCard\" && (\n        <>\n          <BankCard card={method} />\n          {edit === method.__t && (\n            <Modal\n              open={edit}\n              head={true}\n              label=\"Edit Payment Method\"\n              setOpen={setEdit}\n              className=\"editPaymentMethod\"\n            >\n              <BankCardForm\n                prefill={method}\n                onSuccess={(paymentMethod) => {\n                  if (paymentMethod) {\n                    setEdit(false);\n                    setMsg(\n                      <>\n                        <button onClick={() => setMsg(null)}>Okay</button>\n                        <div>\n                          <Succ_svg />\n                          <h4>Payment method updated.</h4>\n                        </div>\n                      </>\n                    );\n                  }\n                }}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n      {method.__t === \"BankAccount\" && (\n        <>\n          <BankAccount account={method} />\n          {edit === method.__t && (\n            <Modal\n              open={edit}\n              head={true}\n              label=\"Edit Payment Method\"\n              setOpen={setEdit}\n              className=\"editPaymentMethod\"\n            >\n              <NetBankingForm\n                prefill={method}\n                onSuccess={(paymentMethod) => {\n                  if (paymentMethod) {\n                    setEdit(false);\n                    setMsg(\n                      <>\n                        <button onClick={() => setMsg(null)}>Okay</button>\n                        <div>\n                          <Succ_svg />\n                          <h4>Payment method updated.</h4>\n                        </div>\n                      </>\n                    );\n                  }\n                }}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n    </li>\n  );\n};\n\nconst DataEdit = ({ label, fields, value, onError, setMsg, formData }) => {\n  const { setUser } = useContext(SiteContext);\n  const [edit, setEdit] = useState(false);\n  const form = useRef(null);\n  const submit = async (e) => {\n    e.preventDefault();\n    let allData = {};\n    for (var [field, value] of new FormData(e.target).entries()) {\n      allData[field] = value;\n    }\n    if (allData.password && allData.password !== allData.confirm_password) {\n      onError?.();\n      return;\n    }\n    if (allData[\"address.city\"]) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        let lat = position.coords.latitude;\n        let long = position.coords.longitude;\n        allData[\"address.location\"] = {\n          type: \"Point\",\n          coordinates: [long, lat],\n        };\n      });\n    }\n    if (allData[\"kyc.files\"]) {\n      allData[\"kyc.files\"] =\n        (await UploadFiles({ files: formData, setMsg })) || [];\n    }\n    if (allData[\"gst.detail.files\"]) {\n      allData[\"gst.detail.files\"] =\n        (await UploadFiles({ files: formData, setMsg })) || [];\n    }\n    fetch(\"/api/editUserProfile\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(allData),\n    })\n      .then((res) => res.json())\n      .then(({ user }) => {\n        if (user) {\n          setUser(user);\n          setEdit(false);\n        } else {\n          alert(\"someting went wrong\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"someting went wrong\");\n      });\n  };\n  return (\n    <li>\n      <p className=\"label\">{label}</p>\n      <form ref={form} onSubmit={submit}>\n        {edit ? (\n          <div className=\"inputs\">{fields}</div>\n        ) : (\n          <div className=\"currentValue\">{value}</div>\n        )}\n        <div className=\"btns\">\n          {edit ? (\n            <>\n              <button key=\"submit\" type=\"submit\">\n                Save changes\n              </button>\n              <button key=\"cancel\" type=\"button\" onClick={() => setEdit(false)}>\n                Cancel\n              </button>\n            </>\n          ) : (\n            <button key=\"edit\" type=\"button\" onClick={() => setEdit(true)}>\n              Edit\n            </button>\n          )}\n        </div>\n      </form>\n    </li>\n  );\n};\n\nexport default Profile;\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  useContext,\n  lazy,\n} from \"react\";\nimport {\n  Succ_svg,\n  Err_svg,\n  Plus_svg,\n  X_svg,\n  Combobox,\n  Pagination,\n  Checkbox,\n  calculateDiscount,\n  calculatePrice,\n  Actions,\n  Chev_down_svg,\n  User,\n  Arrow_left_svg,\n  Media,\n  Img,\n  Moment,\n  moment,\n  InputDateRange,\n} from \"./Elements\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { SiteContext } from \"../SiteContext\";\nimport { Modal, Confirm } from \"./Modal\";\nimport { toast } from \"react-toastify\";\nconst MilestoneForm = lazy(() =>\n  import(\"./Forms\").then((mod) => ({ default: mod.MilestoneForm }))\n);\n\nconst Refunds = ({ history, location }) => {\n  const { userType } = useContext(SiteContext);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(20);\n  const [search, setSearch] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [sort, setSort] = useState({\n    column: \"createdAt\",\n    order: \"dsc\",\n  });\n  const [dateRange, setDateRange] = useState({\n    startDate: new Date(),\n    endDate: new Date(),\n  });\n  const [refunds, setRefunds] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [batch, setBatch] = useState([]);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    const startDate = moment({\n      time: dateRange?.startDate,\n      format: \"YYYY-MM-DD\",\n    });\n    const endDate = moment({\n      time: new Date(dateRange?.endDate)?.setHours(24, 0, 0, 0),\n      format: \"YYYY-MM-DD\",\n    });\n    fetch(\n      `/api/getRefunds?${new URLSearchParams({\n        user: userType,\n        ...(search && { q: search }),\n        page,\n        perPage,\n        sort: sort.column,\n        order: sort.order,\n        ...(dateRange && {\n          dateFrom: startDate,\n          dateTo: endDate,\n        }),\n        ...(status && { status }),\n      })}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setRefunds(data.refunds);\n          setTotal(data.total);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get orders.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [search, page, perPage, dateRange, status]);\n  useEffect(() => {\n    if (selectAll) {\n    } else {\n      setBatch([]);\n    }\n  }, [selectAll]);\n  useEffect(() => {\n    if (batch.length === 0) {\n      setSelectAll(false);\n    }\n  }, [batch]);\n  return (\n    <>\n      <div className=\"benner\">\n        <p>My Refunds</p>\n      </div>\n      <div className=\"filters\">\n        <section>\n          <label>Total:</label>\n          {total}\n        </section>\n        <section>\n          <label>Per Page:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"20\", value: 20 },\n              { label: \"30\", value: 30 },\n              { label: \"50\", value: 50 },\n            ]}\n            onChange={(e) => setPerPage(e.value)}\n          />\n        </section>\n        <section className=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 23 23\"\n          >\n            <path\n              id=\"Icon_ionic-ios-search\"\n              data-name=\"Icon ionic-ios-search\"\n              d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n              transform=\"translate(-4.5 -4.493)\"\n              fill=\"#707070\"\n              opacity=\"0.74\"\n            />\n          </svg>\n          <input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search for Customer\"\n          />\n          {search && (\n            <button onClick={() => setSearch(\"\")}>\n              <X_svg />\n            </button>\n          )}\n        </section>\n        <section className=\"category\">\n          <label>Status:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"All\", value: \"\" },\n              { label: \"Pending\", value: \"pending\" },\n              { label: \"Approved\", value: \"approved\" },\n              { label: \"Product Sent\", value: \"productSent\" },\n              { label: \"Product Recieved\", value: \"productRecieved\" },\n              { label: \"Resolved\", value: \"resolved\" },\n            ]}\n            onChange={(e) => setStatus(e.value)}\n          />\n        </section>\n        <section className={`date`}>\n          <InputDateRange\n            dateRange={dateRange}\n            onChange={(range) => setDateRange(range)}\n          />\n        </section>\n      </div>\n      {batch.length > 0 && (\n        <div className=\"batchAction\">\n          <button onClick={() => console.log(\"batch delete\")}>Delete</button>\n        </div>\n      )}\n      <table className=\"table refunds\">\n        <thead>\n          <tr>\n            {\n              //   <th className=\"checkContainer\">\n              //   <Checkbox\n              //     value={selectAll}\n              //     defaultValue={selectAll}\n              //     onChange={(e) => setSelectAll(e)}\n              //   />\n              // </th>\n            }\n            <th className=\"date\">Date</th>\n            <th>Customer</th>\n            <th>QTY</th>\n            <th>Status</th>\n            <th>Total Price</th>\n            {\n              // <th>Actions</th>\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {refunds.map((refund) => (\n            <SingleRefund\n              key={refund._id}\n              refund={refund}\n              setRefunds={setRefunds}\n              selectAll={selectAll}\n              setBatch={setBatch}\n              batch={batch}\n            />\n          ))}\n          {refunds.length === 0 && (\n            <tr className=\"placeholder\">\n              <td>No product yet.</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <Pagination\n        total={total}\n        btns={5}\n        currentPage={page}\n        perPage={perPage}\n        setPage={setPage}\n      />\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nconst SingleRefund = ({ refund, setRefunds, selectAll, setBatch, batch }) => {\n  const history = useHistory();\n  const { user } = useContext(SiteContext);\n  const [selected, setSelected] = useState(selectAll || false);\n  const [edit, setEdit] = useState(false);\n  const [msg, setMsg] = useState(false);\n  useEffect(() => {\n    setSelected(selectAll);\n  }, [selectAll]);\n  useEffect(() => {\n    if (selected) {\n      setBatch((prev) => [...prev, refund._id]);\n    } else {\n      setBatch((prev) => prev.filter((item) => item !== refund._id));\n    }\n  }, [selected]);\n  return (\n    <>\n      <tr\n        className={`refund ${selected ? \"selected\" : \"\"}`}\n        onClick={() => history.push(`/account/myShop/refunds/${refund._id}`)}\n      >\n        {\n          //   <td className=\"checkContainer\">\n          //   <Checkbox\n          //     defaultValue={selected}\n          //     value={selected}\n          //     onChange={(e) => {\n          //       setSelected(e);\n          //     }}\n          //   />\n          // </td>\n        }\n        <td className=\"date\">\n          <Moment format=\"DD MMM YYYY, hh:mm a\">{refund.createdAt}</Moment>\n        </td>\n        <td>\n          <User user={refund.seller} />\n        </td>\n        <td>{refund.order?.products.reduce((a, c) => a + c.qty, 0)}</td>\n        <td>{refund.status}</td>\n        <td>₹{refund.order.total}</td>\n        {\n          //   <td>\n          //   {batch.length === 0 && (\n          //     <Actions icon={<Chev_down_svg />}>\n          //       <Link to=\"#\" className=\"edit\" onClick={() => setEdit(true)}>\n          //         Edit\n          //       </Link>\n          //       <Link\n          //         to=\"#\"\n          //         className=\"delete\"\n          //         onClick={() =>\n          //           Confirm({\n          //             label: \"Removing Product\",\n          //             question: \"You sure want to delete this product?\",\n          //             callback: removeProduct,\n          //           })\n          //         }\n          //       >\n          //         Delete\n          //       </Link>\n          //     </Actions>\n          //   )}\n          // </td>\n        }\n      </tr>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nexport const FullRefund = ({ history, match }) => {\n  const { userType } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [refund, setRefund] = useState(null);\n  const [order, setOrder] = useState(null);\n  const [milestoneForm, setMilestoneForm] = useState(false);\n  const [refundTill, setRefundTill] = useState(false);\n  const milestoneTimeout = useRef();\n  // const updateOrder = async (newData) => {\n  //   return fetch(\"/api/updateRefund\", {\n  //     method: \"PATCH\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(newData),\n  //   })\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       if (data.code === \"ok\") {\n  //         return data.order;\n  //       } else {\n  //         setMsg(\n  //           <>\n  //             <button onClick={() => setMsg(null)}>Okay</button>\n  //             <div>\n  //               <Err_svg />\n  //               <h4>Orders does not exist.</h4>\n  //             </div>\n  //           </>\n  //         );\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //       setMsg(\n  //         <>\n  //           <button onClick={() => setMsg(null)}>Okay</button>\n  //           <div>\n  //             <Err_svg />\n  //             <h4>Could not update order. Make sure you're online.</h4>\n  //           </div>\n  //         </>\n  //       );\n  //     });\n  // };\n  const updateRefund = async (newData) => {\n    return fetch(\"/api/updateRefund\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ...newData, _id: refund._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          return data.order;\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Refund request does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not update refund. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const acceptRefund = async () => {\n    fetch(\"/api/acceptRefund\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: refund._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setRefund((prev) => ({ ...prev, status: \"approved\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Refund request has been approved.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Refund request does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not accept refund request. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const declineRefund = async () => {\n    fetch(\"/api/declineRefund\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: refund._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setRefund((prev) => ({ ...prev, status: \"declined\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Refund request has been declined.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Refund request does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>\n                Could not decline refund request. Make sure you're online.\n              </h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    fetch(`/api/singleRefund?_id=${match.params._id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder(data.refund.order);\n          setRefund(data.refund);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Refund does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get Refund. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, []);\n  useEffect(() => {\n    if (order?.refundable) {\n      let days = 0;\n      switch (order.refundable) {\n        case \"Upto 24 Hours After Delivery\":\n          days = 1;\n          break;\n        case \"Upto 7 Days After Delivery\":\n          days = 7;\n          break;\n        case \"Upto 15 Days After Delivery\":\n          days = 15;\n          break;\n        default:\n          return;\n      }\n      const refundTill = new Date(\n        new Date().getTime() + 1000 * 60 * 60 * 24 * days\n      );\n      if (new Date() < refundTill) {\n        setRefundTill(refundTill);\n      } else {\n        setRefundTill(null);\n      }\n    } else {\n      setRefundTill(null);\n    }\n  }, [refund]);\n  if (refund) {\n    return (\n      <>\n        <div className=\"actions\">\n          <Link\n            to={`/account/${\n              userType === \"seller\" ? \"myShop\" : \"myShopping\"\n            }/refunds`}\n            className=\"back\"\n          >\n            <Arrow_left_svg />\n            Back\n          </Link>\n          {refund.status === \"productSent\" && (\n            <button\n              onClick={() =>\n                Confirm({\n                  label: \"Refund Resolved\",\n                  question: \"You sure want to mark this refund resolved?\",\n                  callback: () => {\n                    updateRefund({ status: \"productRecieved\" }).then(\n                      (refund) => {\n                        setRefund((prev) => ({\n                          ...prev,\n                          status: \"productRecieved\",\n                        }));\n                      }\n                    );\n                  },\n                })\n              }\n            >\n              Mark as Recieved\n            </button>\n          )}\n          {refund.status === \"pending\" && (\n            <>\n              <button\n                onClick={() =>\n                  Confirm({\n                    label: \"Accepting Refund\",\n                    question: \"Do you accept this refund request?\",\n                    callback: acceptRefund,\n                  })\n                }\n              >\n                Accept\n              </button>\n              <button\n                onClick={() =>\n                  Confirm({\n                    label: \"Declining Refund\",\n                    question: \"Do you decline this refund?\",\n                    callback: declineRefund,\n                  })\n                }\n              >\n                Decline\n              </button>\n            </>\n          )}\n        </div>\n        <div className=\"singleOrder\">\n          <div className=\"summery\">\n            <h3>Summery</h3>\n            <ul>\n              <li className=\"devide\">\n                <label>Order</label>\n                <span />\n              </li>\n              <li>\n                <label>Seller</label>\n                <User user={order.seller} />\n              </li>\n              <li>\n                <label>Order ID</label>\n                {order._id}\n              </li>\n              <li>\n                <label>Status</label>\n                {order.status}\n              </li>\n              <li>\n                <label>Ordered at</label>\n                <Moment format=\"DD MMM YYYY, hh:mma\">{order.createdAt}</Moment>\n              </li>\n              <li>\n                <label>Delivered at</label>\n                <Moment format=\"DD MMM YYYY, hh:mm a\">\n                  {order.deliveredAt}\n                </Moment>\n              </li>\n              <li>\n                <label>Refundable</label>\n                {order.refundable || \"N/A\"}\n              </li>\n              <li>\n                <label>Proof of delivery</label>\n                {order.files?.length > 0 ? (\n                  <div className=\"thumbs\">\n                    <Media links={order.files} />\n                  </div>\n                ) : (\n                  <>No files added.</>\n                )}\n              </li>\n              {refundTill && (\n                <li>\n                  <label>Refund till</label>\n                  <Moment format=\"DD MMM YYYY, hh:mm a\">{refundTill}</Moment>\n                </li>\n              )}\n              <li></li>\n              <li className=\"devide\">\n                <label>Refund</label>\n                <span />\n              </li>\n              <li>\n                <label>Refund ID</label>\n                {refund._id}\n              </li>\n              <li>\n                <label>Status</label>\n                {refund.status}\n              </li>\n              <li>\n                <label>Submitted at</label>\n                <Moment format=\"DD MMM YYYY, hh:mma\">{refund.createdAt}</Moment>\n              </li>\n              <li>\n                <label>Issue</label>\n                {refund.issue}\n              </li>\n              <li>\n                <label>Descrption</label>\n                {refund.dscr}\n              </li>\n              <li>\n                <label>Images</label>\n                <div className=\"thumbs\">\n                  {refund.files.length ? (\n                    <Media links={refund.files} />\n                  ) : (\n                    <>No Images has been provided.</>\n                  )}\n                </div>\n              </li>\n              <li></li>\n              <li className=\"devide\">\n                <label>Delivery Address</label>\n                <span />\n              </li>\n              <>\n                {Object.entries(order.deliveryDetail).map(([key, value], i) =>\n                  key === \"deliveryTime\" ? (\n                    <li key={i}>\n                      <label>Delivery date</label>\n                      {order.deliveryDetail.deliveryTime ? (\n                        <Moment format=\"DD MMM, YYYY hh:mma\">\n                          {order.deliveryDetail.deliveryTime}\n                        </Moment>\n                      ) : (\n                        \"N/A\"\n                      )}\n                    </li>\n                  ) : (\n                    <li key={i}>\n                      <label>{key}</label>\n                      {value}\n                    </li>\n                  )\n                )}\n              </>\n            </ul>\n          </div>\n          <div className=\"products\">\n            <h3>Products</h3>\n            <ul>\n              {order.products.map(({ product, qty }, i) => (\n                <li key={i}>\n                  <Img src={product.images[0] || \"/open_box.png\"} />\n                  <div className=\"detail\">\n                    <p>{product.name}</p>\n                    <p className=\"qty\">QTY: {qty}</p>\n                  </div>\n                  <div className=\"price\">\n                    <span>\n                      {calculatePrice({ product, gst: true })} x {qty}\n                    </span>\n                    ₹{calculatePrice({ product, gst: true }) * qty}\n                  </div>\n                </li>\n              ))}\n            </ul>\n            <div className=\"total\">\n              <div className=\"data\">\n                <label>Total</label>₹\n                {order.products.reduce(\n                  (a, c) =>\n                    a +\n                    calculatePrice({ product: c.product, gst: true }) * c.qty,\n                  0\n                )}\n              </div>\n              <div className=\"data\">\n                <label>Shipping</label>\n                {order.shipping || \"N/A\"}\n              </div>\n              <div className=\"data\">\n                <label>Grand Total</label>₹\n                {order.products.reduce(\n                  (a, c) =>\n                    a +\n                    calculatePrice({ product: c.product, gst: true }) * c.qty,\n                  0\n                ) + (+order.shipping || 0)}\n              </div>\n            </div>\n          </div>\n          <div className=\"milestones\">\n            <h3>\n              Milestones\n              {(refund.status === \"approved\" ||\n                refund.status === \"productSent\" ||\n                refund.status === \"productRecieved\") && (\n                <button onClick={() => setMilestoneForm(true)}>\n                  Create Milestone\n                </button>\n              )}\n            </h3>\n            {refund.status === \"pending\" && (\n              <p>\n                You can create milestones once you accept the refund request.\n              </p>\n            )}\n            {refund.status === \"declined\" && (\n              <p>This refund request has been declined.</p>\n            )}\n            {!(refund.status === \"declined\" || refund.status === \"pending\") && (\n              <table cellSpacing={0} cellPadding={0}>\n                <thead>\n                  <tr>\n                    <td>Date</td>\n                    <td>Descrption</td>\n                    <td>Amount</td>\n                    <td>Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {refund.milestones.map((milestone) => (\n                    <tr\n                      key={milestone._id}\n                      onClick={() =>\n                        history.push(`/account/hold?q=${milestone._id}`)\n                      }\n                    >\n                      <td>\n                        <Moment format=\"DD MMM YYYY, hh:mma\">\n                          {milestone.createdAt}\n                        </Moment>\n                      </td>\n                      <td>{milestone.dscr}</td>\n                      <td>₹{milestone.amount}</td>\n                      <td>{milestone.status}</td>\n                    </tr>\n                  ))}\n                  {refund.milestones.length === 0 && (\n                    <tr className=\"placeholdert\">\n                      <td>Nothing yet.</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            )}\n          </div>\n          <section className=\"terms\">\n            <h3>Return Policy Terms</h3>\n            <ul>\n              {order.terms?.map((item, i) => (\n                <li key={i}>{item}</li>\n              ))}\n              {!order.terms?.length && (\n                <li>No terms has been set by the seller yet.</li>\n              )}\n            </ul>\n          </section>\n        </div>\n        <Modal\n          head={true}\n          label=\"Create Milestone\"\n          setOpen={setMilestoneForm}\n          className=\"milestoneRequest\"\n          open={milestoneForm}\n        >\n          <MilestoneForm\n            action=\"create\"\n            definedAmount={order.total}\n            client={refund.seller}\n            refund={refund._id}\n            onSuccess={(milestone) => {\n              setMilestoneForm(false);\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4 className=\"amount\">₹{milestone?.amount}</h4>\n                    <h4>Milestone has been created</h4>\n                  </div>\n                  <Link to=\"/account/hold\" onClick={() => setMsg(null)}>\n                    Check your Delivery pay Hold\n                  </Link>\n                </>\n              );\n              setRefund((prev) => ({\n                ...prev,\n                milestones: [...prev.milestones, milestone],\n              }));\n            }}\n          />\n        </Modal>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </>\n    );\n  }\n  return <>Loading</>;\n};\n\nexport default Refunds;\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  useContext,\n  lazy,\n} from \"react\";\nimport {\n  Succ_svg,\n  Err_svg,\n  Plus_svg,\n  X_svg,\n  Combobox,\n  Pagination,\n  Checkbox,\n  calculateDiscount,\n  calculatePrice,\n  Actions,\n  Chev_down_svg,\n  User,\n  Arrow_left_svg,\n  NumberInput,\n  Media,\n  UploadFiles,\n  FileInput,\n  Img,\n  Moment,\n  moment,\n} from \"./Elements\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { SiteContext } from \"../SiteContext\";\nimport { Modal, Confirm } from \"./Modal\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { MilestoneForm } from \"./Account\";\nimport { toast } from \"react-toastify\";\n\nconst Coupons = ({ categories }) => {\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(20);\n  const [status, setStatus] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState({\n    column: \"createdAt\",\n    coupon: \"dsc\",\n  });\n  const [coupons, setCoupons] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [batch, setBatch] = useState([]);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    fetch(\n      `/api/getCoupons?${new URLSearchParams({\n        ...(search && { q: search }),\n        page,\n        perPage,\n        sort: sort.column,\n        order: sort.order,\n        ...(status && { status }),\n      })}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setCoupons(data.coupons);\n          setTotal(data.total);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get coupons.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [status, search, page, perPage]);\n  useEffect(() => {\n    if (selectAll) {\n    } else {\n      setBatch([]);\n    }\n  }, [selectAll]);\n  useEffect(() => {\n    if (batch.length === 0) {\n      setSelectAll(false);\n    }\n  }, [batch]);\n  return (\n    <>\n      <div className=\"benner\">\n        <p>Order Management</p>\n      </div>\n      <div className=\"filters\">\n        <section>\n          <label>Total:</label>\n          {total}\n        </section>\n        <section>\n          <label>Per Page:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"20\", value: 20 },\n              { label: \"30\", value: 30 },\n              { label: \"50\", value: 50 },\n            ]}\n            onChange={(e) => setPerPage(e.value)}\n          />\n        </section>\n        <section className=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 23 23\"\n          >\n            <path\n              id=\"Icon_ionic-ios-search\"\n              data-name=\"Icon ionic-ios-search\"\n              d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n              transform=\"translate(-4.5 -4.493)\"\n              fill=\"#707070\"\n              opacity=\"0.74\"\n            />\n          </svg>\n          <input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search for Buyer\"\n          />\n          {search && (\n            <button onClick={() => setSearch(\"\")}>\n              <X_svg />\n            </button>\n          )}\n        </section>\n        <section className=\"category\">\n          <label>Status:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"All\", value: \"\" },\n              { label: \"Pending\", value: \"draft\" },\n              { label: \"Active\", value: \"active\" },\n              { label: \"Inactive\", value: \"inactive\" },\n            ]}\n            onChange={(e) => setStatus(e.value)}\n          />\n        </section>\n      </div>\n      {batch.length > 0 && (\n        <div className=\"batchAction\">\n          <button onClick={() => console.log(\"batch delete\")}>Delete</button>\n        </div>\n      )}\n      <table className=\"table coupons\">\n        <thead>\n          <tr>\n            {\n              //   <th className=\"checkContainer\">\n              //   <Checkbox\n              //     value={selectAll}\n              //     defaultValue={selectAll}\n              //     onChange={(e) => setSelectAll(e)}\n              //   />\n              // </th>\n            }\n            <th className=\"date\">Date</th>\n            <th>Title</th>\n            <th>Status</th>\n            <th>Code</th>\n            <th>Discount</th>\n            <th>Threshold</th>\n            <th>Validity</th>\n            <th>Accept</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {coupons.map((coupon, i) => (\n            <SingleCoupon\n              key={i}\n              coupon={coupon}\n              setCoupons={setCoupons}\n              selectAll={selectAll}\n              setBatch={setBatch}\n              batch={batch}\n            />\n          ))}\n          {coupons.length === 0 && (\n            <tr className=\"placeholder\">\n              <td>No product yet.</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <Pagination\n        total={total}\n        btns={5}\n        currentPage={page}\n        perPage={perPage}\n        setPage={setPage}\n      />\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nconst SingleCoupon = ({ coupon, setCoupons, selectAll, setBatch, batch }) => {\n  const actionsRef = useRef();\n  const checkRef = useRef();\n  const history = useHistory();\n  const { user } = useContext(SiteContext);\n  const [selected, setSelected] = useState(selectAll || false);\n  const [edit, setEdit] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [couponDetail, setCouponDetail] = useState(false);\n  const declineCoupon = (_id) => {\n    fetch(\"/api/declineCoupon\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setCoupons((prev) =>\n            prev.map((item) => {\n              if (item._id === _id) {\n                return {\n                  ...item,\n                  accept: false,\n                };\n              }\n              return item;\n            })\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>\n                  Coupon code declined. Buyers can no longer apply this coupon\n                  code on your shop.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not decline Coupon code. please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not decline Coupon code. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const acceptCoupon = (_id) => {\n    fetch(\"/api/acceptCoupon\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setCoupons((prev) =>\n            prev.map((item) => {\n              if (item._id === _id) {\n                return {\n                  ...item,\n                  accept: true,\n                };\n              }\n              return item;\n            })\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>\n                  Coupon code accepted. Now Buyers can apply this coupon code on\n                  your shop.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not accept Coupon code. please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not accept Coupon code. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    setSelected(selectAll);\n  }, [selectAll]);\n  useEffect(() => {\n    if (selected) {\n      setBatch((prev) => [...prev, coupon._id]);\n    } else {\n      setBatch((prev) => prev.filter((item) => item !== coupon._id));\n    }\n  }, [selected]);\n  return (\n    <>\n      <tr\n        className={`coupon ${selected ? \"selected\" : \"\"}`}\n        onClick={(e) => {\n          if (\n            e.nativeEvent.path.includes(actionsRef.current) ||\n            e.nativeEvent.path.includes(checkRef.current) ||\n            batch.length > 0\n          ) {\n          } else {\n            setCouponDetail(true);\n          }\n        }}\n      >\n        {\n          //   <td className=\"checkContainer\" ref={checkRef}>\n          //   <Checkbox\n          //     defaultValue={selected}\n          //     value={selected}\n          //     onChange={(e) => {\n          //       setSelected(e);\n          //     }}\n          //   />\n          // </td>\n        }\n        <td className=\"date\">\n          <Moment format=\"DD MMM YY\">{coupon.createdAt}</Moment>\n        </td>\n        <td>{coupon.title}</td>\n        <td>{coupon.status}</td>\n        <td>{coupon.code}</td>\n        <td className=\"discount\">\n          {coupon.type === \"percent\" ? (\n            <>\n              {coupon.amount}%<span>Up to ₹{coupon.maxDiscount}</span>\n            </>\n          ) : (\n            <>₹{coupon.amount}</>\n          )}\n        </td>\n        <td>₹{coupon.threshold}</td>\n        <td>\n          <Moment format=\"DD MMM YY\">{coupon.date?.from}</Moment>-\n          <Moment format=\"DD MMM YY\">{coupon.date?.to}</Moment>\n        </td>\n        <td>{coupon.accept ? \"Yes\" : \"No\"}</td>\n        <td ref={actionsRef}>\n          {batch.length === 0 && (\n            <Actions icon={<Chev_down_svg />}>\n              <button onClick={() => setCouponDetail(coupon)}>\n                View Detail\n              </button>\n              {coupon.accept && (\n                <button\n                  onClick={() =>\n                    Confirm({\n                      label: \"Accepting Coupon code\",\n                      question:\n                        \"You sure want to take part in this campaign and accept this coupon code?\",\n                      callback: () => declineCoupon(coupon._id),\n                    })\n                  }\n                >\n                  Decline\n                </button>\n              )}\n              {new Date(coupon.date?.to) >=\n                new Date(moment({ time: new Date(), format: \"YYYY-MM-DD\" })) &&\n                !coupon.accept && (\n                  <button\n                    onClick={() =>\n                      Confirm({\n                        label: \"Accepting Coupon code\",\n                        question:\n                          \"You sure want to take part in this campaign and accept this coupon code?\",\n                        callback: () => acceptCoupon(coupon._id),\n                      })\n                    }\n                  >\n                    Accept\n                  </button>\n                )}\n            </Actions>\n          )}\n        </td>\n      </tr>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n      <Modal\n        open={couponDetail}\n        head={true}\n        label=\"Coupon Detail\"\n        setOpen={setCouponDetail}\n        className=\"couponDetail\"\n      >\n        <div className=\"content\">\n          <section>\n            <label>Campaign Title</label>\n            <p>{couponDetail?.title}</p>\n          </section>\n          <section>\n            <label>Campaign Description</label>\n            <p>{couponDetail?.dscr}</p>\n          </section>\n          <section>\n            <label>Coupon Code</label>\n            <p>{couponDetail?.code}</p>\n          </section>\n          <section>\n            <label>Coupon code status</label>\n            <p>{couponDetail?.status}</p>\n          </section>\n          <section>\n            <label>Discount</label>\n            <p>\n              {couponDetail?.type === \"percent\" ? (\n                <>\n                  {couponDetail?.amount}% up to ₹{couponDetail.maxDiscount}\n                </>\n              ) : (\n                <>₹{couponDetail?.amount}</>\n              )}\n            </p>\n          </section>\n          <section>\n            <label>Validity</label>\n            <p>\n              <Moment format=\"DD MMM YY\">{couponDetail.date?.from}</Moment>-\n              <Moment format=\"DD MMM YY\">{couponDetail.date?.to}</Moment>\n            </p>\n          </section>\n          <section>\n            <label>Accept</label>\n            <p>{couponDetail.accept ? \"Yes\" : \"No\"}</p>\n          </section>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default Coupons;\n","import { useEffect, useState, useContext } from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport { updateProfileInfo } from \"./Profile\";\nimport { Modal } from \"./Modal\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Chev_down_svg,\n  Checkbox,\n  Combobox,\n  Step_fill,\n  Img,\n  LS,\n  Succ_svg,\n  External_link_icon,\n  Moment,\n} from \"./Elements\";\nrequire(\"./styles/fbMarketplace.scss\");\n\nexport const Step = ({\n  label,\n  defaultStatus,\n  children,\n  disabled,\n  className,\n  data,\n  step,\n}) => {\n  const [open, setOpen] = useState(data ? !data : null);\n  useEffect(() => {\n    setOpen(defaultStatus);\n  }, [defaultStatus]);\n  return (\n    <div\n      className={`step ${open || defaultStatus ? \"open\" : \"\"} ${\n        disabled ? \"disabled\" : \"\"\n      } ${className || \"\"}`}\n    >\n      <div\n        className=\"head\"\n        onClick={() => {\n          if (!defaultStatus) {\n            setOpen(!open);\n          }\n        }}\n      >\n        <Chev_down_svg className=\"chev\" /> {label}\n        <div className=\"status\">{data && <Step_fill />}</div>\n      </div>\n      {(open || defaultStatus) && <div className=\"body\">{children}</div>}\n    </div>\n  );\n};\n\nconst Marketplace = () => {\n  const [msg, setMsg] = useState(null);\n  const { user, setUser } = useContext(SiteContext);\n  const { FB } = window;\n  const [step, setStep] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    console.log(user.fbMarket);\n    if (!user.fbMarket?.user?.id) {\n      setStep(\"account\");\n    } else if (!user.fbMarket?.businessManager?.id) {\n      setStep(\"businessManager\");\n    } else if (!user.fbMarket?.facebookPage?.id) {\n      setStep(\"fbPage\");\n    }\n    // else if (!user.fbMarket?.dataSharing) {\n    // setStep(\"dataSharing\");\n    // }\n    else if (!user.fbMarket?.commerceAccount?.catalog?.id) {\n      setStep(\"commerceAccount\");\n    } else if (!user.fbMarket?.userAgreement) {\n      setStep(\"terms\");\n    }\n  }, [user]);\n  useEffect(() => {\n    // FB.getLoginStatus(function (response) {\n    //   console.log(response);\n    //   if (response.status === \"connected\") {\n    //     const accessToken = response.authResponse.accessToken;\n    //   }\n    // }, true);\n  }, []);\n  return (\n    <div className=\"fbMarket\">\n      <h1>Facebook marketplace</h1>\n      <div className=\"setup\">\n        <Step\n          data={user.fbMarket?.user?.id ? user.fbMarket.user : null}\n          defaultStatus={step === \"account\"}\n          step={step}\n          label=\"Facebook Account\"\n        >\n          <p className=\"note\">\n            Delivery Pay uses your personal Facebook account to access your\n            business accounts.\n          </p>\n          {user.fbMarket?.user?.id && (\n            <p>Now you can log into Delivery Pay using this account.</p>\n          )}\n          <div className=\"profile\">\n            <div className=\"user\">\n              {user.fbMarket?.user?.id ? (\n                <>\n                  <Img\n                    key=\"img\"\n                    src={user.fbMarket.user.profileImg || \"/profile-user.jpg\"}\n                  />\n                  <p>{user.fbMarket.user.name}</p>\n                </>\n              ) : (\n                <>\n                  <Img key=\"placeholder\" src=\"/profile-user.jpg\" />\n                  <p>Connect your Facebook account to get started</p>\n                </>\n              )}\n            </div>\n            {user.fbMarket?.user?.id ? (\n              <button\n                className=\"btn\"\n                onClick={() => {\n                  FB.logout((res) => {\n                    console.log(res);\n                  });\n                  LS.remove(\"facebook_user_accessToken\");\n                  updateProfileInfo({\n                    \"fbMarket.user\": {},\n                    \"fbMarket.businessManager\": {},\n                    \"fbMarket.facebookPage\": {},\n                    \"fbMarket.dataSharing\": null,\n                    \"fbMarket.commerceAccount\": {},\n                    \"fbMarket.userAgreement\": false,\n                  }).then(({ user: newUser }) => {\n                    setUser((prev) => ({\n                      ...prev,\n                      fbMarket: newUser.fbMarket,\n                    }));\n                  });\n                }}\n              >\n                Disconnect\n              </button>\n            ) : (\n              <button\n                className=\"btn\"\n                onClick={() => {\n                  FB.login((res) => {\n                    LS.set(\n                      \"facebook_user_accessToken\",\n                      res.authResponse?.accessToken\n                    );\n                    const accessToken = res.authResponse.accessToken;\n                    fetch(\"/api/updateFBMarketUser\", {\n                      method: \"PUT\",\n                      headers: { \"Content-Type\": \"application/json\" },\n                      body: JSON.stringify({\n                        accessToken,\n                      }),\n                    })\n                      .then((res) => res.json())\n                      .then((data) => {\n                        if (data.code === \"ok\") {\n                          console.log(\"long_lived_token saved\");\n                          LS.set(\n                            \"facebook_user_accessToken\",\n                            data.long_lived_token\n                          );\n                        }\n                      });\n                    FB.api(\n                      \"/me\",\n                      \"GET\",\n                      { fields: \"name,picture.type(large){url}\" },\n                      (res) => {\n                        console.log(res);\n                        if (res.id) {\n                          updateProfileInfo({\n                            \"fbMarket.user.name\": res.name,\n                            \"fbMarket.user.id\": res.id,\n                            \"fbMarket.user.profileImg\": res.picture.data.url,\n                          }).then(({ user: newUser }) => {\n                            setUser((prev) => ({\n                              ...prev,\n                              fbMarket: newUser.fbMarket,\n                            }));\n                          });\n                        }\n                      }\n                    );\n                  });\n                }}\n              >\n                Connect Account\n              </button>\n            )}\n          </div>\n        </Step>\n        <Step\n          disabled={!user.fbMarket?.user?.id}\n          data={\n            user.fbMarket?.businessManager?.id\n              ? user.fbMarket.businessManager\n              : null\n          }\n          defaultStatus={step === \"businessManager\"}\n          label=\"Business Manager\"\n          className=\"businessManager\"\n        >\n          <BusinessManager setLoading={setLoading} />\n        </Step>\n        <Step\n          data={\n            user.fbMarket?.facebookPage?.id ? user.fbMarket.facebookPage : null\n          }\n          defaultStatus={step === \"fbPage\"}\n          label=\"Facebook Page\"\n          className=\"page\"\n          disabled={!user.fbMarket?.businessManager?.id}\n        >\n          <FbPage />\n        </Step>\n        {\n          //   <Step\n          //   data={user.fbMarket?.dataSharing}\n          //   disabled={!user.fbMarket?.facebookPage?.id}\n          //   label=\"Data Sharing\"\n          //   defaultStatus={step === \"dataSharing\"}\n          //   className=\"dataSharing\"\n          // >\n          //   <DataSharing setStep={setStep} />\n          // </Step>\n        }\n        <Step\n          data={\n            user.fbMarket?.commerceAccount?.catalog?.id\n              ? user.fbMarket.commerceAccount\n              : null\n          }\n          disabled={!user.fbMarket?.facebookPage?.id}\n          label=\"Facebook Commerce Account\"\n          defaultStatus={step === \"commerceAccount\"}\n          className=\"commerceAccount\"\n        >\n          <CommerceAccount setStep={setStep} />\n        </Step>\n        <Step\n          disabled={!user.fbMarket?.commerceAccount?.catalog?.id}\n          data={user.fbMarket?.userAgreement || null}\n          defaultStatus={step === \"terms\"}\n          label=\"Terms and Conditions\"\n        >\n          <p>\n            By proceeding, you accept{\" \"}\n            <a\n              target=\"_blank\"\n              href=\"https://www.facebook.com/legal/commerce_product_merchant_agreement\"\n            >\n              Facebook Commerce Terms <External_link_icon />\n            </a>\n            .\n          </p>\n          {!user.fbMarket?.userAgreement && (\n            <button\n              className=\"btn\"\n              onClick={() => {\n                updateProfileInfo({\n                  \"fbMarket.userAgreement\": true,\n                }).then(({ user: newUser }) => {\n                  setUser((prev) => ({ ...prev, fbMarket: newUser.fbMarket }));\n                  setStep(\"\");\n                  setMsg(\n                    <>\n                      <button onClick={() => setMsg(null)}>Okay</button>\n                      <div>\n                        <Succ_svg />\n                        <h4>\n                          Facebook marketplace has been setup successfully. Now\n                          you can add products to facebook marketplace directly\n                          from Delivery Pay.\n                        </h4>\n                        <Link to=\"/account/myShop/products\">\n                          Add your first product\n                        </Link>\n                      </div>\n                    </>\n                  );\n                });\n              }}\n            >\n              Finish setup\n            </button>\n          )}\n        </Step>\n      </div>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst BusinessManager = ({ setLoading }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const { FB } = window;\n  const [businessManagers, setBusinessManagers] = useState([]);\n  const [err, setErr] = useState(null);\n  useEffect(() => {\n    if (!user.fbMarket?.business?.id) {\n      FB.api(\n        \"/me\",\n        \"GET\",\n        {\n          fields: \"businesses{picture{url},name,id,created_time}\",\n          access_token: LS.get(\"facebook_user_accessToken\"),\n        },\n        function (res) {\n          if (res.businesses) {\n            setBusinessManagers(res.businesses.data);\n          }\n        }\n      );\n    }\n  }, [user]);\n  return (\n    <>\n      {user.fbMarket?.businessManager?.id ? (\n        <>\n          <p className=\"note\">\n            The Business Manager that owns all your Facebook business accounts.\n          </p>\n          <ul>\n            <li>\n              <div className=\"profile\">\n                <Img src={user.fbMarket.businessManager.profileImg} />\n                <div className=\"detail\">\n                  <a\n                    href={`https://business.facebook.com/latest/home?nav_ref=bm_home_redirect&business_id=${user.fbMarket.businessManager.id}`}\n                  >\n                    {user.fbMarket.businessManager.name} <External_link_icon />\n                  </a>\n                  <span>ID: {user.fbMarket.businessManager.id}</span>\n                  <span>\n                    Created at:{\" \"}\n                    <Moment format=\"DD MMM YYYY, hh:mm a\">\n                      {user.fbMarket.businessManager.created_time}\n                    </Moment>\n                  </span>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  updateProfileInfo({\n                    \"fbMarket.businessManager\": {},\n                    \"fbMarket.facebookPage\": {},\n                    \"fbMarket.commerceAccount\": {},\n                    \"fbMarket.userAgreement\": false,\n                  }).then(({ user: newUser }) => {\n                    setUser((prev) => ({\n                      ...prev,\n                      fbMarket: newUser.fbMarket,\n                    }));\n                  });\n                }}\n                className=\"btn\"\n              >\n                Disconnect\n              </button>\n            </li>\n          </ul>\n        </>\n      ) : (\n        <>\n          <p className=\"note\">\n            Connect the Business Manager you use to manage your business Page,\n            accounts, and product catalog. You can only connect a Business\n            Manager you have admin access to.\n          </p>\n          <p className=\"note\">\n            After you connect, you may receive a verification email from\n            Facebook. If so, you’ll need to confirm your business email address\n            before proceeding.\n          </p>\n          {err && <div className=\"err\">{err}</div>}\n          <ul>\n            {businessManagers.map((item, i) => (\n              <li key={i}>\n                <div className=\"profile\">\n                  <Img src={item.picture.data.url} />\n                  <div className=\"detail\">\n                    <a\n                      href={`https://business.facebook.com/latest/home?nav_ref=bm_home_redirect&business_id=${item.business_id}&asset_id=${item.asset_id}`}\n                    >\n                      {item.name} <External_link_icon />\n                    </a>\n                    <span>ID: {item.id}</span>\n                    <span>\n                      Created at:{\" \"}\n                      <Moment format=\"DD MMM YYYY, hh:mm a\">\n                        {item.created_time}\n                      </Moment>\n                    </span>\n                  </div>\n                </div>\n                <button\n                  className=\"btn\"\n                  onClick={() => {\n                    updateProfileInfo({\n                      \"fbMarket.businessManager.id\": item.id,\n                      \"fbMarket.businessManager.name\": item.name,\n                      \"fbMarket.businessManager.createdAt\": item.created_time,\n                      \"fbMarket.businessManager.profileImg\":\n                        item.picture.data.url,\n                    }).then(({ user: newUser }) => {\n                      setUser((prev) => ({\n                        ...prev,\n                        fbMarket: newUser.fbMarket,\n                      }));\n                    });\n                  }}\n                >\n                  Connect\n                </button>\n              </li>\n            ))}\n            <li>\n              <div className=\"profile\">\n                <Img src=\"/profile-user.jpg\" />\n                <p>Create Business Manager</p>\n              </div>\n              <button\n                className=\"btn\"\n                onClick={() => {\n                  setLoading(true);\n                  FB.api(\n                    \"/me/businesses\",\n                    \"POST\",\n                    {\n                      name: \"Delivery Pay Business Manager\",\n                      vertical: \"ECOMMERCE\",\n                    },\n                    function (res) {\n                      setLoading(false);\n                      console.log(res);\n                      if (res.id) {\n                        FB.api(\n                          \"/me\",\n                          \"GET\",\n                          {\n                            fields:\n                              \"businesses{picture{url},name,id,created_time}\",\n                          },\n                          function (res) {\n                            if (res.businesses) {\n                              setBusinessManagers(res.businesses.data);\n                            }\n                          }\n                        );\n                      }\n                      if (res.error) {\n                        if (res.error.code === 1) {\n                          setErr(\n                            <>\n                              You have reached maximum number of business\n                              manager one user can have. Use one of existing\n                              business manager instead of creating a new one.\n                            </>\n                          );\n                        } else if (res.error.code === 3947) {\n                          setErr(\n                            <>\n                              You already have a Business Manager with the same\n                              name. Select \"Delivery Pay Business Manager\"\n                              instead of creating a new one. or Choose another.\n                            </>\n                          );\n                        } else {\n                          setErr(\n                            <>{res.error.error_user_msg || res.error.message}</>\n                          );\n                        }\n                      }\n                    }\n                  );\n                }}\n              >\n                Create new\n              </button>\n            </li>\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\nconst FbPage = () => {\n  const { FB } = window;\n  const { user, setUser } = useContext(SiteContext);\n  const [fbPages, setFbPages] = useState([]);\n  const [createNew, setCreateNew] = useState(false);\n  useEffect(() => {\n    if (!user.fbMarket?.business?.id) {\n      FB.api(\n        \"/me/accounts\",\n        \"GET\",\n        {\n          fields: \"picture{url},access_token,name,category,business\",\n          access_token: LS.get(\"facebook_user_accessToken\"),\n        },\n        function (res) {\n          console.log(\"facebook pages:\", res);\n          if (res.data) {\n            setFbPages(res.data);\n          }\n        }\n      );\n    }\n  }, [user]);\n  return (\n    <>\n      {user.fbMarket?.facebookPage?.id ? (\n        <>\n          <p className=\"note\">\n            The Facebook business Page that you use to sell your products or\n            post ads.\n          </p>\n          <ul>\n            <li>\n              <div className=\"profile\">\n                <Img src={user.fbMarket.facebookPage.profileImg} />\n                <div className=\"detail\">\n                  <a\n                    href={`https://business.facebook.com/latest/home?nav_ref=bm_home_redirect&business_id=${user.fbMarket.businessManager.id}`}\n                  >\n                    {user.fbMarket.facebookPage.name} <External_link_icon />\n                  </a>\n                  <span>Category: {user.fbMarket.facebookPage.category}</span>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  updateProfileInfo({\n                    \"fbMarket.facebookPage\": {},\n                    \"fbMarket.commerceAccount\": {},\n                    \"fbMarket.userAgreement\": false,\n                  }).then(({ user: newUser }) => {\n                    console.log(newUser.fbMarket);\n                    setUser((prev) => ({\n                      ...prev,\n                      fbMarket: newUser.fbMarket,\n                    }));\n                  });\n                }}\n                className=\"btn\"\n              >\n                Disconnect\n              </button>\n            </li>\n          </ul>\n        </>\n      ) : (\n        <>\n          <p className=\"note\">\n            Connect the business Page you use to sell products or post ads. You\n            can only connect a Page you have admin access to.\n          </p>\n          <ul>\n            {fbPages.map((item, i) => (\n              <li key={i}>\n                <div className=\"profile\">\n                  <Img src={item.picture.data.url} />\n                  <div className=\"detail\">\n                    <a\n                      href={`https://business.facebook.com/latest/home?nav_ref=bm_home_redirect&business_id=${item.business_id}&asset_id=${item.asset_id}`}\n                    >\n                      {item.name} <External_link_icon />\n                    </a>\n                    <span>{item.category}</span>\n                  </div>\n                </div>\n                <button\n                  className=\"btn\"\n                  onClick={() => {\n                    updateProfileInfo({\n                      \"fbMarket.facebookPage.id\": item.id,\n                      \"fbMarket.facebookPage.name\": item.name,\n                      \"fbMarket.facebookPage.access_token\": item.access_token,\n                      \"fbMarket.facebookPage.profileImg\": item.picture.data.url,\n                      \"fbMarket.facebookPage.category\": item.category,\n                    }).then(({ user: newUser }) => {\n                      setUser((prev) => ({\n                        ...prev,\n                        fbMarket: newUser.fbMarket,\n                      }));\n                    });\n                  }}\n                >\n                  Connect\n                </button>\n              </li>\n            ))}\n            <li>\n              <div className=\"profile\">\n                <Img src=\"/profile-user.jpg\" />\n                <p>Create Page</p>\n              </div>\n              <button className=\"btn\" onClick={() => setCreateNew(true)}>\n                Create new\n              </button>\n            </li>\n          </ul>\n        </>\n      )}\n      <Modal\n        head={true}\n        label=\"Create a new Facebook business Page\"\n        open={createNew}\n        setOpen={() => {\n          setCreateNew(false);\n          FB.api(\n            \"/me/accounts\",\n            \"GET\",\n            {\n              fields: \"picture{url},access_token,name,category,business\",\n              access_token: LS.get(\"facebook_user_accessToken\"),\n            },\n            function (res) {\n              console.log(\"facebook pages:\", res);\n              if (res.data) {\n                setFbPages(res.data);\n              }\n            }\n          );\n        }}\n        className=\"createNewPage\"\n      >\n        <div className=\"content\">\n          <p>\n            You'll be redirected to Facebook where you can create a new business\n            Page. All you need for now are basic details such as:\n          </p>\n          <ul>\n            <li>Business Page name</li>\n            <li>Business Page category</li>\n            <li>Profile Photo</li>\n            <li>Cover photo</li>\n            <li>Store description</li>\n          </ul>\n          <p>\n            As soon as you add these details, return to Delivery Pay and finish\n            setup. You can always update your Page later.\n          </p>\n          <a\n            target=\"_blank\"\n            href=\"https://www.facebook.com/pages/create/?ref_type=hc\"\n          >\n            <External_link_icon /> Go to Facebook\n          </a>\n        </div>\n      </Modal>\n    </>\n  );\n};\nconst DataSharing = ({ setStep }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [shareData, setShareData] = useState(\n    !!user.fbMarket?.dataSharing || false\n  );\n  const [dataSharingLavel, setDataSharingLavel] = useState(\n    user.fbMarket?.dataSharing || \"\"\n  );\n  const [pixels, setPixels] = useState([]);\n  return (\n    <>\n      <p className=\"note\">\n        Facebook uses your customer data to target products, page posts, and ads\n        to your customers. To get started, first enable data sharing, and then\n        choose your level.\n      </p>\n      <section className=\"checkWrapper\">\n        <Checkbox\n          value={shareData}\n          onChange={(e) => {\n            setShareData(e);\n          }}\n        />\n        <label>ENABLE CUSTOMER DATA SHARING</label>\n      </section>\n      {shareData && (\n        <>\n          <div className=\"dataSharingLavel\">\n            <p>Choose lavel</p>\n            <Combobox\n              defaultValue={dataSharingLavel}\n              required={true}\n              options={[\n                { label: \"Standard\", value: \"standard\" },\n                { label: \"Enhanced\", value: \"enhanced\" },\n                { label: \"Maximum\", value: \"maximum\" },\n              ]}\n              onChange={(e) => setDataSharingLavel(e.value)}\n            />\n            {dataSharingLavel === \"standard\" && (\n              <p>\n                Standard uses <strong>Facebook Pixel</strong>, a third-party\n                cookie that collects and shares customers’ browsing behavior on\n                your online store. Browser-based ad blockers can prevent the\n                pixel from collecting data.\n              </p>\n            )}\n            {dataSharingLavel === \"enhanced\" && (\n              <p>\n                Enhanced uses <strong>Advanced Matching</strong>, which shares\n                personal information about your customers, including name,\n                location, and email. This pixel also shares customer browsing\n                behavior on your online store. Browser-based ad blockers can\n                prevent the pixel from collecting data.\n              </p>\n            )}\n            {dataSharingLavel === \"maximum\" && (\n              <p>\n                Maximum combines all data-sharing options to reach the highest\n                amount of customers. It uses <strong>Conversions API</strong>,\n                which shares data directly from Delivery Pay’s servers to\n                Facebook. This means the data can’t be blocked by ad blockers.\n              </p>\n            )}\n          </div>\n          <div className=\"warning\">\n            <svg viewBox=\"0 0 20 20\" focusable=\"false\" aria-hidden=\"true\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10 0C4.486 0 0 4.486 0 10s4.486 10 10 10 10-4.486 10-10S15.514 0 10 0zM9 6a1 1 0 1 1 2 0v4a1 1 0 1 1-2 0V6zm1 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"\n              ></path>\n            </svg>\n            <p className=\"dscr\">\n              This option shares <strong>personal customer details</strong>.\n              Ensure your privacy policy reflects your data-sharing settings.\n            </p>\n          </div>\n          {\n            //   <div>\n            //   <div className=\"head\">\n            //     <Chev_down_svg />\n            //     <p>View Detail</p>\n            //   </div>\n            // </div>\n          }\n          <div className=\"pixel\">\n            <p>BEHAVIOUR WILL BE TRACKED WITH THIS PIXEL</p>\n            <ul>\n              {pixels.map((item, i) => (\n                <li key={i}>\n                  {i}\n                  <div className=\"facebookPage\">\n                    <div className=\"thumb\" />\n                    <p>{item.name}</p>\n                    <span>ID: {item.id}</span>\n                    <span>Created at: {item.createdAt}</span>\n                  </div>\n                  <button>Connect</button>\n                </li>\n              ))}\n              <li>\n                <div className=\"profile\">\n                  <Img src=\"/profile-user.jpg\" />\n                  <p>\n                    Create Facebook Pixel{\" \"}\n                    <span>\n                      By creating a pixel, you agree to{\" \"}\n                      <a href=\"https://www.facebook.com/legal/technology_terms\">\n                        Facebook’s Business Tools Terms\n                      </a>\n                    </span>\n                  </p>\n                </div>\n                <button className=\"btn\">Create new</button>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n      <div className=\"btns\">\n        <button\n          className=\"btn_clear\"\n          onClick={() => {\n            updateProfileInfo({\n              \"fbMarket.dataSharing\": \"none\",\n            });\n          }}\n        >\n          Skip\n        </button>\n        <button\n          className=\"btn\"\n          onClick={() => {\n            if (shareData && !dataSharingLavel) {\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <h4>Select a data sharing level</h4>\n                  </div>\n                </>\n              );\n              return;\n            }\n            if (user.fbMarket?.dataSharing !== dataSharingLavel) {\n              updateProfileInfo({\n                \"fbMarket.dataSharing\": dataSharingLavel,\n              }).then(({ user: newUser }) => {\n                setUser((prev) => ({ ...prev, fbMarket: newUser.fbMarket }));\n              });\n            }\n          }}\n        >\n          Confirm\n        </button>\n      </div>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nconst CommerceAccount = ({ setStep }) => {\n  const { FB } = window;\n  const { user, setUser } = useContext(SiteContext);\n  const [commerceAccounts, setCommerceAccounts] = useState([]);\n  const [catalog, setCatalog] = useState(\n    user.fbMarket?.commerceAccount?.catalog\n  );\n  useEffect(() => {\n    setCatalog(user.fbMarket?.commerceAccount?.catalog);\n  }, [user]);\n  return (\n    <>\n      <p className=\"note\">\n        Create a Commerce account to start selling on Facebook, Instagram, or\n        both. Once you have an account you’ll be able to customize your Shop and\n        collections in the{\" \"}\n        <a\n          target=\"_blank\"\n          href=\"https://www.facebook.com/business/help/2371372636254534\"\n        >\n          Facebook Commerce Manager <External_link_icon />\n        </a>\n        .\n      </p>\n      <ul>\n        {\n          //   commerceAccounts.map((item, i) => (\n          //   <li key={i}>\n          //     {i}\n          //     <div className=\"facebookPage\">\n          //       <div className=\"thumb\" />\n          //       <p>{item.name}</p>\n          //       <span>ID: {item.id}</span>\n          //       <span>Created at: {item.createdAt}</span>\n          //     </div>\n          //     <button>Connect</button>\n          //   </li>\n          // ))\n        }\n        {catalog && (\n          <li className=\"catalog\">\n            <p>PRODUCTS WILL BE SYNCED TO THIS CATALOG</p>\n            <p>{catalog.name}</p>\n            <span>ID: {catalog.id}</span>\n          </li>\n        )}\n        {!catalog && (\n          <li>\n            <div className=\"profile\">\n              <Img src=\"/profile-user.jpg\" />\n              <p>Create a new Commerce Account</p>\n            </div>\n            <button\n              className=\"btn\"\n              onClick={() => {\n                FB.api(\n                  `/${user.fbMarket.businessManager.id}/owned_product_catalogs`,\n                  \"GET\",\n                  {\n                    access_token: LS.get(\"facebook_user_accessToken\"),\n                  },\n                  async function ({ data }) {\n                    const delCatalog =\n                      data.find(\n                        (item) => item.name === \"Delivery Pay Product Catalog\"\n                      ) ||\n                      (await FB.api(\n                        `/${user.fbMarket.businessManager.id}/owned_product_catalogs`,\n                        \"POST\",\n                        {\n                          name: \"Delivery Pay Product Catalog\",\n                          access_token: LS.get(\"facebook_user_accessToken\"),\n                        },\n                        function (res) {\n                          console.log(res.id);\n                          if (res.id) {\n                            return {\n                              ...res,\n                              name: \"Delivery Pay Product Catalog\",\n                            };\n                          } else {\n                            return null;\n                          }\n                          if (res.error) {\n                            console.log(res.error);\n                          }\n                        }\n                      ));\n                    if (delCatalog) {\n                      setCatalog(delCatalog);\n                      updateProfileInfo({\n                        \"fbMarket.commerceAccount.catalog\": delCatalog,\n                      }).then(({ user: newUser }) => {\n                        setUser((prev) => ({\n                          ...prev,\n                          fbMarket: newUser.fbMarket,\n                        }));\n                        setStep(\"terms\");\n                      });\n                    }\n                  }\n                );\n              }}\n            >\n              Create new\n            </button>\n          </li>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Marketplace;\n","import {\n  useEffect,\n  useState,\n  useContext,\n  useRef,\n  useLayoutEffect,\n  lazy,\n} from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport {\n  Err_svg,\n  Plus_svg,\n  X_svg,\n  Succ_svg,\n  FileInput,\n  NumberInput,\n  UploadFiles,\n  Combobox,\n  Tabs,\n  Checkbox,\n  Chev_down_svg,\n  Actions,\n  Pagination,\n  calculateDiscount,\n  calculatePrice,\n  Tip,\n  Media,\n  LS,\n  Moment,\n  moment,\n  InputDateRange,\n} from \"./Elements\";\nimport { Modal, Confirm } from \"./Modal\";\nimport { Link, Route, Switch, Redirect } from \"react-router-dom\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport OrderManagement, { FullOrder } from \"./OrderManagement\";\nimport RefundManagement, { FullRefund } from \"./RefundManagement\";\nimport Campaigns from \"./CampaignManagement\";\nimport FBMarket from \"./fbMarketplace\";\nimport { updateProfileInfo } from \"./Profile\";\nimport { Step } from \"./fbMarketplace\";\nimport { CSVLink } from \"react-csv\";\n\nrequire(\"./styles/products.scss\");\n\nconst parseXLSXtoJSON = (file, cb) => {\n  var name = file.name;\n  const reader = new FileReader();\n  reader.onload = async (evt) => {\n    const bstr = evt.target.result;\n    const XLSX = await import(\"xlsx\");\n    const wb = XLSX.read(bstr, { type: \"binary\" });\n    const wsname = wb.SheetNames[0];\n    const ws = wb.Sheets[wsname];\n    const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\n    const arr = [];\n    const cols = data.shift();\n    data.forEach((row, i) => {\n      const item = {};\n      cols.forEach((col, j) => {\n        let label;\n        switch (col) {\n          case \"Images\":\n            label = \"images\";\n            break;\n          case \"Name\":\n            label = \"name\";\n            break;\n          case \"Description\":\n            label = \"dscr\";\n            break;\n          case \"Material\":\n            label = \"material\";\n            break;\n          case \"Size [Please specify mm, cm, inch or KG]\":\n            label = \"size\";\n            break;\n          case \"Category\":\n            label = \"category\";\n            break;\n          case \"Type\":\n            label = \"type\";\n            break;\n          case \"Price in INR.\":\n            label = \"price\";\n            break;\n          case \"Units Available\":\n            label = \"available\";\n            break;\n          case \"HSN Code\":\n            label = \"hsn\";\n            break;\n          case \"GST %\":\n            label = \"gst\";\n            break;\n          case \"id\":\n            label = \"_id\";\n            break;\n          default:\n        }\n        item[label] = row[j];\n      });\n      arr.push(item);\n    });\n    cb(arr);\n  };\n  reader.readAsBinaryString(file);\n};\n\nconst MyShop = ({ history, location, match }) => {\n  const { user, userType } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [shopSetupComplete, setShopSetupComplete] = useState(false);\n  useEffect(() => {\n    fetch(\"/api/categories\")\n      .then((res) => res.json())\n      .then((data) => {\n        setCategories(data.categories);\n      });\n  }, []);\n  useEffect(() => {\n    if (\n      !categories?.length ||\n      !user.shopInfo?.terms?.length ||\n      user.shopInfo?.shippingCost === undefined ||\n      user.shopInfo?.shippingCost === null ||\n      user.shopInfo?.deliveryWithin === undefined ||\n      user.shopInfo?.deliveryWithin === null ||\n      user.shopInfo?.refundable === undefined ||\n      Object.values(user.shopInfo?.paymentMethod || {}).length < 6\n    ) {\n      setShopSetupComplete(false);\n    } else {\n      setShopSetupComplete(true);\n    }\n  }, [categories, user]);\n  return (\n    <>\n      {userType === \"buyer\" && <Redirect to=\"/account/orders/current\" />}\n      <div className=\"myShop\">\n        <div style={{ display: \"none\" }}>\n          <X_svg />\n        </div>\n        <Tabs\n          basepath=\"/account/myShop/\"\n          tabs={[\n            { label: \"Products & Services\", path: \"products\" },\n            { label: \"Orders\", path: \"orders\" },\n            { label: \"Refunds\", path: \"refunds\" },\n            { label: \"Campaigns\", path: \"campaigns\" },\n            { label: \"FB Marketplace\", path: \"fbMarketplace\" },\n            { label: \"Settings\", path: \"settings\" },\n          ]}\n        />\n        <Switch>\n          <Route path=\"/account/myShop/products\">\n            <Products\n              categories={categories}\n              shopSetupComplete={shopSetupComplete}\n            />\n          </Route>\n          <Route path=\"/account/myShop/orders/:_id\" component={FullOrder} />\n          <Route path=\"/account/myShop/orders\">\n            <OrderManagement categories={categories} />\n          </Route>\n          <Route path=\"/account/myShop/refunds/:_id\" component={FullRefund} />\n          <Route path=\"/account/myShop/refunds\" component={RefundManagement} />\n          <Route path=\"/account/myShop/campaigns\" component={Campaigns} />\n          <Route path=\"/account/myShop/fbMarketplace\" component={FBMarket} />\n          <Route path=\"/account/myShop/settings\">\n            <Settings categories={categories} setCategories={setCategories} />\n          </Route>\n        </Switch>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </div>\n    </>\n  );\n};\nconst ProductForm = ({ prefill, onSuccess, categories }) => {\n  const { user } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [type, setType] = useState(prefill?.type || \"product\");\n  const [category, setCategory] = useState(prefill?.category || \"\");\n  const [discount, setDiscount] = useState({\n    type: prefill?.discount?.type || null,\n    amount: prefill?.discount?.amount || 0,\n    dscr: prefill?.discount?.dscr || \"\",\n  });\n  const [name, setName] = useState(prefill?.name || \"\");\n  const [dscr, setDscr] = useState(prefill?.dscr || \"\");\n  const [price, setPrice] = useState(prefill?.price || \"\");\n  const [files, setFiles] = useState(prefill?.images || []);\n  const [gst, setGst] = useState(\n    prefill?.gst || user.gst?.verified ? user.gst.amount : 0\n  );\n  const [hsn, setHsn] = useState(prefill?.hsn || \"\");\n  const [available, setAvailable] = useState(prefill?.available);\n  const [msg, setMsg] = useState(null);\n  const [tags, setTags] = useState(prefill?.tags || []);\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const images = files.length\n      ? await UploadFiles({\n          files,\n          setMsg,\n        })\n      : [];\n    fetch(`/api/${prefill ? \"edit\" : \"add\"}Product`, {\n      method: prefill ? \"PATCH\" : \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        type,\n        name,\n        dscr,\n        price: +price,\n        images,\n        category,\n        tags,\n        available:\n          available === true || available === false ? available : +available,\n        gst,\n        discount,\n        ...(prefill && { _id: prefill._id }),\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.product);\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>\n                  You can't add more that 100 product at a time. Delete a\n                  product/service and try again.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not add product. please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not add product. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form onSubmit={submit} className={loading ? \"loading\" : \"\"}>\n        <section className=\"type\">\n          <label>Type</label>\n          <Combobox\n            defaultValue={type}\n            options={[\n              { label: \"Product\", value: \"product\" },\n              { label: \"Service\", value: \"service\" },\n              { label: \"Other\", value: \"other\" },\n            ]}\n            onChange={(e) => {\n              setType(e.value);\n            }}\n          />\n        </section>\n        <section className=\"name\">\n          <label>Name of the product/service</label>\n          <input\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required={true}\n          />\n        </section>\n        <section className=\"category\">\n          <label>\n            Category{\" \"}\n            <Tip>\n              You can Add/Edit/Delete your categories{\" \"}\n              <Link to=\"/account/myShop/settings\">here</Link>\n            </Tip>\n          </label>\n          <Combobox\n            required={true}\n            defaultValue={category}\n            options={categories.map((item) => ({ label: item, value: item }))}\n            onChange={(e) => setCategory(e.value)}\n          />\n        </section>\n        <section>\n          <label>Price ₹</label>\n          <NumberInput\n            defaultValue={price}\n            onChange={(e) => setPrice(e.target.value)}\n            required={true}\n          />\n        </section>\n        <section className=\"available\">\n          {type === \"product\" ? (\n            <>\n              <label>Available in stock</label>\n              <NumberInput\n                required={true}\n                defaultValue={available}\n                onChange={(e) => setAvailable(e.target.value)}\n              />\n            </>\n          ) : (\n            <>\n              <label>Availability</label>\n              <Combobox\n                defaultValue={available}\n                required={true}\n                options={[\n                  { label: \"Available\", value: true },\n                  { label: \"Not available\", value: false },\n                ]}\n                onChange={(e) => setAvailable(e.value)}\n              />\n            </>\n          )}\n        </section>\n        <section className=\"dscr\">\n          <label>Description of the product/service</label>\n          <TextareaAutosize\n            value={dscr}\n            onChange={(e) => setDscr(e.target.value)}\n            required={true}\n          />\n        </section>\n        <section className=\"tags\">\n          <label>Tags</label>\n          <ul>\n            {tags.map((item) => (\n              <li key={item}>\n                {item}\n                <button\n                  onClick={() => {\n                    setTags((prev) => prev.filter((tag) => tag !== item));\n                  }}\n                >\n                  <X_svg />\n                </button>\n              </li>\n            ))}\n            <li className=\"form\">\n              <input\n                placeholder=\"addNewTag\"\n                onKeyPress={(e) => {\n                  const value = `${e.target.value.trim()}`;\n                  if (e.charCode === 13) {\n                    e.preventDefault();\n                    if (!value) return;\n                    setTags((prev) => [\n                      ...prev.filter((tag) => tag !== value),\n                      value,\n                    ]);\n                    e.target.focus();\n                    e.target.value = \"\";\n                  }\n                }}\n              />\n              <button\n                type=\"button\"\n                onClick={(e) => {\n                  const input = e.target.previousElementSibling;\n                  const value = `${e.target.previousElementSibling.value.trim()}`;\n                  if (!value) return;\n                  setTags((prev) => [\n                    ...prev.filter((tag) => tag !== value),\n                    value,\n                  ]);\n                  input.value = \"\";\n                  input.focus();\n                }}\n              >\n                Add Tag\n              </button>\n            </li>\n          </ul>\n        </section>\n        <section className=\"images\">\n          <label>Images of the product</label>\n          <FileInput\n            multiple={true}\n            prefill={prefill?.images}\n            accept=\"image/*\"\n            onChange={(files) => setFiles(files)}\n          />\n        </section>\n        <section>\n          <label>HSN Code</label>\n          <input value={hsn} onChange={(e) => setHsn(e.target.value)} />\n        </section>\n        {user.gst?.verified && (\n          <section>\n            <label>GST (%)</label>\n            <NumberInput\n              defaultValue={gst}\n              onChange={(e) => setGst(e.target.value)}\n            />\n          </section>\n        )}\n        <section className=\"discountType\">\n          <label>Discount Type</label>\n          <Combobox\n            defaultValue={discount.type}\n            options={[\n              { label: \"None\", value: null },\n              { label: \"Percent\", value: \"percent\" },\n              { label: \"Flat\", value: \"flat\" },\n            ]}\n            onChange={(e) =>\n              setDiscount((prev) => ({ ...prev, type: e.value }))\n            }\n          />\n        </section>\n        {discount.type !== null && (\n          <>\n            <section className=\"discountAmount\">\n              <label>Amount {discount.type === \"percent\" && \"(%)\"}</label>\n              <NumberInput\n                defaultValue={discount.amount}\n                onChange={(e) =>\n                  setDiscount((prev) => ({ ...prev, amount: e.target.value }))\n                }\n              />\n            </section>\n            <section className=\"discountDscr\">\n              <label>Discount description</label>\n              <TextareaAutosize\n                defaultValue={discount.dscr}\n                onChange={(e) =>\n                  setDiscount((prev) => ({ ...prev, dscr: e.target.value }))\n                }\n              />\n            </section>\n          </>\n        )}\n        {price && (\n          <section className=\"finalPrice\">\n            <p>\n              <label>Input price</label>\n              {price}\n            </p>\n            {+gst > 0 && (\n              <p className=\"gst\">\n                <label>GST {gst}%</label>+{((+price / 100) * +gst).fix()}\n              </p>\n            )}\n            {\n              //   <p>\n              //   <label>Delivery Pay fee 10%</label>+\n              //   {((+price + (+price / 100) * +gst) * 0.1).fix(2)}\n              // </p>\n            }\n            {discount.amount > 0 && discount.type === \"flat\" && (\n              <p>\n                <label>Discount flat</label>- ₹{(+discount.amount).fix()}\n              </p>\n            )}\n            {discount.amount > 0 && discount.type === \"percent\" && (\n              <p>\n                <label>Discount {discount.amount}%</label>- ₹\n                {((+price / 100) * discount.amount).fix()}\n              </p>\n            )}\n            <p className=\"final\">\n              <label>Listing Price</label>₹\n              {(\n                +price +\n                (+price / 100) * +gst -\n                (discount.type === \"percent\"\n                  ? (+price / 100) * discount.amount\n                  : 0) -\n                (discount.type === \"flat\" ? discount.amount : 0)\n              ).fix()}\n            </p>\n          </section>\n        )}\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nconst Products = ({ categories, shopSetupComplete }) => {\n  const { user } = useContext(SiteContext);\n  const { FB } = window;\n  const [productForm, setProductForm] = useState(false);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(20);\n  const [category, setCategory] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState({\n    column: \"createdAt\",\n    order: \"dsc\",\n  });\n  const [dateRange, setDateRange] = useState(null);\n  const [type, setType] = useState(\"\");\n  const [products, setProducts] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [batch, setBatch] = useState([]);\n  const [addMany, setAddMany] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const deleteItems = (items) => {\n    if (items.length) {\n      fetch(\"/api/deleteProducts\", {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ _ids: items }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.code === \"ok\") {\n            setBatch([]);\n            setProducts((prev) =>\n              prev.filter((item) => !items.some((_id) => _id === item._id))\n            );\n          } else {\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Err_svg />\n                  <h4>Could not delete products. Try again.</h4>\n                </div>\n              </>\n            );\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not delete products. Make sure you're online.</h4>\n              </div>\n            </>\n          );\n        });\n    }\n  };\n  const deleteMany = () => deleteItems(batch);\n  const addToFbMarket = (_ids) => {\n    fetch(\"/api/addToFbMarket\", {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _ids,\n        access_token: LS.get(\"facebook_user_accessToken\"),\n      }),\n    })\n      .then((res) => res.json())\n      .then(({ code, fb_products }) => {\n        if (code === \"ok\") {\n          const success = [];\n          const failed = [];\n          fb_products.forEach((item, i) => {\n            if (item.success) {\n              success.push(item);\n            } else {\n              failed.push(item);\n            }\n          });\n          setProducts((prev) =>\n            prev.map((item) => {\n              const prod = fb_products.find(\n                (product) => product._id === item._id\n              );\n              if (prod) {\n                return {\n                  ...item,\n                  fbMarketId: prod.fbMarketId,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                {failed.length === 0 ? (\n                  <>\n                    <Succ_svg />\n                    <h4>{success.length} products has been added.</h4>\n                  </>\n                ) : (\n                  <>\n                    <Err_svg />\n                    <h4>{failed.length} products failed.</h4>\n                  </>\n                )}\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not add products to Facebook Marketplace.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>\n                Could not add products to Facebook Marketplace. Make sure you're\n                online.\n              </h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const removeFromFbMarket = (_ids) => {\n    fetch(\"/api/removeFromFbMarket\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _ids,\n        access_token: LS.get(\"facebook_user_accessToken\"),\n      }),\n    })\n      .then((res) => res.json())\n      .then(({ code, fb_products }) => {\n        if (code === \"ok\") {\n          const success = [];\n          const failed = [];\n          fb_products.forEach((item, i) => {\n            if (item.success) {\n              success.push(item);\n            } else {\n              failed.push(item);\n            }\n          });\n          setProducts((prev) =>\n            prev.map((item) => {\n              const prod = fb_products.find(\n                (product) => product._id === item._id\n              );\n              if (prod) {\n                return {\n                  ...item,\n                  fbMarketId: prod.fbMarketId,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                {failed.length === 0 ? (\n                  <>\n                    <Succ_svg />\n                    <h4>{success.length} products has been removed.</h4>\n                  </>\n                ) : (\n                  <>\n                    <Err_svg />\n                    <h4>{failed.length} products failed to remove.</h4>\n                  </>\n                )}\n              </div>\n            </>\n          );\n          // console.log(data);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not remove products from Facebook Marketplace.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>\n                Could not remove products from Facebook Marketplace. Make sure\n                you're online.\n              </h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    const startDate = moment({\n      time: dateRange?.startDate,\n      format: \"YYYY-MM-DD\",\n    });\n    const endDate = moment({\n      time: new Date(dateRange?.endDate)?.setHours(24, 0, 0, 0),\n      format: \"YYYY-MM-DD\",\n    });\n    fetch(\n      `/api/products?${new URLSearchParams({\n        ...(search && { q: search }),\n        page,\n        perPage,\n        sort: sort.column,\n        order: sort.order,\n        ...(dateRange && {\n          dateFrom: startDate,\n          dateTo: endDate,\n        }),\n        ...(category && { category }),\n        ...(type && { type }),\n      })}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setProducts(data.products);\n          setTotal(data.total);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get products.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [category, search, page, perPage, type, addMany, dateRange]);\n  useEffect(() => {\n    if (selectAll) {\n      // setBatch(products.map((item) => item._id));\n    } else {\n      setBatch([]);\n    }\n  }, [selectAll]);\n  useEffect(() => {\n    if (batch.length === 0) {\n      setSelectAll(false);\n    }\n  }, [batch]);\n  return (\n    <>\n      <div className=\"benner\">\n        <p>Product Management</p>\n        {shopSetupComplete ? (\n          <>\n            <button className=\"pill\" onClick={() => setProductForm(true)}>\n              <Plus_svg /> Add Product\n            </button>\n            <button\n              className=\"pill batchUpload\"\n              onClick={() => setAddMany(true)}\n            >\n              <Plus_svg /> Batch Upload\n            </button>\n          </>\n        ) : (\n          <Link to=\"/account/myShop/settings\" className=\"err\">\n            <p>Please complete your shop information to add product.</p>\n          </Link>\n        )}\n      </div>\n      <div className=\"filters\">\n        <section>\n          <label>Total:</label>\n          {total}\n        </section>\n        <section>\n          <label>Per Page:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"20\", value: 20 },\n              { label: \"30\", value: 30 },\n              { label: \"50\", value: 50 },\n            ]}\n            onChange={(e) => setPerPage(e.value)}\n          />\n        </section>\n        <section className=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 23 23\"\n          >\n            <path\n              id=\"Icon_ionic-ios-search\"\n              data-name=\"Icon ionic-ios-search\"\n              d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n              transform=\"translate(-4.5 -4.493)\"\n              fill=\"#707070\"\n              opacity=\"0.74\"\n            />\n          </svg>\n          <input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search for products & services\"\n          />\n          {search && (\n            <button onClick={() => setSearch(\"\")}>\n              <X_svg />\n            </button>\n          )}\n        </section>\n        <section className=\"type\">\n          <label>Type:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"All\", value: \"\" },\n              { label: \"Product\", value: \"product\" },\n              { label: \"Service\", value: \"service\" },\n              { label: \"Other\", value: \"other\" },\n            ]}\n            onChange={(e) => setType(e.value)}\n          />\n        </section>\n        <section className=\"category\">\n          <label>Category:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"All\", value: \"\" },\n              ...categories.map((item) => ({\n                label: item,\n                value: item,\n              })),\n            ]}\n            onChange={(e) => setCategory(e.value)}\n          />\n        </section>\n        <section className={`date`}>\n          <InputDateRange\n            dateRange={dateRange}\n            onChange={(range) => setDateRange(range)}\n          />\n        </section>\n      </div>\n      <table className=\"table products\">\n        <thead>\n          {batch.length > 0 ? (\n            <tr className=\"batchAction\">\n              <th className=\"checkContainer\">\n                <Checkbox\n                  value={selectAll}\n                  defaultValue={selectAll}\n                  onChange={(e) => setSelectAll(e)}\n                />\n              </th>\n              <th>\n                <button\n                  onClick={() =>\n                    Confirm({\n                      label: \"Batch delete\",\n                      question: `You sure you want to delete these ${batch.length} items?`,\n                      callback: deleteMany,\n                    })\n                  }\n                >\n                  Delete\n                </button>\n              </th>\n              {user.fbMarket?.userAgreement &&\n                LS.get(\"facebook_user_accessToken\") && (\n                  <>\n                    <th>\n                      <button\n                        onClick={() => {\n                          addToFbMarket(batch);\n                          setBatch([]);\n                        }}\n                      >\n                        Add to Facebook\n                      </button>\n                    </th>\n                    <th>\n                      <button\n                        onClick={() => {\n                          removeFromFbMarket(batch);\n                          setBatch([]);\n                        }}\n                      >\n                        Remove from Facebook\n                      </button>\n                    </th>\n                  </>\n                )}\n            </tr>\n          ) : (\n            <tr>\n              <th className=\"checkContainer\">\n                <Checkbox\n                  value={selectAll}\n                  defaultValue={selectAll}\n                  onChange={(e) => setSelectAll(e)}\n                />\n              </th>\n              <th className=\"date\">Date</th>\n              <th>Image</th>\n              <th className=\"name\">Name</th>\n              <th>Type</th>\n              <th>Facebook Marketplace</th>\n              <th>Available</th>\n              <th>Price</th>\n              <th>GST</th>\n              <th>Discount</th>\n              <th>Listing Price</th>\n              {\n                // <th>Sold</th>\n              }\n              <th>Actions</th>\n            </tr>\n          )}\n        </thead>\n        <tbody>\n          {products.map((product) => (\n            <SingleProduct\n              categories={categories}\n              key={product._id}\n              product={product}\n              setProducts={setProducts}\n              selectAll={selectAll}\n              setBatch={setBatch}\n              batch={batch}\n              deleteItems={deleteItems}\n              addToFbMarket={addToFbMarket}\n              removeFromFbMarket={removeFromFbMarket}\n            />\n          ))}\n          {products.length === 0 && (\n            <tr className=\"placeholder\">\n              <td>No product yet.</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <Pagination\n        total={total}\n        btns={5}\n        currentPage={page}\n        perPage={perPage}\n        setPage={setPage}\n      />\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n      <Modal\n        head={true}\n        label=\"Edit Product/Service\"\n        setOpen={setProductForm}\n        open={productForm}\n        className=\"productForm\"\n      >\n        <ProductForm\n          categories={categories}\n          onSuccess={(product) => {\n            setProducts((prev) => [...prev, product]);\n            setProductForm(false);\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Succ_svg />\n                  <h4>Product added.</h4>\n                </div>\n              </>\n            );\n          }}\n        />\n      </Modal>\n      <Modal\n        open={addMany}\n        head={true}\n        label=\"Batch product upload\"\n        setOpen={setAddMany}\n        className=\"batchItemPreview\"\n      >\n        <BatchUpload\n          categories={categories}\n          onSuccess={() => {\n            setAddMany(false);\n          }}\n        />\n      </Modal>\n    </>\n  );\n};\nconst SingleProduct = ({\n  product,\n  setProducts,\n  categories,\n  selectAll,\n  setBatch,\n  batch,\n  deleteItems,\n  addToFbMarket,\n  removeFromFbMarket,\n}) => {\n  const { user } = useContext(SiteContext);\n  const [selected, setSelected] = useState(selectAll || false);\n  const [edit, setEdit] = useState(false);\n  const [msg, setMsg] = useState(false);\n  useEffect(() => {\n    setSelected(selectAll);\n  }, [selectAll]);\n  useEffect(() => {\n    if (selected) {\n      setBatch((prev) => [...prev, product._id]);\n    } else {\n      setBatch((prev) => prev.filter((item) => item !== product._id));\n    }\n  }, [selected]);\n  return (\n    <tr className={`product ${selected ? \"selected\" : \"\"}`}>\n      <td className=\"checkContainer\">\n        <Checkbox\n          defaultValue={selected}\n          value={selected}\n          onChange={(e) => {\n            setSelected(e);\n          }}\n        />\n      </td>\n      <td className=\"date\">\n        <Moment format=\"DD-MM-YY\">{product.createdAt}</Moment>\n      </td>\n      <td className=\"thumbs\">\n        <Media links={product.images} />\n      </td>\n      <td className=\"name\">{product.name}</td>\n      <td>{product.type}</td>\n      <td>{product.fbMarketId ? \"Added\" : \"N/A\"}</td>\n      <td>\n        {product.available} {product.available === true && \"Available\"}\n        {product.available === false && \"Unavailable\"}\n      </td>\n      <td>₹{product.price}</td>\n      <td>\n        {user.gst?.verified\n          ? (product.gst || user.gst?.amount || 0) + \"%\"\n          : \"N/A\"}\n      </td>\n      <td>₹{calculateDiscount(product) || 0}</td>\n      <td>₹{calculatePrice({ product, gst: user.gst }) || 0}</td>\n      {\n        // <td>{product.popularity || 0}</td>\n      }\n      <td>\n        {batch.length === 0 && (\n          <Actions icon={<Chev_down_svg />}>\n            <Link to={`/marketplace/${product._id}`} target=\"_blank\">\n              View\n            </Link>\n            {user.fbMarket?.userAgreement &&\n              LS.get(\"facebook_user_accessToken\") && (\n                <>\n                  {product.fbMarketId ? (\n                    <button onClick={() => removeFromFbMarket([product._id])}>\n                      Remove from Facebook\n                    </button>\n                  ) : (\n                    <button onClick={() => addToFbMarket([product._id])}>\n                      Add to Facebook\n                    </button>\n                  )}\n                </>\n              )}\n            {!user.fbMarket?.userAgreement && (\n              <Link to=\"/account/myShop/fbMarketplace\" className=\"edit\">\n                Setup FB Marketplace\n              </Link>\n            )}\n            <Link to=\"#\" className=\"edit\" onClick={() => setEdit(true)}>\n              Edit\n            </Link>\n            <Link\n              to=\"#\"\n              className=\"delete\"\n              onClick={() =>\n                Confirm({\n                  label: \"Removing Product\",\n                  question: \"You sure want to delete this product?\",\n                  callback: () => deleteItems([product._id]),\n                })\n              }\n            >\n              Delete\n            </Link>\n          </Actions>\n        )}\n      </td>\n      <Modal\n        head={true}\n        label=\"Edit Product/Service\"\n        open={edit}\n        setOpen={setEdit}\n        className=\"productForm\"\n      >\n        <ProductForm\n          categories={categories}\n          onSuccess={(product) => {\n            setProducts((prev) =>\n              prev.map((item) => {\n                if (item._id === product._id) {\n                  return product;\n                } else {\n                  return item;\n                }\n              })\n            );\n            setEdit(false);\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Succ_svg />\n                  <h4>Product updated.</h4>\n                </div>\n              </>\n            );\n          }}\n          prefill={product}\n        />\n      </Modal>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </tr>\n  );\n};\n\nconst BatchUpload = ({ onSuccess, categories }) => {\n  const [loading, setLoading] = useState(false);\n  const [step, setStep] = useState(1);\n  const [batchItems, setBatchItems] = useState(null);\n  const [images, setImages] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const [category, setCategory] = useState(\"\");\n  const [csvDraft, setCsvDraft] = useState(null);\n  const addBatchProducts = () => {\n    setLoading(true);\n    fetch(\"/api/updateDraft\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ items: batchItems }),\n    })\n      .then((res) => res.json())\n      .then(({ code, updated }) => {\n        setLoading(false);\n        if (code === \"ok\") {\n          setMsg(\n            <>\n              <button\n                onClick={() => {\n                  setMsg(null);\n                  onSuccess?.();\n                }}\n              >\n                Okay\n              </button>\n              <div>\n                {updated ? <Succ_svg /> : <Err_svg />}\n                <h4>{updated} items has been updated.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not add products. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not add products. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const uploadImages = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const imgLinks = (await UploadFiles({ files: images, setMsg })) || [];\n    if (imgLinks.length !== images.length) {\n      setMsg(\n        <>\n          <button onClick={() => setMsg(null)}>Okay</button>\n          <div>\n            <Err_svg />\n            <h4>Could not upload images. Please try again.</h4>\n          </div>\n        </>\n      );\n      return;\n    }\n    fetch(\"/api/uploadProductImg\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        images: imgLinks,\n        category,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          console.log(data);\n          const headers = Object.entries({\n            Images: \"images\",\n            id: \"_id\",\n            Name: \"name\",\n            Description: \"dscr\",\n            Material: \"material\",\n            \"Size [Please specify mm, cm, inch or KG]\": \"size\",\n            Category: \"category\",\n            Type: \"type\",\n            \"Price in INR.\": \"price\",\n            \"Units Available\": \"available\",\n            \"HSN Code\": \"hsn\",\n            \"GST %\": \"gst\",\n          }).map(([key, value]) => ({\n            label: key,\n            key: value,\n          }));\n          console.log(headers, data.products);\n          setCsvDraft({\n            headers,\n            data: data.products,\n            filename: `Delivery Pay Product Draft.csv`,\n          });\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not add products. Make sure you're online.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not add products. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <div className=\"content\">\n      <Step\n        label=\"Create Draft\"\n        className=\"createDraft\"\n        defaultStatus={step === 1}\n        data={csvDraft}\n      >\n        <>\n          <form onSubmit={uploadImages}>\n            <section className=\"category\">\n              <label>Choose category</label>\n              <Combobox\n                options={categories.map((item) => ({\n                  label: item,\n                  value: item.toLowerCase(),\n                }))}\n                required={true}\n                onChange={(e) => setCategory(e.value)}\n              />\n            </section>\n            <p>\n              Choose images{\" \"}\n              <span>\n                Choose 1 image for each product. you can add multiple images\n                later.\n              </span>\n            </p>\n            <FileInput onChange={(files) => setImages(files)} multiple={true} />\n            <section className=\"btns\">\n              <button\n                className=\"clean\"\n                type=\"button\"\n                onClick={() => setStep(3)}\n              >\n                Already have a draft\n              </button>\n              {csvDraft ? (\n                <CSVLink\n                  {...csvDraft}\n                  className=\"submit\"\n                  type=\"submit\"\n                  onClick={() => {\n                    setCsvDraft(null);\n                    setStep(2);\n                  }}\n                >\n                  Download Draft\n                </CSVLink>\n              ) : (\n                <button className=\"submit\">Create Draft</button>\n              )}\n            </section>\n          </form>\n        </>\n      </Step>\n      <Step label=\"Populate With data\" defaultStatus={step === 2}>\n        <p>\n          Populate the Sheet with real product data. Don't Change the header.\n        </p>\n        <button className=\"submit\" onClick={() => setStep(3)}>\n          Next\n        </button>\n      </Step>\n      <Step label=\"Upload Draft\" defaultStatus={step === 3}>\n        {!!batchItems?.length && (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Images</th>\n                <th className=\"name\">Name</th>\n                <th className=\"dscr\">Description</th>\n                <th>Available</th>\n                <th>Price</th>\n                <th>GST</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {batchItems?.map((item, i) => (\n                <tr key={i}>\n                  <td>{item.type}</td>\n                  <td className=\"thumbs\">\n                    <Media links={item.images} />\n                  </td>\n                  <td className=\"name\">{item.name}</td>\n                  <td className=\"dscr\">{item.dscr}</td>\n                  <td>\n                    {item.available}\n                    {item.available === true && \"Available\"}\n                    {item.available === false && \"Unavailable\"}\n                  </td>\n                  <td>{item.price}</td>\n                  <td>{item.gst}</td>\n                  <td>\n                    <button\n                      className=\"remove\"\n                      onClick={() =>\n                        setBatchItems((prev) => {\n                          const newItems = [...prev];\n                          newItems.splice(i, 1);\n                          return newItems;\n                        })\n                      }\n                    >\n                      <X_svg />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n        {!batchItems?.length && (\n          <div className=\"uploadFile\">\n            <p>\n              Upload xlsx/csv file in. See the example file{\" \"}\n              <a\n                href=\"/batch_product_upload_xlsx_file_example.csv\"\n                target=\"_blank\"\n              >\n                here\n              </a>\n              .\n            </p>\n            <input\n              type=\"file\"\n              accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n              onChange={(e) => {\n                if (e.target.files[0]) {\n                  parseXLSXtoJSON(e.target.files[0], (result) => {\n                    if (result?.length) {\n                      setBatchItems(\n                        result\n                          .filter(\n                            (item) =>\n                              item.type &&\n                              item.category &&\n                              item.name &&\n                              item.dscr &&\n                              item.price !== undefined\n                          )\n                          .map((item) => ({\n                            ...item,\n                            status: \"\",\n                            images: item.images\n                              .split(/,( |\\n)/)\n                              .filter((item) => item.trim()),\n                          }))\n                      );\n                    }\n                  });\n                }\n                e.target.value = null;\n              }}\n            />\n          </div>\n        )}\n        {!!batchItems?.length && (\n          <button\n            className=\"submit\"\n            onClick={() =>\n              Confirm({\n                label: \"Adding Batch products\",\n                question: \"You sure want to add all these items?\",\n                callback: addBatchProducts,\n              })\n            }\n          >\n            Add\n          </button>\n        )}\n      </Step>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst defaultTerms = [\n  \"Buyer will be responsible for paying for shipping costs & for returning the item.\",\n  \"Shipping costs are nonrefundable.\",\n  \"Orders must be returned with Original Packaging & Securely.\",\n  \"Orders must be Returned Via Trackable / Traceable Courier Services Only.\",\n  \"Proof of Return via Photo of Tracking Number & Dispatch Ticket is Required.\",\n  \"Refund is Only Issued Upon Delivery of Return Package.\",\n];\nconst Settings = ({ categories, setCategories }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [gstEdit, setGstEdit] = useState(false);\n  const [shippingEdit, setShippingEdit] = useState(false);\n  const [termsEdit, setTermsEdit] = useState();\n  const [editPayment, setEditPayment] = useState(false);\n  const [msg, setMsg] = useState(null);\n  return (\n    <div className=\"settings\">\n      <div className=\"caution\">\n        {!categories?.length && <p className=\"err\">Add at least 1 category.</p>}\n        {!user.shopInfo?.terms?.length && (\n          <p className=\"err\">Add Return policy terms</p>\n        )}\n        {(user.shopInfo?.shippingCost === undefined ||\n          user.shopInfo?.shippingCost === null ||\n          user.shopInfo?.deliveryWithin === undefined ||\n          user.shopInfo?.deliveryWithin === null ||\n          user.shopInfo?.refundable === undefined) && (\n          <p className=\"err\">Add Shipping & Delivery detail</p>\n        )}\n        {Object.values(user.shopInfo?.paymentMethod || {}).length < 6 && (\n          <p className=\"err\">Add valid payment method</p>\n        )}\n      </div>\n      <div className=\"cat\">\n        <h2 className=\"head\">Categories</h2>\n        <ul className=\"categories\">\n          {categories.map((item, i) => (\n            <li key={i}>\n              {item}{\" \"}\n              <button\n                onClick={() =>\n                  Confirm({\n                    label: \"Remove Category\",\n                    question: \"You sure want to remove this category?\",\n                    callback: () => {\n                      fetch(\"/api/categories\", {\n                        method: \"DELETE\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({\n                          category: item,\n                        }),\n                      })\n                        .then((res) => res.json())\n                        .then((data) => {\n                          if (data.code === \"ok\") {\n                            setCategories((prev) =>\n                              prev.filter((cat) => cat !== item)\n                            );\n                          } else {\n                            setMsg(\n                              <>\n                                <button onClick={() => setMsg(null)}>\n                                  Okay\n                                </button>\n                                <div>\n                                  <Err_svg />\n                                  <h4>Could not delete category. Try again.</h4>\n                                </div>\n                              </>\n                            );\n                          }\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                          setMsg(\n                            <>\n                              <button onClick={() => setMsg(null)}>Okay</button>\n                              <div>\n                                <Err_svg />\n                                <h4>\n                                  Could not delete category. Make sure you're\n                                  online.\n                                </h4>\n                              </div>\n                            </>\n                          );\n                        });\n                    },\n                  })\n                }\n              >\n                <X_svg />\n              </button>\n            </li>\n          ))}\n          {categories.length === 0 && (\n            <li className=\"placeholder\">No category found.</li>\n          )}\n        </ul>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const input = e.target.querySelector(\"input\");\n            fetch(\"/api/addCategory\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                category: input.value,\n              }),\n            })\n              .then((res) => res.json())\n              .then((data) => {\n                if (data.code === \"ok\") {\n                  setCategories(data.categories);\n                  input.value = \"\";\n                } else {\n                  setMsg(\n                    <>\n                      <button onClick={() => setMsg(null)}>Okay</button>\n                      <div>\n                        <Err_svg />\n                        <h4>Could not add category. Try again.</h4>\n                      </div>\n                    </>\n                  );\n                }\n              })\n              .catch((err) => {\n                console.log(err);\n                setMsg(\n                  <>\n                    <button onClick={() => setMsg(null)}>Okay</button>\n                    <div>\n                      <Err_svg />\n                      <h4>Could not add category. Make sure you're online.</h4>\n                    </div>\n                  </>\n                );\n              });\n          }}\n        >\n          <input\n            type=\"text\"\n            required={true}\n            placeholder=\"New Category. ie Mobile\"\n          />\n          <button>Add category</button>\n        </form>\n      </div>\n      <div className=\"gst\">\n        <h2 className=\"head\">\n          GST{\" \"}\n          {!gstEdit && <button onClick={() => setGstEdit(true)}>Edit</button>}\n        </h2>\n        <p className=\"status\">\n          Status:{\" \"}\n          <strong>{user.gst?.verified ? \"Verified\" : \"Unverified\"}</strong>\n        </p>\n        {gstEdit ? (\n          <GstEditForm setOpen={setGstEdit} setMsg={setMsg} />\n        ) : (\n          <>\n            <p>GST Registration number: {user.gst?.detail?.reg || \"N/A\"}</p>\n            <p>\n              GST amount: {user.gst?.amount ? user.gst.amount + \"%\" : \"N/A\"}\n            </p>\n            <p>\n              Files for verification:{\" \"}\n              {!user.gst?.detail?.files?.length && \"N/A\"}\n            </p>\n            {user.gst?.detail?.files?.length && (\n              <ul className=\"thumbs\">\n                <Media links={user.gst?.detail?.files} />\n              </ul>\n            )}\n          </>\n        )}\n        {!user.gst?.verified && (\n          <p className=\"note\">\n            *GST will apply once we review and verify your GST registraion.\n          </p>\n        )}\n      </div>\n      <div className=\"payment\">\n        <h2 className=\"head\">\n          Payment Method{\" \"}\n          {!editPayment && (\n            <button onClick={() => setEditPayment(true)}>Edit</button>\n          )}\n        </h2>\n        {editPayment ? (\n          <PaymentMethodForm\n            prefill={user.shopInfo?.paymentMethod}\n            setOpen={setEditPayment}\n            setMsg={setMsg}\n          />\n        ) : (\n          <>\n            <p>Name: {user.shopInfo?.paymentMethod?.name || \"--\"}</p>\n            <p>Bank: {user.shopInfo?.paymentMethod?.bank || \"--\"}</p>\n            <p>City: {user.shopInfo?.paymentMethod?.city || \"--\"}</p>\n            <p>\n              Account type: {user.shopInfo?.paymentMethod?.accountType || \"--\"}\n            </p>\n            <p>\n              Account Number:{\" \"}\n              {user.shopInfo?.paymentMethod?.accountNumber || \"--\"}\n            </p>\n            <p>ifsc: {user.shopInfo?.paymentMethod?.ifsc || \"--\"}</p>\n          </>\n        )}\n      </div>\n      <div className=\"terms shipping\">\n        <h2 className=\"head\">\n          Shipping & Delivery{\" \"}\n          {!shippingEdit && (\n            <button onClick={() => setShippingEdit(true)}>Edit</button>\n          )}\n        </h2>\n        {shippingEdit ? (\n          <ShippingEditForm setOpen={setShippingEdit} setMsg={setMsg} />\n        ) : (\n          <>\n            <p>\n              Shipping cost:{\" \"}\n              {user.shopInfo?.shippingCost\n                ? \"₹\" + user.shopInfo?.shippingCost\n                : \"N/A\"}\n            </p>\n            <p>\n              Delivery within (days): {user.shopInfo?.deliveryWithin || \"N/A\"}\n            </p>\n            <p>Refundable: {user.shopInfo?.refundable?.toString() || \"N/A\"}</p>\n          </>\n        )}\n      </div>\n      {\n        //   <div className=\"terms payment\">\n        //   <h2 className=\"head\">Deposit & Payment Terms</h2>\n        //   <p>\n        //     Refundable [ I will accept Returns ] / Non Refundable [ I will not\n        //     accept returns , My payment should be released as soon as my Order is\n        //     Delivered ] as Options before Requesting for a Payment.\n        //   </p>\n        // </div>\n      }\n      <div className=\"terms return\">\n        <h2 className=\"head\">\n          Return Policy Terms{\" \"}\n          {!termsEdit && (\n            <button onClick={() => setTermsEdit(true)}>Edit</button>\n          )}\n        </h2>\n        <TermsEditForm\n          setOpen={setTermsEdit}\n          termsEdit={termsEdit}\n          setMsg={setMsg}\n        />\n      </div>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst GstEditForm = ({ setOpen, setMsg }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [gstFiles, setGstFiles] = useState([]);\n  const [gstReg, setGstReg] = useState(user.gst?.detail?.reg);\n  const [amount, setAmount] = useState(user.gst?.amount);\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = (await UploadFiles({ files: gstFiles, setMsg })) || [];\n    updateProfileInfo({\n      \"gst.detail.files\": fileLinks,\n      \"gst.detail.reg\": gstReg,\n      \"gst.amount\": amount,\n    })\n      .then(({ user: newUser }) => {\n        setLoading(false);\n        if (newUser) {\n          setUser((prev) => ({ ...prev, gst: newUser.gst }));\n          setOpen(false);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not upadte GST Information. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <form onSubmit={submit}>\n      <section>\n        <label>GST Registration Nubmer</label>\n        <input\n          required={true}\n          type=\"text\"\n          defaultValue={user.gst?.detail.reg}\n          name=\"gst.detail.reg\"\n          onChange={(e) => setGstReg(e.target.value)}\n        />\n      </section>\n      <section>\n        <label>GST percentage (%)</label>\n        <NumberInput\n          required={true}\n          defaultValue={user.gst?.amount}\n          name=\"gst.detail.reg\"\n          onChange={(e) => setAmount(e.target.value)}\n        />\n      </section>\n      <section>\n        <label>Upload files for verification</label>\n        <FileInput\n          multiple={true}\n          prefill={user.gst?.detail?.files}\n          name=\"gst.detail.files\"\n          onChange={(files) => setGstFiles(files)}\n        />\n      </section>\n      <section className=\"btns\">\n        <button>Save Changes</button>\n        <button type=\"button\" onClick={() => setOpen(false)}>\n          Cancel\n        </button>\n      </section>\n    </form>\n  );\n};\nconst ShippingEditForm = ({ setOpen, setMsg }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [shippingCost, setShippingCost] = useState(\n    user.shopInfo?.shippingCost || 0\n  );\n  const [deliveryWithin, setDeliveryWithin] = useState(\n    user.shopInfo?.deliveryWithin\n  );\n  const [refundable, setRefundable] = useState(\n    user.shopInfo?.refundable || null\n  );\n  const submit = (e) => {\n    e.preventDefault();\n    updateProfileInfo({\n      \"shopInfo.shippingCost\": shippingCost,\n      \"shopInfo.deliveryWithin\": deliveryWithin,\n      \"shopInfo.refundable\": refundable,\n    })\n      .then(({ user: newUser }) => {\n        if (newUser) {\n          setUser((prev) => ({ ...prev, shopInfo: newUser.shopInfo }));\n          setOpen(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not upadte Terms. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <form onSubmit={submit}>\n      <section>\n        <label>Shipping Cost ₹</label>\n        <NumberInput\n          required={true}\n          defaultValue={shippingCost}\n          name=\"shippingCost\"\n          onChange={(e) => setShippingCost(e.target.value)}\n        />\n      </section>\n      <section>\n        <label>Delivery Within (days)</label>\n        <NumberInput\n          required={true}\n          defaultValue={deliveryWithin}\n          name=\"deliveryWithin\"\n          min={1}\n          step=\"0\"\n          placeholder=\"ie. 4 Days\"\n          onChange={(e) => setDeliveryWithin(e.target.value)}\n        />\n      </section>\n      <section>\n        <label>Refundable</label>\n        <Combobox\n          required={true}\n          defaultValue={0}\n          onChange={(e) => setRefundable(e.value)}\n          options={[\n            { label: \"No\", value: null },\n            {\n              label: \"Upto 24 Hours After Delivery\",\n              value: \"Upto 24 Hours After Delivery\",\n            },\n            {\n              label: \"Upto 7 Days After Delivery\",\n              value: \"Upto 7 Days After Delivery\",\n            },\n            {\n              label: \"Upto 15 Days After Delivery\",\n              value: \"Upto 15 Days After Delivery\",\n            },\n          ]}\n        />\n      </section>\n      <section className=\"btns\">\n        <button>Save Changes</button>\n        <button type=\"button\" onClick={() => setOpen(false)}>\n          Cancel\n        </button>\n      </section>\n    </form>\n  );\n};\nconst TermsEditForm = ({ setOpen, termsEdit, setMsg }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [terms, setTerms] = useState(user.shopInfo?.terms || []);\n  const [addTerm, setAddTerm] = useState(\"\");\n  const submit = (e) => {\n    e.preventDefault();\n    updateProfileInfo({\n      \"shopInfo.terms\": terms,\n    })\n      .then(({ user: newUser }) => {\n        if (newUser) {\n          setUser((prev) => ({ ...prev, shopInfo: newUser.shopInfo }));\n          setOpen(false);\n          setTerms(newUser.shopInfo?.terms);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not upadte Terms. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    if (termsEdit) {\n      if (terms.length === 0) {\n        setTerms(defaultTerms);\n      }\n    } else {\n      setTerms(user.shopInfo?.terms || []);\n    }\n  }, [termsEdit]);\n  return (\n    <form onSubmit={submit}>\n      <ul>\n        {terms.map((item, i) => (\n          <li key={i}>\n            {item}{\" \"}\n            {termsEdit && (\n              <button\n                type=\"button\"\n                onClick={() =>\n                  setTerms((prev) => prev.filter((term) => term !== item))\n                }\n              >\n                <X_svg />\n              </button>\n            )}\n          </li>\n        ))}\n        {terms.length === 0 && <li>No terms has been added.</li>}\n      </ul>\n      {termsEdit && (\n        <>\n          <section className=\"addTerm\">\n            <TextareaAutosize\n              value={addTerm}\n              placeholder=\"Add auditional term\"\n              onChange={(e) => setAddTerm(e.target.value)}\n            />\n            <button\n              type=\"button\"\n              onClick={() => {\n                setTerms((prev) =>\n                  addTerm\n                    ? [...prev.filter((term) => term !== addTerm), addTerm]\n                    : prev\n                );\n                setAddTerm(\"\");\n              }}\n            >\n              Add Term\n            </button>\n          </section>\n          <section className=\"btns\">\n            <button>Save Changes</button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setOpen(false);\n                setTerms(\n                  user.shopInfo?.terms?.length\n                    ? user.shopInfo.terms\n                    : defaultTerms\n                );\n              }}\n            >\n              Cancel\n            </button>\n          </section>\n        </>\n      )}\n    </form>\n  );\n};\nconst PaymentMethodForm = ({ prefill, onSuccess, setMsg, setOpen }) => {\n  const { setUser } = useContext(SiteContext);\n  const [bank, setBank] = useState(prefill?.bank || \"\");\n  const [name, setName] = useState(prefill?.name || \"\");\n  const [ifsc, setIfsc] = useState(prefill?.ifsc || \"\");\n  const [city, setCity] = useState(prefill?.city || \"\");\n  const [type, setType] = useState(prefill?.accountType || \"\");\n  const [accountNumber, setAccountNumber] = useState(\n    prefill?.accountNumber || \"\"\n  );\n  const submit = (e) => {\n    e.preventDefault();\n    updateProfileInfo({\n      \"shopInfo.paymentMethod\": {\n        name,\n        bank,\n        city,\n        accountType: type,\n        ifsc,\n        accountNumber,\n      },\n    })\n      .then(({ user: newUser }) => {\n        if (newUser) {\n          setUser((prev) => ({\n            ...prev,\n            shopInfo: newUser.shopInfo,\n          }));\n          setOpen(false);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not update payment method. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>\n                Could not updated payment method. Make sure you're online.\n              </h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <form className=\"paymentMethodForm netBanking\" onSubmit={submit}>\n      <section className=\"inputs\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Full name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"bank\"\n          placeholder=\"Bank\"\n          value={bank}\n          onChange={(e) => setBank(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"city\"\n          placeholder=\"City\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"type\"\n          placeholder=\"Account type ie. Savings / Current\"\n          value={type}\n          onChange={(e) => setType(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"accountNumber\"\n          placeholder=\"Account Number\"\n          value={accountNumber}\n          onChange={(e) => setAccountNumber(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"ifsc\"\n          placeholder=\"IFSC\"\n          value={ifsc}\n          onChange={(e) => setIfsc(e.target.value)}\n          required={true}\n        />\n      </section>\n      <section className=\"btns\">\n        <button type=\"submit\">Save Changes</button>\n        <button type=\"button\" onClick={() => setOpen(false)}>\n          Cancel\n        </button>\n      </section>\n    </form>\n  );\n};\n\nexport default MyShop;\n"],"sourceRoot":""}