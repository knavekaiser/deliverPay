{"version":3,"sources":["components/Deals.js"],"names":["MilestoneForm","lazy","then","mod","default","require","updateChatLastSeen","rooms","fetch","method","headers","body","JSON","stringify","UserSearch","setUserCard","setContacts","history","useHistory","useState","msg","setMsg","users","setUsers","value","setValue","showUsers","setShowUsers","formRef","useRef","inviteUser","useCallback","RegExp","test","toLowerCase","URLSearchParams","q","replace","origin","window","location","toString","res","json","data","code","onClick","catch","err","console","log","documentClickHandler","e","path","includes","current","useEffect","document","addEventListener","removeEventListener","encodeURIComponent","className","onSubmit","preventDefault","ref","xmlns","width","height","viewBox","id","d","transform","fill","label","required","placeholder","onFocus","onChange","target","length","to","map","user","i","prev","client","messages","status","push","_id","src","profileImg","firstName","lastName","phone","open","Person","userCard","lastSeen","unread","useContext","ChatContext","undefined","chat","Date","toISOString","text","Chat","setChat","SiteContext","setUser","userType","chatWrapper","setRooms","loading","msgLoading","setMsgLoading","allMessages","setAllMessages","page","setPage","format","LS","set","Confirm","question","callback","blocked","blockList","item","onScroll","getBoundingClientRect","y","contact","total","Bubble","reverse","ChatForm","onSuccess","scrollBy","scrollHeight","newChat","head","pathname","match","setOpen","action","milestone","amount","component","ReportForm","setMilestone","milestoneId","milestones","timestamp","Math","abs","createdAt","getTime","dateStamp","moment","time","from","media","MediaBubble","link","view","fullView","controls","autoPlay","href","inputRef","files","setFiles","submit","a","socket","connected","process","UploadFiles","forEach","emit","message","focus","on","connect","Preview","autoFocus","type","style","onKeyDown","keyCode","altKey","multiple","filter","some","file","name","disabled","setLoading","setMessage","url","URL","createObjectURL","img","startsWith","Deals","contacts","user_id","client_id","params","person","find"],"mappings":"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","file":"static/js/2.33a179b2.chunk.js","sourcesContent":["import {\n  useState,\n  useEffect,\n  useContext,\n  useRef,\n  useCallback,\n  lazy,\n} from \"react\";\nimport { Link, useHistory, Route } from \"react-router-dom\";\nimport { SiteContext, socket, ChatContext } from \"../SiteContext\";\nimport { Modal, Confirm } from \"./Modal\";\nimport {\n  Succ_svg,\n  Err_svg,\n  X_svg,\n  UploadFiles,\n  Actions,\n  Img,\n  Moment,\n  moment,\n  LS,\n} from \"./Elements\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nconst MilestoneForm = lazy(() =>\n  import(\"./Forms\").then((mod) => ({ default: mod.MilestoneForm }))\n);\n\nrequire(\"./styles/deals.scss\");\n\nconst updateChatLastSeen = (rooms) => {\n  fetch(\"/api/updateLastSeen\", {\n    method: \"PATCH\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ rooms }),\n  });\n};\n\nconst Deals = ({ history, location, match }) => {\n  const { user } = useContext(SiteContext);\n  const { contacts, setContacts } = useContext(ChatContext);\n  const user_id = useRef();\n  const [userCard, setUserCard] = useState(null);\n  const [chat, setChat] = useState(null);\n  useEffect(() => {\n    if (userCard && userCard._id !== user_id.current) {\n      socket.emit(\"initiateChat\", {\n        client_id: userCard._id,\n        ...(userCard.messages === undefined && { newChat: true }),\n      });\n      user_id.current = userCard._id;\n    }\n    if (userCard) {\n      setChat(userCard.messages);\n    }\n  }, [userCard]);\n  useEffect(() => {\n    if (match.params._id) {\n      const person = contacts.find(\n        (chat) => chat.client._id.toString() === match.params._id\n      );\n      if (person) {\n        const { client, messages, status, lastSeen } = person;\n        setUserCard({ ...client, status, messages });\n      }\n    }\n  }, [match.params, contacts]);\n  return (\n    <div className={`chatContainer ${userCard ? \"chatOpen\" : \"\"}`}>\n      <div className=\"contactsContainer\">\n        <UserSearch setUserCard={setUserCard} setContacts={setContacts} />\n        {\n          //   <div className=\"userCard\">\n          //   {userCard ? (\n          //     <>\n          //       <div className=\"profile\">\n          //         <Img src={userCard.profileImg || \"/profile-user.jpg\"} />\n          //         <div className=\"details\">\n          //           <p className=\"name\">\n          //             {userCard.firstName\n          //               ? userCard.firstName + \" \" + userCard.lastName\n          //               : \"Deleted user\"}\n          //           </p>\n          //           <a className=\"phone\">{userCard.phone}</a>\n          //           <a href={`mailto:${userCard.email}`} className=\"email\">\n          //             {userCard.email}\n          //           </a>\n          //           <p className=\"add\">\n          //             {`${userCard.address?.city || \"\"} ${\n          //               userCard.address?.country || \"\"\n          //             }`}\n          //           </p>\n          //         </div>\n          //       </div>\n          //       <div className=\"clas\">\n          //         <p className=\"status\">{userCard.status}</p>\n          //         <button>Chat</button>\n          //       </div>\n          //     </>\n          //   ) : (\n          //     <p className=\"userCard placeholder\">Select a user</p>\n          //   )}\n          // </div>\n        }\n        <p className=\"label\">Messages</p>\n        <div className=\"peopleWrapper\">\n          <ul className=\"people\">\n            {contacts.map(({ client, messages, status, lastSeen, unread }) => (\n              <Person\n                key={client._id}\n                client={client}\n                messages={messages}\n                status={status}\n                lastSeen={lastSeen}\n                userCard={userCard}\n                unread={unread}\n              />\n            ))}\n            {contacts.length === 0 && (\n              <p className=\"placeholder\">Start making payments now.</p>\n            )}\n          </ul>\n        </div>\n      </div>\n      <Chat\n        chat={chat}\n        setContacts={setContacts}\n        userCard={userCard}\n        setUserCard={setUserCard}\n        user={user}\n        setChat={setChat}\n      />\n    </div>\n  );\n};\n\nconst UserSearch = ({ setUserCard, setContacts }) => {\n  const history = useHistory();\n  const [msg, setMsg] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [showUsers, setShowUsers] = useState(false);\n  const formRef = useRef();\n  const inviteUser = useCallback(() => {\n    const phoneReg = new RegExp(\n      /^(\\+91|91|1|)(?=\\d{10}$)/gi\n      // /((\\+*)((0[ -]+)*|(91 )*)(\\d{12}|\\d{10}))|\\d{5}([- ]*)\\d{6}/\n    );\n    if (phoneReg.test(value.toLowerCase())) {\n      fetch(\n        `/api/inviteUser?${new URLSearchParams({\n          q: \"+91\" + value.replace(/^(\\+91|91|1|)(?=\\d{10}$)/g, \"\"),\n          origin: window.location.origin,\n        }).toString()}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.code === \"ok\") {\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Succ_svg />\n                  {\n                    // <h4>Invitation sent.</h4>\n                  }\n                  <h4>\n                    An invitaion has been sent to{\" \"}\n                    {\"+91\" + value.replace(/^(\\+91|91|1|)(?=\\d{10}$)/g, \"\")}.\n                  </h4>\n                </div>\n              </>\n            );\n          } else {\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Err_svg />\n                  <h4>Invitation could not be sent. Please try again.</h4>\n                </div>\n              </>\n            );\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Invitation could not be sent. Make sure you're online.</h4>\n              </div>\n            </>\n          );\n        });\n    } else {\n      setMsg(\n        <>\n          <button onClick={() => setMsg(null)}>Okay</button>\n          <div>\n            <Err_svg />\n            <h4>Enter a valid phone number to send invitation.</h4>\n          </div>\n        </>\n      );\n    }\n  }, [value]);\n  const fetchUsers = () => {\n    fetch(`/api/getUsers?q=${encodeURIComponent(value)}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data) {\n          setUsers(data);\n        }\n      });\n    if (value === \"\") {\n      setUsers([]);\n    }\n  };\n  const documentClickHandler = (e) => {\n    if (e.path.includes(formRef.current)) {\n    } else {\n      setShowUsers(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"click\", documentClickHandler);\n    return () => {\n      document.removeEventListener(\"click\", documentClickHandler);\n    };\n  }, []);\n  useEffect(() => {\n    if (value) {\n      fetchUsers();\n    } else {\n      setUsers([]);\n    }\n  }, [value]);\n  return (\n    <div className=\"search\">\n      <form onSubmit={(e) => e.preventDefault()} ref={formRef}>\n        <section>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"17.9\"\n            height=\"17.9\"\n            viewBox=\"0 0 17.9 17.9\"\n          >\n            <path\n              id=\"Path_208\"\n              data-name=\"Path 208\"\n              d=\"M17.9,16.324l-3.715-3.715a7.708,7.708,0,0,0,1.576-4.728A7.832,7.832,0,0,0,7.881,0,7.832,7.832,0,0,0,0,7.881a7.832,7.832,0,0,0,7.881,7.881,7.708,7.708,0,0,0,4.728-1.576L16.324,17.9ZM2.252,7.881A5.574,5.574,0,0,1,7.881,2.252a5.574,5.574,0,0,1,5.629,5.629,5.574,5.574,0,0,1-5.629,5.629A5.574,5.574,0,0,1,2.252,7.881Z\"\n              transform=\"translate(0)\"\n              fill=\"#b9b9b9\"\n            />\n          </svg>\n          <input\n            label=\"search\"\n            required={true}\n            placeholder=\"Phone Number\"\n            onFocus={() => setShowUsers(true)}\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <Link\n            className={`sendReq ${\n              users.length > 0 || !value ? \"disabled\" : \"\"\n            }`}\n            onClick={inviteUser}\n            to=\"#\"\n          >\n            Invite\n          </Link>\n        </section>\n        {showUsers && users.length ? (\n          <ul className=\"searchResult\">\n            {users.map((user, i) => (\n              <a\n                key={i}\n                onClick={() => {\n                  setUserCard(user);\n                  setContacts((prev) => [\n                    ...prev,\n                    { client: user, messages: [], status: \"\" },\n                  ]);\n                  history.push(`/account/deals/${user._id}`);\n                  setShowUsers(false);\n                }}\n              >\n                <li key={i}>\n                  <div className=\"profile\">\n                    <Img src={user.profileImg} />\n                    <p className=\"name\">\n                      {user.firstName + \" \" + user.lastName}\n                      <span className=\"phone\">{user.phone}</span>\n                    </p>\n                  </div>\n                </li>\n              </a>\n            ))}\n          </ul>\n        ) : null}\n      </form>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst Person = ({ client, messages, lastSeen, userCard, unread }) => {\n  const { setContacts } = useContext(ChatContext);\n  const history = useHistory();\n  return (\n    <li\n      className={client._id === userCard?._id ? \"active\" : undefined}\n      onClick={() => {\n        history.push(`/account/deals/${client._id}`);\n        setContacts((prev) =>\n          prev.map((chat) => {\n            if (client?._id === chat.client?._id) {\n              return {\n                ...chat,\n                lastSeen: new Date().toISOString(),\n                unread: null,\n              };\n            }\n            return chat;\n          })\n        );\n      }}\n    >\n      {\n        <>\n          <Img src={client.profileImg || \"/profile-user.jpg\"} />\n          <div>\n            <p className=\"name\">\n              {client.firstName\n                ? client.firstName + \" \" + client.lastName\n                : \"Deleted User\"}\n            </p>\n            {messages.length > 0 && (\n              <p className=\"lastMessage\">\n                {messages[messages.length - 1].text}\n              </p>\n            )}\n            {unread ? <p className=\"unread\">{unread}</p> : null}\n          </div>\n        </>\n      }\n    </li>\n  );\n};\n\nexport const Chat = ({\n  chat,\n  setChat,\n  userCard,\n  setUserCard,\n  user,\n  setContacts,\n}) => {\n  const { setUser, userType } = useContext(SiteContext);\n  const { rooms, setRooms } = useContext(ChatContext);\n  const chatWrapper = useRef(null);\n  const loading = useRef(null);\n  const history = useHistory();\n  const [msgLoading, setMsgLoading] = useState(false);\n  const [allMessages, setAllMessages] = useState(\n    chat?.length >= 50 ? false : true\n  );\n  const [page, setPage] = useState(2);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    if (rooms.length) {\n      updateChatLastSeen(rooms);\n    }\n    return () => {\n      if (rooms.length) {\n        updateChatLastSeen(rooms);\n      }\n    };\n  }, [rooms]);\n  const loadChat = () => {\n    fetch(`/api/getMessages?client=${userCard._id}&page=${page}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setMsgLoading(false);\n        if (data.code === \"ok\") {\n          setContacts((prev) =>\n            prev.map((chat) => {\n              if (chat._id === data.contact?._id) {\n                return {\n                  ...chat,\n                  messages: data.contact.messages,\n                };\n              }\n              return chat;\n            })\n          );\n          setPage((prev) => prev + 1);\n          if (data.contact.total === data.contact.messages.length) {\n            setAllMessages(true);\n          }\n        }\n      })\n      .catch((err) => {\n        setMsgLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get messages. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    if (chat?.length >= 50) {\n      setAllMessages(false);\n    } else {\n      setAllMessages(true);\n    }\n  }, [chat]);\n  return (\n    <div className=\"chat\">\n      {chat ? (\n        <>\n          <div className=\"chatHead\">\n            <div className=\"profile\">\n              <button\n                className=\"back\"\n                onClick={() => {\n                  history.push(\"/account/deals\");\n                  setChat(null);\n                  setUserCard(null);\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path\n                    id=\"Path_10\"\n                    data-name=\"Path 10\"\n                    d=\"M8,0,6.545,1.455l5.506,5.506H0V9.039H12.052L6.545,14.545,8,16l8-8Z\"\n                    transform=\"translate(16 16) rotate(180)\"\n                    fill=\"#2699fb\"\n                  />\n                </svg>\n              </button>\n              <Img src={userCard.profileImg || \"/profile-user.jpg\"} />\n              <p className=\"name\">\n                {userCard.firstName\n                  ? userCard.firstName + \" \" + userCard.lastName\n                  : \"Deleted user\"}\n                {userCard.lastSeen && (\n                  <span className=\"lastSeen\">\n                    <Moment format=\"hh:mma, MMM DD\">{userCard.lastSeen}</Moment>\n                  </span>\n                )}\n              </p>\n            </div>\n            {(userCard.status === \"\" || userCard.status === \"blocked\") && (\n              <>\n                {userType === \"seller\" ? (\n                  <Link\n                    className=\"pay\"\n                    target=\"_blank\"\n                    to={`/marketplace?seller=${user._id}`}\n                    onClick={() => LS.set(userCard._id)}\n                  >\n                    Create an Order\n                  </Link>\n                ) : (\n                  <>\n                    <Link\n                      className=\"pay\"\n                      to={`/account/deals/${userCard._id}/payment`}\n                    >\n                      Pay\n                    </Link>\n                    <Link\n                      className=\"viewShop\"\n                      to={`/marketplace?seller=${userCard._id}`}\n                    >\n                      View Shop\n                    </Link>\n                  </>\n                )}\n                <Actions>\n                  {\n                    userCard.status === \"\" && null\n                    // <Link\n                    //   className=\"pay\"\n                    //   to={`/account/deals/${userCard._id}/pay`}\n                    // >\n                    //   Pay\n                    // </Link>\n                  }\n                  <Link to={`/account/deals/${userCard._id}/report`}>\n                    Report\n                  </Link>\n                  <button\n                    onClick={() => {\n                      Confirm({\n                        label: ` ${\n                          userCard.status === \"blocked\" ? \"Unblock\" : \"Block\"\n                        } User`,\n                        question: `You sure want to ${\n                          userCard.status === \"blocked\" ? \"un\" : \"\"\n                        }block this user?`,\n                        callback: () => {\n                          const blocked = userCard.status === \"blocked\";\n                          fetch(\n                            `/api/${blocked ? \"unblockUser\" : \"blockUser\"}`,\n                            {\n                              method: \"PATCH\",\n                              headers: { \"Content-Type\": \"application/json\" },\n                              body: JSON.stringify({\n                                _id: userCard._id,\n                              }),\n                            }\n                          )\n                            .then((res) => res.json())\n                            .then((data) => {\n                              if (data.code === \"ok\") {\n                                setUser((prev) => ({\n                                  ...prev,\n                                  blockList: data.blockList,\n                                }));\n                                setContacts((prev) =>\n                                  prev.map((item) => {\n                                    if (item.client._id === userCard._id) {\n                                      return {\n                                        ...item,\n                                        status: blocked ? \"\" : \"blocked\",\n                                      };\n                                    } else {\n                                      return item;\n                                    }\n                                  })\n                                );\n                                setMsg(\n                                  <>\n                                    <button onClick={() => setMsg(null)}>\n                                      Okay\n                                    </button>\n                                    <div>\n                                      <Succ_svg />\n                                      <h4>\n                                        User successfully {blocked && \"un\"}\n                                        blocked.\n                                      </h4>\n                                    </div>\n                                  </>\n                                );\n                              } else {\n                                setMsg(\n                                  <>\n                                    <button onClick={() => setMsg(null)}>\n                                      Okay\n                                    </button>\n                                    <div>\n                                      <Err_svg />\n                                      <h4>\n                                        Could not {blocked && \"un\"}block user.\n                                        try again.\n                                      </h4>\n                                    </div>\n                                  </>\n                                );\n                              }\n                            })\n                            .catch((err) => {\n                              console.log(err);\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Err_svg />\n                                    <h4>\n                                      Could not {blocked && \"un\"}block user.\n                                      Make sure you're online.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            });\n                        },\n                      });\n                    }}\n                  >\n                    {userCard.status === \"blocked\" ? \"Unblock\" : \"Block\"}\n                  </button>\n                </Actions>\n              </>\n            )}\n          </div>\n          <ul\n            className=\"chats\"\n            ref={chatWrapper}\n            onScroll={(e) => {\n              const { y } = loading.current?.getBoundingClientRect() || {};\n              if (y > 0 && !msgLoading) {\n                setMsgLoading(true);\n                loadChat();\n              }\n            }}\n          >\n            {[\n              ...chat.map((msg, i) => (\n                <Bubble chat={chat} key={msg._id} msg={msg} i={i} user={user} />\n              )),\n            ].reverse()}\n            {!allMessages && (\n              <li className=\"loading\" ref={loading}>\n                Loading\n              </li>\n            )}\n          </ul>\n          {userCard.status === \"\" && (\n            <ChatForm\n              onSuccess={() => {\n                chatWrapper.current?.scrollBy(\n                  0,\n                  chatWrapper.current.scrollHeight * 2\n                );\n              }}\n              rooms={rooms}\n              user={userCard._id}\n              newChat={!userCard.lastSeen}\n            />\n          )}\n        </>\n      ) : (\n        <div className=\"startChat\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"26.55\"\n            height=\"25.219\"\n            viewBox=\"0 0 26.55 25.219\"\n          >\n            <path\n              id=\"Path_1\"\n              data-name=\"Path 1\"\n              d=\"M-242.2-184.285h-13l26.55-10.786-4.252,25.219-5.531-10.637-2.127,4.68v-6.382l7.659-9.148h2.34\"\n              transform=\"translate(255.198 195.071)\"\n              fill=\"#707070\"\n            />\n          </svg>\n          <p>start a chat</p>\n        </div>\n      )}\n      <Modal\n        className=\"milestoneRequest\"\n        head={true}\n        label={userType === \"seller\" ? \"Request Milestone\" : \"Create Milestone\"}\n        open={\n          userCard &&\n          history.location.pathname.match(/^\\/account\\/deals\\/.+\\/payment$/)\n        }\n        setOpen={() => history.push(`/account/deals/${userCard._id}`)}\n      >\n        <MilestoneForm\n          action={userType === \"seller\" ? \"request\" : \"create\"}\n          client={userCard}\n          onSuccess={(milestone) => {\n            history.push(`/account/deals/${userCard._id}`);\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Succ_svg />\n                  <h4 className=\"amount\">₹{milestone.milestone?.amount}</h4>\n                  <h4>Milestone has been created</h4>\n                </div>\n                <Link to=\"/account/hold\" onClick={() => setMsg(null)}>\n                  Check your Delivery pay Hold\n                </Link>\n              </>\n            );\n          }}\n        />\n      </Modal>\n      <Route\n        path=\"/account/deals/:_id/report\"\n        component={({ location }) => (\n          <Modal\n            open={true}\n            head={true}\n            label=\"Report User\"\n            className=\"userReport\"\n            setOpen={() =>\n              history.push(location.pathname.replace(/\\/report/, \"\"))\n            }\n          >\n            <div className=\"content\">\n              <ReportForm\n                user={userCard}\n                onSuccess={() => {\n                  history.push(\n                    history.location.pathname.replace(/\\/report/, \"\")\n                  );\n                  setMsg(\n                    <>\n                      <button onClick={() => setMsg(null)}>Okay</button>\n                      <div>\n                        <Succ_svg />\n                        <h4>User has been reported.</h4>\n                      </div>\n                    </>\n                  );\n                }}\n              />\n            </div>\n          </Modal>\n        )}\n      />\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst Bubble = ({ chat, msg, i, user }) => {\n  const history = useHistory();\n  const [milestone, setMilestone] = useState(null);\n  useEffect(() => {\n    if (msg.milestoneId) {\n      fetch(`/api/milestone?q=${msg.milestoneId}`)\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.milestones.length) {\n            setMilestone(data.milestones[0]);\n          }\n        });\n    }\n  }, []);\n  if (!msg) {\n    return null;\n  }\n  const timestamp =\n    Math.abs(\n      new Date(msg.createdAt).getTime() -\n        new Date(chat[i + 1]?.createdAt).getTime()\n    ) > 120000;\n  const dateStamp =\n    moment({\n      time: msg.createdAt,\n      format: \"YYYY-MM-DD\",\n    }) !== moment({ time: chat[i - 1]?.createdAt, format: \"YYYY-MM-DD\" }) ||\n    i === 0;\n  return (\n    <li\n      className={`bubble ${msg.from === user._id ? \"user\" : \"client\"} ${\n        milestone ? \"milestone\" : \"\"\n      }`}\n    >\n      {dateStamp && (\n        <Moment className=\"dateStamp\" format=\"MMM DD, YYYY\">\n          {msg.createdAt}\n        </Moment>\n      )}\n      {msg.text && (\n        <p\n          className=\"text\"\n          onClick={() => {\n            if (milestone) {\n              history.push(`/account/hold?q=${milestone._id}`);\n            }\n          }}\n        >\n          {milestone && <span className=\"amount\">₹{milestone.amount}</span>}\n          {msg.text}\n        </p>\n      )}\n      {msg.media && <MediaBubble link={msg.media} />}\n      {(timestamp || i === chat.length - 1) && (\n        <Moment className=\"timestamp\" format=\"hh:mm a\">\n          {msg.createdAt}\n        </Moment>\n      )}\n    </li>\n  );\n};\nconst MediaBubble = ({ link }) => {\n  let view = null;\n  let fullView = null;\n  const [open, setOpen] = useState(false);\n  if (link.match(/(\\.gif|\\.png|\\.jpg|\\.jpeg|\\.webp)$/i)) {\n    view = <Img src={link} onClick={() => setOpen(true)} />;\n  } else if (link.match(/(\\.mp3|\\.ogg|\\.amr|\\.m4a|\\.flac|\\.wav|\\.aac)$/i)) {\n    view = <audio src={link} controls=\"on\" />;\n  } else if (link.match(/(\\.mp4|\\.mov|\\.avi|\\.flv|\\.wmv|\\.webm)$/i)) {\n    view = (\n      <div className={`videoThumb`}>\n        <video src={link} onClick={() => setOpen(true)} />\n        <Img src=\"/play_btn.png\" />\n      </div>\n    );\n    fullView = <video src={link} controls=\"on\" autoPlay=\"on\" />;\n  } else {\n    view = (\n      <a href={link} target=\"_blank\" className=\"link\">\n        <Img src=\"/file_icon.png\" />\n        {link}\n      </a>\n    );\n  }\n  return (\n    <div className=\"file\">\n      {view}\n      <Modal open={open} className=\"chatMediaView\">\n        <button className=\"close\" onClick={() => setOpen(false)}>\n          <X_svg />\n        </button>\n        {fullView || view}\n      </Modal>\n    </div>\n  );\n};\n\nconst ChatForm = ({ rooms, user, newChat }) => {\n  const inputRef = useRef(null);\n  const formRef = useRef(null);\n  const [msg, setMsg] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const submit = async (e) => {\n    e.preventDefault();\n    if (!socket.connected) {\n      setMsg(\n        <>\n          <button onClick={() => setMsg(null)}>Okay</button>\n          <div>\n            <Err_svg />\n            <h4>Could not connect to server. Make sure you're online.</h4>\n          </div>\n        </>\n      );\n      return;\n    }\n    const cdn = process.env.REACT_APP_CDN_HOST;\n    const media = files.length\n      ? await UploadFiles({\n          files,\n          setMsg,\n        })\n      : [];\n    if (files.length && !media.length) {\n      setMsg(\n        <>\n          <button onClick={() => setMsg(null)}>Okay</button>\n          <div>\n            <Err_svg />\n            <h4>Could not send files. please try again.</h4>\n          </div>\n        </>\n      );\n      return;\n    }\n    if (media.length) {\n      media.forEach((link, i) => {\n        socket.emit(\"messageToServer\", {\n          rooms,\n          ...(newChat && { newChat }),\n          message: {\n            to: user,\n            media: link,\n          },\n        });\n      });\n      setFiles([]);\n    }\n    if (value && rooms.length) {\n      socket.emit(\"messageToServer\", {\n        rooms,\n        ...(newChat && { newChat }),\n        message: {\n          to: user,\n          text: value,\n        },\n      });\n      inputRef.current.focus();\n      setValue(\"\");\n    }\n  };\n  useEffect(() => {\n    socket.on(\"sendFail\", ({ err }) => {\n      setMsg(\n        <>\n          <button onClick={() => setMsg(null)}>Okay</button>\n          <div>\n            <Err_svg />\n            <h4>{err}</h4>\n          </div>\n        </>\n      );\n    });\n  }, []);\n  useEffect(() => {\n    if (!socket.connected) {\n      socket.connect();\n    }\n  }, [value, files]);\n  return (\n    <>\n      <form\n        onSubmit={submit}\n        ref={formRef}\n        className={loading ? \"loading\" : \"\"}\n      >\n        <Preview files={files} setFiles={setFiles} />\n        <section>\n          <TextareaAutosize\n            autoFocus={true}\n            ref={inputRef}\n            type=\"text\"\n            value={value}\n            style={{ height: \"100px\" }}\n            onChange={(e) => setValue(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.keyCode === 13 && !e.altKey) {\n                submit(e);\n              } else if (e.keyCode === 13 && e.altKey) {\n                setValue(value + \"\\n\");\n              }\n            }}\n          />\n          <div className=\"fileUpload\">\n            <input\n              type=\"file\"\n              multiple={true}\n              onChange={(e) => {\n                setFiles((prev) => [\n                  ...prev,\n                  ...[...e.target.files].filter(\n                    (item) => !files.some((file) => file.name === item.name)\n                  ),\n                ]);\n              }}\n            />\n            <Img src=\"/paperclip.svg\" />\n          </div>\n        </section>\n        <button type=\"submit\" disabled={loading}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"26.55\"\n            height=\"25.219\"\n            viewBox=\"0 0 26.55 25.219\"\n          >\n            <path\n              id=\"Path_1\"\n              data-name=\"Path 1\"\n              d=\"M-242.2-184.285h-13l26.55-10.786-4.252,25.219-5.531-10.637-2.127,4.68v-6.382l7.659-9.148h2.34\"\n              transform=\"translate(255.198 195.071)\"\n              fill=\"#fff\"\n            />\n          </svg>\n        </button>\n      </form>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\nconst ReportForm = ({ user, onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [msg, setMsg] = useState(null);\n  const submit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    fetch(\"/api/reportUser\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user: user._id,\n        message,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          onSuccess?.(data);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Report could not be submitted. try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Report could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form onSubmit={submit}>\n        <section>\n          <label>Messag</label>\n          <TextareaAutosize\n            required={true}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\">Submit</button>\n        </section>\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nconst Preview = ({ files, setFiles }) => {\n  if (files.length === 0) {\n    return null;\n  }\n  return (\n    <div className=\"preview\">\n      {files.map((item) => {\n        const file = {\n          type: item.type,\n          name: item.name,\n          url: URL.createObjectURL(item),\n        };\n        const img = file.type.startsWith(\"image\");\n        return (\n          <div key={item.name} className={`file ${img ? \"thumb\" : \"any\"}`}>\n            <button\n              className=\"close\"\n              type=\"button\"\n              onClick={() =>\n                setFiles((prev) =>\n                  prev.filter((item) => file.name !== item.name)\n                )\n              }\n            >\n              <X_svg />\n            </button>\n            <Img\n              className={img ? \"thumb\" : \"\"}\n              src={img ? file.url : \"/file_icon.png\"}\n            />\n            {!img && <p className=\"filename\">{item.name}</p>}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Deals;\n"],"sourceRoot":""}