{"version":3,"sources":["components/Profile.js","components/seller/OrderManagement.js","components/seller/RefundManagement.js","components/seller/CampaignManagement.js","components/seller/fbMarketplace.js","components/seller/MyShop.js"],"names":["updateProfileInfo","newData","a","fetch","method","headers","body","JSON","stringify","then","res","json","require","SinglePaymentMethod","setMsg","setUser","useContext","SiteContext","useState","edit","setEdit","deletePaymentMethod","useCallback","_id","code","prev","paymentMethods","filter","item","onClick","className","__t","Confirm","label","question","callback","card","open","head","setOpen","prefill","onSuccess","paymentMethod","account","DataEdit","fields","value","onError","formData","form","useRef","submit","e","preventDefault","allData","FormData","target","entries","field","password","confirm_password","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","type","coordinates","UploadFiles","files","user","alert","catch","err","console","log","ref","onSubmit","Profile","history","match","location","mismatchPass","setMismatchPass","msg","kycFiles","setKycFiles","addGoogleId","googleId","data","disconnectFromGoogle","src","profileImg","xmlns","width","height","viewBox","id","transform","fill","d","stroke","accept","onChange","file","cdn","process","_file","append","firstName","lastName","userId","placeholder","defaultValue","name","required","phone","pattern","email","gender","age","address","street","city","state","zip","multiple","kyc","verified","links","map","i","length","clientId","buttonText","onFailure","cookiePolicy","MilestoneForm","lazy","mod","default","SingleOrder","order","setOrders","selectAll","setBatch","batch","actionsRef","checkRef","useHistory","selected","setSelected","cancelOrder","status","acceptOrder","requestCancellation","useEffect","nativeEvent","path","includes","current","push","format","createdAt","buyer","products","reduce","c","qty","refundable","milestones","total","icon","to","Modal","FullOrder","userType","setOrder","shopInfo","shippingCost","setShipping","milestoneForm","setMilestoneForm","fileUpload","setFileUpload","declineOrder","markAsShipped","markAsDelivered","params","productPrice","calculatePrice","product","gst","fix","couponCodeDiscount","coupon","Math","min","amount","maxDiscount","fee","lable","Object","deliveryDetail","key","deliveryWithin","available","images","toString","milestone","dscr","terms","action","definedAmount","client","FileUploadForm","loading","setLoading","setFiles","fileLinks","title","Orders","categories","setTotal","page","setPage","perPage","setPerPage","setStatus","search","setSearch","column","sort","dateRange","setDateRange","orders","setSelectAll","startDate","moment","time","endDate","setHours","URLSearchParams","q","dateFrom","dateTo","options","opacity","range","btns","currentPage","SingleRefund","refund","setRefunds","seller","FullRefund","setRefund","refundTill","setRefundTill","updateRefund","acceptRefund","declineRefund","days","Date","getTime","deliveredAt","issue","deliveryTime","shipping","cellSpacing","cellPadding","Refunds","refunds","SingleCoupon","setCoupons","couponDetail","setCouponDetail","threshold","date","from","termsUrl","term","Coupons","coupons","Step","defaultStatus","children","disabled","step","BusinessManager","FB","window","businessManagers","setBusinessManagers","setErr","fbMarket","business","api","access_token","LS","get","businesses","businessManager","href","created_time","newUser","picture","url","business_id","asset_id","vertical","error","error_user_msg","message","FbPage","fbPages","setFbPages","createNew","setCreateNew","facebookPage","category","InstagramAccount","setStep","instas","setInstas","updateInstaAccounts","instagramAccount","profile_pic","username","CommerceAccount","commerceAccount","catalog","setCatalog","find","delCatalog","Marketplace","userAgreement","logout","remove","login","set","authResponse","accessToken","ProductForm","setType","setCategory","discount","setDiscount","setName","setDscr","price","setPrice","setGst","hsn","setHsn","setAvailable","tags","setTags","tag","onKeyPress","trim","charCode","focus","input","previousElementSibling","Products","shopSetupComplete","productForm","setProductForm","setProducts","addMany","setAddMany","deleteItems","items","_ids","some","deleteMany","addToFbMarket","fb_products","success","failed","forEach","prod","fbMarketId","removeFromFbMarket","SingleProduct","calculateDiscount","BatchUpload","batchItems","setBatchItems","setImages","csvDraft","setCsvDraft","addBatchProducts","updated","uploadImages","imgLinks","Images","Name","Description","Material","Category","Type","filename","toLowerCase","newItems","splice","cb","reader","FileReader","onload","evt","bstr","result","XLSX","wb","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","arr","cols","shift","row","col","j","readAsBinaryString","parseXLSXtoJSON","undefined","split","defaultTerms","Settings","setCategories","gstEdit","setGstEdit","shippingEdit","setShippingEdit","termsEdit","setTermsEdit","editPayment","setEditPayment","values","cat","querySelector","detail","reg","bank","accountType","accountNumber","ifsc","GstEditForm","gstFiles","setGstFiles","gstReg","setGstReg","setAmount","ShippingEditForm","setShippingCost","setDeliveryWithin","setRefundable","TermsEditForm","setTerms","addTerm","setAddTerm","PaymentMethodForm","setBank","setIfsc","setCity","setAccountNumber","MyShop","setShopSetupComplete","getLoginStatus","response","style","display","basepath","tabs","component","OrderManagement","RefundManagement","Campaigns","FBMarket"],"mappings":"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","file":"static/js/13.69d1c8d2.chunk.js","sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport { BankCard, BankAccount, BankCardForm, NetBankingForm } from \"./Wallet\";\nimport { Modal, Confirm } from \"./Modal\";\nimport {\n  Err_svg,\n  Succ_svg,\n  FileInput,\n  Media,\n  UploadFiles,\n  Img,\n} from \"./Elements\";\nimport GoogleLogin from \"react-google-login\";\nrequire(\"./styles/profile.scss\");\n\nexport async function updateProfileInfo(newData) {\n  return fetch(\"/api/editUserProfile\", {\n    method: \"PATCH\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(newData),\n  }).then((res) => res.json());\n}\n\nconst Profile = ({ history, match, location }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [mismatchPass, setMismatchPass] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const [kycFiles, setKycFiles] = useState([]);\n  const [gstFiles, setGstFiles] = useState([]);\n  const addGoogleId = (e) => {\n    if (e.googleId) {\n      updateProfileInfo({ googleId: e.googleId })\n        .then((data) => {\n          setUser((prev) => ({ ...prev, googleId: e.googleId }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Google account successfully connected.</h4>\n              </div>\n            </>\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not connect Google account.</h4>\n              </div>\n            </>\n          );\n        });\n    }\n  };\n  const disconnectFromGoogle = (e) => {\n    updateProfileInfo({ googleId: null })\n      .then((data) => {\n        if (data.user) {\n          setUser((prev) => ({ ...prev, googleId: null }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Successfully disconnected Google.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not disconnect Google account. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not disconnect Google account.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <div className=\"profileContainer\">\n      <div className=\"benner\">\n        <div className=\"profileImg\">\n          <Img src={user.profileImg || \"/profile-user.jpg\"} />\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"91.832\"\n            height=\"25.468\"\n            viewBox=\"0 0 91.832 25.468\"\n          >\n            <g\n              id=\"Path_1937\"\n              data-name=\"Path 1937\"\n              transform=\"translate(15.429 -9.647)\"\n              fill=\"#fff\"\n            >\n              <path\n                d=\"M 29.79687690734863 34.6146240234375 C 22.21588897705078 34.6146240234375 13.43720626831055 32.0111198425293 5.0779709815979 27.28368377685547 C -2.8753981590271 22.78578186035156 -9.78753662109375 16.7585563659668 -14.48426628112793 10.24203777313232 C -13.95890235900879 10.24473857879639 -13.30369663238525 10.25548648834229 -12.80753517150879 10.26361274719238 C -12.44524097442627 10.26955413818359 -12.15906429290771 10.27424812316895 -12.02891159057617 10.27424812316895 C -11.93940830230713 10.27424812316895 -11.86373233795166 10.26253128051758 -11.79978466033936 10.24241733551025 C -11.48864650726318 10.21196746826172 -10.04010391235352 10.17821311950684 -5.149840831756592 10.17821311950684 C -1.226676225662231 10.17821311950684 4.093100070953369 10.19837760925293 9.725229263305664 10.21973037719727 C 16.20444107055664 10.24428367614746 23.54814720153809 10.27211856842041 29.79687690734863 10.27211856842041 C 31.89767646789551 10.27211856842041 43.68988800048828 10.22107124328613 56.17448806762695 10.16702461242676 L 59.24650192260742 10.15374183654785 C 60.32665252685547 10.14907169342041 61.61424255371094 10.14680099487305 63.18285369873047 10.14680099487305 C 64.99295043945313 10.14680099487305 66.92156219482422 10.14978885650635 68.78666687011719 10.15269470214844 C 70.55825042724609 10.1554479598999 72.23158264160156 10.15804767608643 73.72422027587891 10.15804767608643 C 74.4501953125 10.15804767608643 75.08247375488281 10.1574182510376 75.63590240478516 10.15613842010498 C 74.24596405029297 13.15391826629639 71.95748138427734 16.1362361907959 68.82386779785156 19.03109550476074 C 65.67525482177734 21.9398250579834 61.6738166809082 24.71903610229492 57.25215911865234 27.06828308105469 C 52.91740798950195 29.37135314941406 48.15610122680664 31.27616500854492 43.48295974731445 32.57678985595703 C 38.69290161132813 33.90995407104492 33.96032333374023 34.6146240234375 29.79687690734863 34.6146240234375 Z\"\n                stroke=\"none\"\n              />\n              <path\n                d=\"M 63.18235397338867 10.64679336547852 C 61.61428070068359 10.64679336547852 60.32755279541016 10.64906692504883 59.24865341186523 10.65373229980469 L 56.18099212646484 10.6670036315918 C 43.69374084472656 10.72105407714844 31.89901733398438 10.77211761474609 29.79687881469727 10.77211761474609 C 23.54719161987305 10.77211761474609 16.2029914855957 10.74428176879883 9.723331451416016 10.71971893310547 C 4.091693878173828 10.69837951660156 -1.227619171142578 10.67821884155273 -5.149848937988281 10.67821884155273 C -9.844169616699219 10.67821884155273 -11.33226013183594 10.70873641967773 -11.7083740234375 10.73677062988281 C -11.80277252197266 10.76053237915039 -11.90915679931641 10.77424240112305 -12.0289306640625 10.77424240112305 C -12.16323089599609 10.77424240112305 -12.45131683349609 10.7695198059082 -12.81605529785156 10.76354217529297 C -13.01943206787109 10.76021194458008 -13.24966430664063 10.75643920898438 -13.48653411865234 10.75296401977539 C -8.851593017578125 16.903076171875 -2.239547729492188 22.57095718383789 5.324104309082031 26.84845542907715 C 13.60947799682617 31.53411865234375 22.30074310302734 34.11461639404297 29.79687881469727 34.11461639404297 C 33.91565704345703 34.11461639404297 38.60186767578125 33.41628265380859 43.34890747070313 32.0950927734375 C 47.98773193359375 30.80401802062988 52.71426773071289 28.91309356689453 57.0175666809082 26.62672996520996 C 61.40182876586914 24.29735565185547 65.3670654296875 21.5438175201416 68.48458099365234 18.6638298034668 C 71.32099151611328 16.04351997375488 73.45128631591797 13.35661125183105 74.83492279052734 10.65748596191406 C 74.4908447265625 10.65786743164063 74.12125396728516 10.65805435180664 73.72370147705078 10.65805435180664 C 72.23068237304688 10.65805435180664 70.55716705322266 10.65545654296875 68.78539276123047 10.65269470214844 C 66.92047119140625 10.6497917175293 64.9920654296875 10.64679336547852 63.18235397338867 10.64679336547852 M 63.18235778808594 9.646797180175781 C 66.69034576416016 9.646797180175781 70.639892578125 9.658050537109375 73.72370910644531 9.658050537109375 C 74.72272491455078 9.658050537109375 75.63052368164063 9.656867980957031 76.4033203125 9.653743743896484 C 70.7041015625 23.3221435546875 47.19384002685547 35.11461639404297 29.79687881469727 35.11461639404297 C 13.80905532836914 35.11461639404297 -5.7138671875 23.84020614624023 -15.427734375 9.772117614746094 C -15.45098876953125 9.749141693115234 -15.14891815185547 9.741405487060547 -14.71451568603516 9.741401672363281 C -13.8193359375 9.741401672363281 -12.36181640625 9.774246215820313 -12.02893829345703 9.774246215820313 C -11.98212432861328 9.774246215820313 -11.95759582519531 9.773597717285156 -11.9599609375 9.772117614746094 C -12.07225799560547 9.701694488525391 -9.402595520019531 9.678211212158203 -5.14984130859375 9.678211212158203 C 3.356430053710938 9.678211212158203 18.19854354858398 9.772117614746094 29.79687881469727 9.772117614746094 C 32.07231903076172 9.772117614746094 46.01445388793945 9.710941314697266 59.24433135986328 9.653743743896484 C 60.42824935913086 9.648624420166016 61.76977157592773 9.646797180175781 63.18235778808594 9.646797180175781 Z\"\n                stroke=\"none\"\n                fill=\"#336cf9\"\n              />\n            </g>\n          </svg>\n          <input\n            type=\"file\"\n            accept=\".jpg, .png, .jpeg\"\n            onChange={(e) => {\n              const file = e.target.files[0];\n              const cdn = process.env.REACT_APP_CDN_HOST;\n              if (file) {\n                let imgLink = \"\";\n                const formData = new FormData();\n                for (var _file of e.target.files) {\n                  formData.append(\"file\", _file);\n                }\n                fetch(`${cdn}/upload`, {\n                  method: \"POST\",\n                  body: formData,\n                })\n                  .then((res) => res.json())\n                  .then((data) => {\n                    if (data.code === \"ok\") {\n                      imgLink = cdn + \"/\" + data.files[0];\n                      updateProfileInfo({ profileImg: imgLink }).then(\n                        (data) => {\n                          if (data.user) {\n                            setUser((prev) => ({\n                              ...prev,\n                              profileImg: data.user.profileImg,\n                            }));\n                          }\n                        }\n                      );\n                    } else {\n                      setMsg(\n                        <>\n                          <button onClick={() => setMsg(null)}>Okay</button>\n                          <div>\n                            <Err_svg />\n                            <h4>Image upload failed</h4>\n                          </div>\n                        </>\n                      );\n                    }\n                  })\n                  .catch((err) => {\n                    setMsg(\n                      <>\n                        <button onClick={() => setMsg(null)}>Okay</button>\n                        <div>\n                          <Err_svg />\n                          <h4>Image upload failed. Make sure you're online.</h4>\n                        </div>\n                      </>\n                    );\n                  });\n              }\n            }}\n          />\n          <label>Edit</label>\n        </div>\n        <div>\n          <p className=\"name\">{user.firstName + \" \" + user.lastName}</p>\n          <p className=\"id\">Delivery pay ID: {user.userId || user._id}</p>\n        </div>\n      </div>\n      <div className=\"settings\">\n        <div className=\"head\">Account Settings</div>\n        <ul>\n          <DataEdit\n            label=\"Name\"\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"First name\"\n                    defaultValue={user.firstName}\n                    name=\"firstName\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    placeholder=\"last name\"\n                    defaultValue={user.lastName}\n                    name=\"lastName\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.firstName + \" \" + user.lastName}\n          />\n          <DataEdit\n            label=\"Phone Number\"\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"Phone Number\"\n                    defaultValue={user.phone}\n                    name=\"phone\"\n                    required={true}\n                    pattern=\"^(\\+91|91|1|)\\d{10}$\"\n                  />\n                </section>\n              </>\n            }\n            value={user.phone}\n          />\n          <DataEdit\n            label=\"Email\"\n            fields={\n              <>\n                <section>\n                  <input\n                    type=\"email\"\n                    placeholder=\"Phone Number\"\n                    defaultValue={user.email}\n                    name=\"email\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.email}\n          />\n          <DataEdit\n            label=\"Password\"\n            onError={() => setMismatchPass(true)}\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    required={true}\n                    type=\"password\"\n                    onChange={(e) => setMismatchPass(false)}\n                  />\n                </section>\n                <section>\n                  <input\n                    placeholder=\"Confirm password\"\n                    name=\"confirm_password\"\n                    required={true}\n                    type=\"password\"\n                    onChange={(e) => setMismatchPass(false)}\n                  />\n                </section>\n                {mismatchPass && (\n                  <p className=\"errMsg\">Password did not match.</p>\n                )}\n              </>\n            }\n            value=\"••••••••••••\"\n          />\n          <DataEdit\n            label=\"Gender\"\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"Gender\"\n                    defaultValue={user.gender}\n                    name=\"gender\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.gender}\n          />\n          <DataEdit\n            label=\"Age\"\n            fields={\n              <>\n                <section>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Age\"\n                    defaultValue={user.age}\n                    name=\"age\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.age}\n          />\n          <DataEdit\n            label=\"Address\"\n            fields={\n              <>\n                <section>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Address\"\n                    defaultValue={user.address.street}\n                    name=\"address.street\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    type=\"text\"\n                    placeholder=\"City\"\n                    defaultValue={user.address.city}\n                    name=\"address.city\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    type=\"text\"\n                    placeholder=\"State\"\n                    defaultValue={user.address.state}\n                    name=\"address.state\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    type=\"number\"\n                    placeholder=\"PIN Code\"\n                    defaultValue={user.address.zip}\n                    name=\"address.zip\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={`${user.address?.street || \"\"} ${user.address?.city || \"\"} ${\n              user.address?.state || \"\"\n            } ${user.address?.zip || \"\"}`}\n          />\n        </ul>\n      </div>\n      <div className=\"kyc\">\n        <div className=\"head\">KYC</div>\n        <ul>\n          <DataEdit\n            label=\"KYC\"\n            setMsg={setMsg}\n            formData={kycFiles}\n            fields={\n              <>\n                <section>\n                  <label>Upload files for verification.</label>\n                  <FileInput\n                    multiple={true}\n                    prefill={user.kyc?.files}\n                    name=\"kyc.files\"\n                    onChange={(files) => setKycFiles(files)}\n                  />\n                </section>\n              </>\n            }\n            value={\n              <>\n                <p>Status: {user.kyc?.verified ? \"Verified\" : \"Unverified\"}</p>\n                <label>Files for verification:</label>\n                <ul className=\"thumbs\">\n                  <Media links={user.kyc?.files} />\n                </ul>\n              </>\n            }\n          />\n        </ul>\n      </div>\n      <div className=\"paymentMethods\">\n        <div className=\"head\">Payment Methods</div>\n        <ul className=\"methods\">\n          {user.paymentMethods.map((method, i) => (\n            <SinglePaymentMethod key={i} setMsg={setMsg} method={method} />\n          ))}\n          {user.paymentMethods?.length === 0 && <p>No payment method added.</p>}\n        </ul>\n      </div>\n      <div className=\"socials\">\n        <div className=\"head\">Connect Social Accounts</div>\n        <ul className=\"providers\">\n          {user.googleId ? (\n            <GoogleLogin\n              className=\"google\"\n              clientId=\"978249749020-kjq65au1n373ur5oap7n4ebo2fq1jdhq.apps.googleusercontent.com\"\n              buttonText=\"Disconnect from Google\"\n              onSuccess={disconnectFromGoogle}\n              onFailure={disconnectFromGoogle}\n              cookiePolicy={\"single_host_origin\"}\n            />\n          ) : (\n            <GoogleLogin\n              className=\"google\"\n              clientId=\"978249749020-kjq65au1n373ur5oap7n4ebo2fq1jdhq.apps.googleusercontent.com\"\n              buttonText=\"Connect with Google\"\n              onSuccess={addGoogleId}\n              onFailure={addGoogleId}\n              cookiePolicy={\"single_host_origin\"}\n            />\n          )}\n        </ul>\n      </div>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\nconst SinglePaymentMethod = ({ method, setMsg }) => {\n  const { setUser } = useContext(SiteContext);\n  const [edit, setEdit] = useState(false);\n  const deletePaymentMethod = useCallback((method) => {\n    fetch(\"/api/deletePaymentMethod\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: method._id }),\n    })\n      .then((res) => res.json())\n      .then(({ code }) => {\n        if (code === \"ok\") {\n          setUser((prev) => ({\n            ...prev,\n            paymentMethods: prev.paymentMethods.filter(\n              (item) => item._id !== method._id\n            ),\n          }));\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Payment method could not be deleted.</h4>\n              </div>\n            </>\n          );\n        }\n      });\n  }, []);\n  return (\n    <li>\n      <div className=\"actions\">\n        <button className=\"edit\" onClick={() => setEdit(method.__t)}>\n          Edit\n        </button>\n        <button\n          className=\"delete\"\n          onClick={() => {\n            return Confirm({\n              label: \"Payment method delete\",\n              question: \"Do you want to delete this payment method?\",\n              callback: () => deletePaymentMethod(method),\n            });\n          }}\n        >\n          Delete\n        </button>\n      </div>\n      {method.__t === \"BankCard\" && (\n        <>\n          <BankCard card={method} />\n          {edit === method.__t && (\n            <Modal\n              open={edit}\n              head={true}\n              label=\"Edit Payment Method\"\n              setOpen={setEdit}\n              className=\"editPaymentMethod\"\n            >\n              <BankCardForm\n                prefill={method}\n                onSuccess={(paymentMethod) => {\n                  if (paymentMethod) {\n                    setEdit(false);\n                    setMsg(\n                      <>\n                        <button onClick={() => setMsg(null)}>Okay</button>\n                        <div>\n                          <Succ_svg />\n                          <h4>Payment method updated.</h4>\n                        </div>\n                      </>\n                    );\n                  }\n                }}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n      {method.__t === \"BankAccount\" && (\n        <>\n          <BankAccount account={method} />\n          {edit === method.__t && (\n            <Modal\n              open={edit}\n              head={true}\n              label=\"Edit Payment Method\"\n              setOpen={setEdit}\n              className=\"editPaymentMethod\"\n            >\n              <NetBankingForm\n                prefill={method}\n                onSuccess={(paymentMethod) => {\n                  if (paymentMethod) {\n                    setEdit(false);\n                    setMsg(\n                      <>\n                        <button onClick={() => setMsg(null)}>Okay</button>\n                        <div>\n                          <Succ_svg />\n                          <h4>Payment method updated.</h4>\n                        </div>\n                      </>\n                    );\n                  }\n                }}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n    </li>\n  );\n};\n\nconst DataEdit = ({ label, fields, value, onError, setMsg, formData }) => {\n  const { setUser } = useContext(SiteContext);\n  const [edit, setEdit] = useState(false);\n  const form = useRef(null);\n  const submit = async (e) => {\n    e.preventDefault();\n    let allData = {};\n    for (var [field, value] of new FormData(e.target).entries()) {\n      allData[field] = value;\n    }\n    if (allData.password && allData.password !== allData.confirm_password) {\n      onError?.();\n      return;\n    }\n    if (allData[\"address.city\"]) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        let lat = position.coords.latitude;\n        let long = position.coords.longitude;\n        allData[\"address.location\"] = {\n          type: \"Point\",\n          coordinates: [long, lat],\n        };\n      });\n    }\n    if (allData[\"kyc.files\"]) {\n      allData[\"kyc.files\"] =\n        (await UploadFiles({ files: formData, setMsg })) || [];\n    }\n    if (allData[\"gst.detail.files\"]) {\n      allData[\"gst.detail.files\"] =\n        (await UploadFiles({ files: formData, setMsg })) || [];\n    }\n    fetch(\"/api/editUserProfile\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(allData),\n    })\n      .then((res) => res.json())\n      .then(({ user }) => {\n        if (user) {\n          setUser(user);\n          setEdit(false);\n        } else {\n          alert(\"someting went wrong\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"someting went wrong\");\n      });\n  };\n  return (\n    <li>\n      <p className=\"label\">{label}</p>\n      <form ref={form} onSubmit={submit}>\n        {edit ? (\n          <div className=\"inputs\">{fields}</div>\n        ) : (\n          <div className=\"currentValue\">{value}</div>\n        )}\n        <div className=\"btns\">\n          {edit ? (\n            <>\n              <button key=\"submit\" type=\"submit\">\n                Save changes\n              </button>\n              <button key=\"cancel\" type=\"button\" onClick={() => setEdit(false)}>\n                Cancel\n              </button>\n            </>\n          ) : (\n            <button key=\"edit\" type=\"button\" onClick={() => setEdit(true)}>\n              Edit\n            </button>\n          )}\n        </div>\n      </form>\n    </li>\n  );\n};\n\nexport default Profile;\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  useContext,\n  lazy,\n} from \"react\";\nimport {\n  Succ_svg,\n  Err_svg,\n  Plus_svg,\n  X_svg,\n  Combobox,\n  Pagination,\n  Checkbox,\n  calculateDiscount,\n  calculatePrice,\n  Actions,\n  Chev_down_svg,\n  User,\n  Arrow_left_svg,\n  NumberInput,\n  Media,\n  UploadFiles,\n  FileInput,\n  Img,\n  Moment,\n  moment,\n  InputDateRange,\n} from \"../Elements\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { SiteContext } from \"../../SiteContext\";\nimport { Modal, Confirm } from \"../Modal\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { toast } from \"react-toastify\";\nconst MilestoneForm = lazy(() =>\n  import(\"../Forms\").then((mod) => ({ default: mod.MilestoneForm }))\n);\n\nconst Orders = ({ categories }) => {\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(20);\n  const [status, setStatus] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState({\n    column: \"createdAt\",\n    order: \"dsc\",\n  });\n  const [dateRange, setDateRange] = useState(null);\n  const [orders, setOrders] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [batch, setBatch] = useState([]);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    const startDate = moment({\n      time: dateRange?.startDate,\n      format: \"YYYY-MM-DD\",\n    });\n    const endDate = moment({\n      time: dateRange?.endDate.setHours(24, 0, 0, 0),\n      format: \"YYYY-MM-DD\",\n    });\n    fetch(\n      `/api/getOrders?${new URLSearchParams({\n        user: \"seller\",\n        ...(search && { q: search }),\n        page,\n        perPage,\n        sort: sort.column,\n        order: sort.order,\n        ...(dateRange && {\n          dateFrom: startDate,\n          dateTo: endDate,\n        }),\n        ...(status && { status }),\n      })}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrders(data.orders);\n          setTotal(data.total);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get orders.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [status, search, page, perPage, dateRange]);\n  useEffect(() => {\n    if (selectAll) {\n    } else {\n      setBatch([]);\n    }\n  }, [selectAll]);\n  useEffect(() => {\n    if (batch.length === 0) {\n      setSelectAll(false);\n    }\n  }, [batch]);\n  return (\n    <>\n      <div className=\"benner\">\n        <p>Order Management</p>\n      </div>\n      <div className=\"filters\">\n        <section>\n          <label>Total:</label>\n          {total}\n        </section>\n        <section>\n          <label>Per Page:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"20\", value: 20 },\n              { label: \"30\", value: 30 },\n              { label: \"50\", value: 50 },\n            ]}\n            onChange={(e) => setPerPage(e.value)}\n          />\n        </section>\n        <section className=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 23 23\"\n          >\n            <path\n              id=\"Icon_ionic-ios-search\"\n              data-name=\"Icon ionic-ios-search\"\n              d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n              transform=\"translate(-4.5 -4.493)\"\n              fill=\"#707070\"\n              opacity=\"0.74\"\n            />\n          </svg>\n          <input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search for Buyer\"\n          />\n          {search && (\n            <button onClick={() => setSearch(\"\")}>\n              <X_svg />\n            </button>\n          )}\n        </section>\n        <section className=\"category\">\n          <label>Status:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"All\", value: \"\" },\n              { label: \"Pending\", value: \"pending\" },\n              { label: \"Approved\", value: \"approved\" },\n              { label: \"Cancelled\", value: \"cancelled\" },\n              { label: \"Hold\", value: \"Hold\" },\n              { label: \"Shipped\", value: \"shipped\" },\n              { label: \"Delivered\", value: \"delivered\" },\n              { label: \"Refunded\", value: \"refunded\" },\n            ]}\n            onChange={(e) => setStatus(e.value)}\n          />\n        </section>\n        <section className={`date`}>\n          <InputDateRange\n            dateRange={dateRange}\n            onChange={(range) => setDateRange(range)}\n          />\n        </section>\n      </div>\n      {batch.length > 0 && (\n        <div className=\"batchAction\">\n          <button onClick={() => console.log(\"batch delete\")}>Delete</button>\n        </div>\n      )}\n      <table className=\"table orders\">\n        <thead>\n          <tr>\n            {\n              //   <th className=\"checkContainer\">\n              //   <Checkbox\n              //     value={selectAll}\n              //     defaultValue={selectAll}\n              //     onChange={(e) => setSelectAll(e)}\n              //   />\n              // </th>\n            }\n            <th className=\"date\">Date</th>\n            <th>Buyer</th>\n            <th>QTY</th>\n            <th>Refundable</th>\n            <th>Milestone</th>\n            <th>Status</th>\n            <th>Total Price</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders.map((order, i) => (\n            <SingleOrder\n              key={i}\n              order={order}\n              setOrders={setOrders}\n              selectAll={selectAll}\n              setBatch={setBatch}\n              batch={batch}\n            />\n          ))}\n          {orders.length === 0 && (\n            <tr className=\"placeholder\">\n              <td>No product yet.</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <Pagination\n        total={total}\n        btns={5}\n        currentPage={page}\n        perPage={perPage}\n        setPage={setPage}\n      />\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nconst SingleOrder = ({ order, setOrders, selectAll, setBatch, batch }) => {\n  const actionsRef = useRef();\n  const checkRef = useRef();\n  const history = useHistory();\n  const { user } = useContext(SiteContext);\n  const [selected, setSelected] = useState(selectAll || false);\n  const [edit, setEdit] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const cancelOrder = () => {\n    fetch(\"/api/declineOrder\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: order._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrders((prev) =>\n            prev.map((item) => {\n              if (item._id === order._id) {\n                return {\n                  ...item,\n                  status: data.order?.status,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not cancel order. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not cancel order. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const acceptOrder = () => {\n    fetch(\"/api/acceptOrder\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: order._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrders((prev) =>\n            prev.map((item) => {\n              if (item._id === order._id) {\n                return {\n                  ...item,\n                  status: data.order?.status,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Orders does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not accept order. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const requestCancellation = () => {\n    fetch(\"/api/requestCancellation\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: order._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrders((prev) =>\n            prev.map((item) => {\n              if (item._id === order._id) {\n                return {\n                  ...item,\n                  status: data.order?.status,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not cancel order. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not cancel order. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    setSelected(selectAll);\n  }, [selectAll]);\n  useEffect(() => {\n    if (selected) {\n      setBatch((prev) => [...prev, order._id]);\n    } else {\n      setBatch((prev) => prev.filter((item) => item !== order._id));\n    }\n  }, [selected]);\n  return (\n    <>\n      <tr\n        className={`order ${selected ? \"selected\" : \"\"}`}\n        onClick={(e) => {\n          if (\n            e.nativeEvent.path.includes(actionsRef.current) ||\n            e.nativeEvent.path.includes(checkRef.current) ||\n            batch.length > 0\n          ) {\n          } else {\n            history.push(`/account/myShop/orders/${order._id}`);\n          }\n        }}\n      >\n        {\n          //   <td className=\"checkContainer\" ref={checkRef}>\n          //   <Checkbox\n          //     defaultValue={selected}\n          //     value={selected}\n          //     onChange={(e) => {\n          //       setSelected(e);\n          //     }}\n          //   />\n          // </td>\n        }\n        <td className=\"date\">\n          <Moment format=\"DD MMM YYYY, hh:mm a\">{order.createdAt}</Moment>\n        </td>\n        <td className=\"user\">\n          <User user={order.buyer} />\n        </td>\n        <td>{order.products.reduce((a, c) => a + c.qty, 0)}</td>\n        <td>{order.refundable || \"N/A\"}</td>\n        <td>{order.milestones.length || \"N/A\"}</td>\n        <td>{order.status}</td>\n        <td>₹{order.total}</td>\n        <td ref={actionsRef}>\n          {batch.length === 0 && (\n            <Actions icon={<Chev_down_svg />}>\n              <Link to={`/account/myShopping/orders/${order._id}`}>\n                View Detail\n              </Link>\n              {order.status === \"pending\" && (\n                <>\n                  <Link\n                    to=\"#\"\n                    onClick={(e) => {\n                      Confirm({\n                        label: \"Accept Order\",\n                        question: \"You sure want to accept this order?\",\n                        callback: acceptOrder,\n                      });\n                    }}\n                  >\n                    Accept order\n                  </Link>\n                  <Link\n                    to=\"#\"\n                    onClick={(e) => {\n                      Confirm({\n                        label: \"Order Cancellation\",\n                        question: \"You sure want to cancel this order?\",\n                        callback: cancelOrder,\n                      });\n                    }}\n                  >\n                    Cancel order\n                  </Link>\n                </>\n              )}\n              {order.status === \"approved\" && (\n                <Link\n                  to=\"#\"\n                  onClick={(e) => {\n                    Confirm({\n                      label: \"Order Cancellation\",\n                      question:\n                        \"You sure want to request cancellation for this order?\",\n                      callback: requestCancellation,\n                    });\n                  }}\n                >\n                  Request Cancellation\n                </Link>\n              )}\n            </Actions>\n          )}\n        </td>\n      </tr>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport const FullOrder = ({ history, match }) => {\n  const { user, userType } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [order, setOrder] = useState(null);\n  const [shipping, setShipping] = useState(user.shopInfo?.shippingCost || 0);\n  const [refundable, setRefundable] = useState(null);\n  const [addTerm, setAddTerm] = useState(\"\");\n  const [milestoneForm, setMilestoneForm] = useState(false);\n  const [fileUpload, setFileUpload] = useState(false);\n  const milestoneTimeout = useRef();\n  const acceptOrder = () => {\n    fetch(\"/api/acceptOrder\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id: order._id,\n        // products: order.products,\n        // shippingCost: shipping,\n        // refundable,\n        // terms,\n        // total,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder((prev) => ({ ...prev, status: \"approved\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Order approved.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Orders does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not accept order. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const declineOrder = () => {\n    fetch(\"/api/declineOrder\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: order._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder((prev) => ({ ...prev, status: \"declined\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Order declined.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Orders does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not decline order. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const markAsShipped = () => {\n    fetch(\"/api/updateOrder\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id: order._id,\n        status: \"shipped\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder((prev) => ({ ...order, status: \"shipped\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>\n                  Order has been updated. Don't forget to upload proof of\n                  shipping below.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Order could not be updated. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Order could not be updated. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const markAsDelivered = () => {\n    fetch(\"/api/updateOrder\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id: order._id,\n        status: \"delivered\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder((prev) => ({ ...order, status: \"delivered\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>\n                  Order has been updated. Don't forget to upload proof of\n                  delivery below.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Order could not be updated. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Order could not be updated. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    fetch(`/api/singleOrder?_id=${match.params._id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder(data.order);\n          setShipping(data.shippingCost);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Orders does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get order. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, []);\n  if (order) {\n    const productPrice = order.products.reduce(\n      (a, c) =>\n        (a + calculatePrice({ product: c.product, gst: true }) * c.qty).fix(),\n      0\n    );\n    const couponCodeDiscount =\n      (order.coupon?.type === \"percent\" &&\n        Math.min(\n          (productPrice / 100) * order.coupon.amount,\n          order.coupon.maxDiscount\n        )) ||\n      (order.coupon?.type === \"flat\" && order.coupon?.amount) ||\n      0;\n    const fee = (\n      ((productPrice - couponCodeDiscount + order.shippingCost) / 100) *\n      order.fee\n    ).fix();\n    return (\n      <>\n        <div className=\"actions\">\n          <Link\n            to={`/account/${\n              userType === \"seller\" ? \"myShop\" : \"myShopping\"\n            }/orders`}\n            className=\"back\"\n          >\n            <Arrow_left_svg />\n            Back\n          </Link>\n          {order.status === \"approved\" && (\n            <button\n              onClick={() =>\n                Confirm({\n                  label: \"Mark Order as Shipped\",\n                  question: \"Did you ship the order?\",\n                  callback: markAsShipped,\n                })\n              }\n            >\n              Mark as Shipped\n            </button>\n          )}\n          {order.status === \"shipped\" && (\n            <button\n              onClick={() =>\n                Confirm({\n                  label: \"Mark Order as Delivered\",\n                  question: \"Has the order been delivered?\",\n                  callback: markAsDelivered,\n                })\n              }\n            >\n              Mark as Delivered\n            </button>\n          )}\n          {order.status === \"pending\" && (\n            <>\n              <button\n                onClick={() => {\n                  Confirm({\n                    lable: \"Accept Order\",\n                    question: <>You sure want to accept this order?</>,\n                    callback: acceptOrder,\n                  });\n                }}\n              >\n                Accept\n              </button>\n              <button\n                onClick={() =>\n                  Confirm({\n                    label: \"Decline Order\",\n                    question: \"You sure want to decline this order?\",\n                    callback: declineOrder,\n                  })\n                }\n              >\n                Decline\n              </button>\n            </>\n          )}\n        </div>\n        <div className=\"singleOrder\">\n          <div className=\"summery\">\n            <h3>Order Summery</h3>\n            <ul>\n              <li>\n                <label>Buyer</label>\n                <User user={order.buyer} />\n              </li>\n              <li>\n                <label>Order ID</label>\n                {order._id}\n              </li>\n              <li>\n                <label>Status</label>\n                {order.status}\n              </li>\n              <li>\n                <label>Submitted at</label>\n                <Moment format=\"DD MMM YYYY, hh:mma\">{order.createdAt}</Moment>\n              </li>\n              <li></li>\n              <li className=\"devide\">\n                <label>Delivery Address</label>\n                <span />\n              </li>\n              {Object.entries(order.deliveryDetail).map(([key, value], i) =>\n                key === \"deliveryWithin\" ? (\n                  <li key={i}>\n                    <label>Delivery within</label>\n                    {order.deliveryDetail.deliveryWithin} days\n                  </li>\n                ) : (\n                  <li key={i}>\n                    <label>{key}</label>\n                    {value}\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n          <div className=\"products\">\n            <h3>Products</h3>\n            <ul>\n              {order.products.map(({ product, qty, available }, i) => (\n                <li key={i}>\n                  <Img src={product.images[0] || \"/open_box.png\"} />\n                  <div className=\"detail\">\n                    <p>{product.name}</p>\n                    <p className=\"qty\">QTY: {qty}</p>\n                    {order.status === \"pending\" && (\n                      <p className=\"available\">\n                        Available: {available.toString()}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"price\">\n                    <span>\n                      {calculatePrice({ product, gst: true })} x {qty}\n                    </span>\n                    ₹{(calculatePrice({ product, gst: true }) * qty).fix()}\n                  </div>\n                  {\n                    //   order.status === \"pending\" && (\n                    //   <div className=\"remove\">\n                    //     <button\n                    //       onClick={() => {\n                    //         setOrder((prev) => ({\n                    //           ...prev,\n                    //           products: prev.products.filter((cartProduct) => {\n                    //             console.log(cartProduct, product);\n                    //             return cartProduct.product._id !== product._id;\n                    //           }),\n                    //         }));\n                    //       }}\n                    //     >\n                    //       <X_svg />\n                    //     </button>\n                    //   </div>\n                    // )\n                  }\n                </li>\n              ))}\n            </ul>\n            <div className=\"total\">\n              <div className=\"data\">\n                <label>Total</label>₹{productPrice}\n              </div>\n              {order.coupon && (\n                <>\n                  <div className=\"data\">\n                    <label>\n                      Coupon Code {order.coupon.code}\n                      <br />\n                      Discount{\" \"}\n                      {order.coupon.type === \"percent\" ? (\n                        <>\n                          {order.coupon.amount}% (Upto ₹\n                          {order.coupon.maxDiscount})\n                        </>\n                      ) : (\n                        <>flat</>\n                      )}\n                    </label>\n                    <span>₹{couponCodeDiscount}</span>\n                  </div>\n                </>\n              )}\n              <div className=\"data\">\n                <label>Shipping</label>₹\n                {\n                  //   order.status === \"pending\" ? (\n                  //   <NumberInput\n                  //     value={shipping}\n                  //     onChange={(e) => setShipping(e.target.value)}\n                  //   />\n                  // ) : (\n                  //   <>{shipping || 0}</>\n                  // )\n                  order.shippingCost\n                }\n              </div>\n              <hr />\n              <div className=\"data\">\n                <label>Delivery Pay fee {order.fee}%</label>₹\n                {(order.total - (order.total / (order.fee + 100)) * 100).fix()}\n              </div>\n              <hr />\n              <div className=\"data\">\n                <label>Grand Total</label>₹{order.total.fix()}\n              </div>\n              <hr />\n              <div className=\"data\">\n                <label>You'll recieve</label>₹\n                {((order.total / (order.fee + 100)) * 100).fix()}\n              </div>\n            </div>\n            {\n              //   <div className=\"deliveryInfo\">\n              //   <section>\n              //     <label>Delivery Time</label>\n              //     {order.status === \"pending\" ? (\n              //       <input\n              //         type=\"datetime-local\"\n              //         value={deliveryTime}\n              //         onChange={(e) => setDeliveryTime(e.target.value)}\n              //       />\n              //     ) : order.deliveryDetail?.deliveryTime ? (\n              //       <Moment format=\"DD MMM YYYY hh:mma\">\n              //         order.deliveryDetail?.deliveryTime\n              //       </Moment>\n              //     ) : (\n              //       <>N/A</>\n              //     )}\n              //   </section>\n              //   <section>\n              //     <label>Refundable</label>\n              //     {order.status === \"pending\" ? (\n              //       <Combobox\n              //         required={true}\n              //         defaultValue={0}\n              //         onChange={(e) => setRefundable(e.value)}\n              //         options={[\n              //           { label: \"No\", value: null },\n              //           {\n              //             label: \"Upto 24 Hours After Delivery\",\n              //             value: \"Upto 24 Hours After Delivery\",\n              //           },\n              //           {\n              //             label: \"Upto 7 Days After Delivery\",\n              //             value: \"Upto 7 Days After Delivery\",\n              //           },\n              //           {\n              //             label: \"Upto 15 Days After Delivery\",\n              //             value: \"Upto 15 Days After Delivery\",\n              //           },\n              //         ]}\n              //       />\n              //     ) : (\n              //       <>{order.refundable || \"N/A\"}</>\n              //     )}\n              //   </section>\n              // </div>\n            }\n          </div>\n          <div className=\"milestones\">\n            <h3>\n              Milestones\n              {\n                //   (order.status === \"approved\" ||\n                //   order.status === \"shipped\" ||\n                //   order.status === \"delivered\") && (\n                //   <button onClick={() => setMilestoneForm(true)}>\n                //     Request Milestone\n                //   </button>\n                // )\n              }\n            </h3>\n            <p className=\"subtitle\">Click to view milestone detail.</p>\n            {\n              // {order.status === \"pending\" ? (\n              //   <p>Buyer can create milestones after you accept the order.</p>\n              // ) : (\n            }\n            <table>\n              <thead>\n                <tr>\n                  <td>Date</td>\n                  <td>Descrption</td>\n                  <td>Amount</td>\n                  <td>Status</td>\n                </tr>\n              </thead>\n              <tbody>\n                {order.milestones.map((milestone) => (\n                  <tr\n                    key={milestone._id}\n                    onClick={() =>\n                      history.push(`/account/hold?q=${milestone._id}`)\n                    }\n                  >\n                    <td>\n                      <Moment format=\"DD MMM YYYY, hh:mma\">\n                        {milestone.createdAt}\n                      </Moment>\n                    </td>\n                    <td>{milestone.dscr}</td>\n                    <td>₹{milestone.amount}</td>\n                    <td>{milestone.status}</td>\n                  </tr>\n                ))}\n                {order.milestones.length === 0 && (\n                  <tr className=\"placeholdert\">\n                    <td>Nothing yet.</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n            {\n              // )}\n            }\n          </div>\n          <div className=\"delivery\">\n            <h3>\n              Proof of delivery\n              {(order.status === \"approved\" || order.status === \"shipped\") && (\n                <button onClick={() => setFileUpload(true)}>\n                  Upload proof of delivery\n                </button>\n              )}\n            </h3>\n            {order.files?.length > 0 ? (\n              <div className=\"thumbs\">\n                <Media links={order.files} />\n              </div>\n            ) : (\n              <>No files added.</>\n            )}\n          </div>\n          <section className=\"terms\">\n            <h3>Return Policy Terms</h3>\n            <ul>\n              {order.terms?.map((item, i) => (\n                <li key={i}>\n                  {item}{\" \"}\n                  {\n                    //   order.status === \"pending\" && (\n                    //   <button\n                    //     type=\"button\"\n                    //     onClick={() =>\n                    //       setTerms((prev) => prev.filter((term) => term !== item))\n                    //     }\n                    //   >\n                    //     <X_svg />\n                    //   </button>\n                    // )\n                  }\n                </li>\n              ))}\n              {\n                //   order.status === \"pending\" && (\n                //   <section className=\"addTerm\">\n                //     <TextareaAutosize\n                //       value={addTerm}\n                //       placeholder=\"Add auditional term\"\n                //       onChange={(e) => setAddTerm(e.target.value)}\n                //     />\n                //     <button\n                //       type=\"button\"\n                //       onClick={() => {\n                //         setTerms((prev) =>\n                //           addTerm\n                //             ? [\n                //                 ...prev.filter((term) => term !== addTerm),\n                //                 addTerm,\n                //               ]\n                //             : prev\n                //         );\n                //         setAddTerm(\"\");\n                //       }}\n                //     >\n                //       Add Term\n                //     </button>\n                //   </section>\n                // )\n              }\n            </ul>\n          </section>\n        </div>\n        <Modal\n          head={true}\n          label=\"Create Milestone\"\n          setOpen={setMilestoneForm}\n          className=\"milestoneRequest\"\n          open={milestoneForm}\n        >\n          <MilestoneForm\n            action=\"request\"\n            definedAmount={order.total}\n            client={order.buyer}\n            order={order._id}\n            onSuccess={(milestone) => {\n              setMilestoneForm(false);\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4 className=\"amount\">₹{milestone?.amount}</h4>\n                    <h4>Milestone has been requested</h4>\n                  </div>\n                  <Link to=\"/account/hold\" onClick={() => setMsg(null)}>\n                    Check your Delivery pay Hold\n                  </Link>\n                </>\n              );\n              setOrder((prev) => ({\n                ...prev,\n                milestones: [...prev.milestones, milestone],\n              }));\n            }}\n          />\n        </Modal>\n        <Modal\n          head={true}\n          label=\"Upload proof of shipping & delivery\"\n          setOpen={setFileUpload}\n          open={fileUpload}\n          className=\"fileUpload\"\n        >\n          <FileUploadForm\n            order={order}\n            onSuccess={(order) => {\n              setFileUpload(false);\n              setOrder((prev) => ({ ...prev, files: order.files }));\n            }}\n          />\n        </Modal>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </>\n    );\n  }\n  return <>Loading</>;\n};\nconst FileUploadForm = ({ order, onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const submit = async () => {\n    setLoading(true);\n    const fileLinks = files.length ? await UploadFiles({ files, setMsg }) : [];\n    fetch(\"/api/updateOrder\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: order._id, files: fileLinks }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.order);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not upload files. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not upload files. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          Confirm({\n            title: \"Upload Proof of Shipping & Delivery\",\n            question: (\n              <>\n                You sure want to upload these files?\n                <span className=\"note\">\n                  Keep in mind these files can not be deleted later.\n                </span>\n              </>\n            ),\n            callback: submit,\n          });\n        }}\n      >\n        <section>\n          <label>Upload Images of the products, shipment reciept etc.</label>\n          <FileInput\n            multiple={true}\n            accept=\"image/*\"\n            required={true}\n            onChange={(files) => setFiles(files)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\">Submit</button>\n        </section>\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport default Orders;\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  useContext,\n  lazy,\n} from \"react\";\nimport {\n  Succ_svg,\n  Err_svg,\n  Plus_svg,\n  X_svg,\n  Combobox,\n  Pagination,\n  Checkbox,\n  calculateDiscount,\n  calculatePrice,\n  Actions,\n  Chev_down_svg,\n  User,\n  Arrow_left_svg,\n  Media,\n  Img,\n  Moment,\n  moment,\n  InputDateRange,\n} from \"../Elements\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { SiteContext } from \"../../SiteContext\";\nimport { Modal, Confirm } from \"../Modal\";\nimport { toast } from \"react-toastify\";\nconst MilestoneForm = lazy(() =>\n  import(\"../Forms\").then((mod) => ({ default: mod.MilestoneForm }))\n);\n\nconst Refunds = ({ history, location }) => {\n  const { userType } = useContext(SiteContext);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(20);\n  const [search, setSearch] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [sort, setSort] = useState({\n    column: \"createdAt\",\n    order: \"dsc\",\n  });\n  const [dateRange, setDateRange] = useState(null);\n  const [refunds, setRefunds] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [batch, setBatch] = useState([]);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    const startDate = moment({\n      time: dateRange?.startDate,\n      format: \"YYYY-MM-DD\",\n    });\n    const endDate = moment({\n      time: new Date(dateRange?.endDate)?.setHours(24, 0, 0, 0),\n      format: \"YYYY-MM-DD\",\n    });\n    fetch(\n      `/api/getRefunds?${new URLSearchParams({\n        user: userType,\n        ...(search && { q: search }),\n        page,\n        perPage,\n        sort: sort.column,\n        order: sort.order,\n        ...(dateRange && {\n          dateFrom: startDate,\n          dateTo: endDate,\n        }),\n        ...(status && { status }),\n      })}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setRefunds(data.refunds);\n          setTotal(data.total);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get orders.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [search, page, perPage, dateRange, status]);\n  useEffect(() => {\n    if (selectAll) {\n    } else {\n      setBatch([]);\n    }\n  }, [selectAll]);\n  useEffect(() => {\n    if (batch.length === 0) {\n      setSelectAll(false);\n    }\n  }, [batch]);\n  return (\n    <>\n      <div className=\"benner\">\n        <p>My Refunds</p>\n      </div>\n      <div className=\"filters\">\n        <section>\n          <label>Total:</label>\n          {total}\n        </section>\n        <section>\n          <label>Per Page:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"20\", value: 20 },\n              { label: \"30\", value: 30 },\n              { label: \"50\", value: 50 },\n            ]}\n            onChange={(e) => setPerPage(e.value)}\n          />\n        </section>\n        <section className=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 23 23\"\n          >\n            <path\n              id=\"Icon_ionic-ios-search\"\n              data-name=\"Icon ionic-ios-search\"\n              d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n              transform=\"translate(-4.5 -4.493)\"\n              fill=\"#707070\"\n              opacity=\"0.74\"\n            />\n          </svg>\n          <input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search for Customer\"\n          />\n          {search && (\n            <button onClick={() => setSearch(\"\")}>\n              <X_svg />\n            </button>\n          )}\n        </section>\n        <section className=\"category\">\n          <label>Status:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"All\", value: \"\" },\n              { label: \"Pending\", value: \"pending\" },\n              { label: \"Approved\", value: \"approved\" },\n              { label: \"Product Sent\", value: \"productSent\" },\n              { label: \"Product Recieved\", value: \"productRecieved\" },\n              { label: \"Resolved\", value: \"resolved\" },\n            ]}\n            onChange={(e) => setStatus(e.value)}\n          />\n        </section>\n        <section className={`date`}>\n          <InputDateRange\n            dateRange={dateRange}\n            onChange={(range) => setDateRange(range)}\n          />\n        </section>\n      </div>\n      {batch.length > 0 && (\n        <div className=\"batchAction\">\n          <button onClick={() => console.log(\"batch delete\")}>Delete</button>\n        </div>\n      )}\n      <table className=\"table refunds\">\n        <thead>\n          <tr>\n            {\n              //   <th className=\"checkContainer\">\n              //   <Checkbox\n              //     value={selectAll}\n              //     defaultValue={selectAll}\n              //     onChange={(e) => setSelectAll(e)}\n              //   />\n              // </th>\n            }\n            <th className=\"date\">Date</th>\n            <th>Customer</th>\n            <th>QTY</th>\n            <th>Status</th>\n            <th>Total Price</th>\n            {\n              // <th>Actions</th>\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {refunds.map((refund) => (\n            <SingleRefund\n              key={refund._id}\n              refund={refund}\n              setRefunds={setRefunds}\n              selectAll={selectAll}\n              setBatch={setBatch}\n              batch={batch}\n            />\n          ))}\n          {refunds.length === 0 && (\n            <tr className=\"placeholder\">\n              <td>No product yet.</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <Pagination\n        total={total}\n        btns={5}\n        currentPage={page}\n        perPage={perPage}\n        setPage={setPage}\n      />\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nconst SingleRefund = ({ refund, setRefunds, selectAll, setBatch, batch }) => {\n  const history = useHistory();\n  const { user } = useContext(SiteContext);\n  const [selected, setSelected] = useState(selectAll || false);\n  const [edit, setEdit] = useState(false);\n  const [msg, setMsg] = useState(false);\n  useEffect(() => {\n    setSelected(selectAll);\n  }, [selectAll]);\n  useEffect(() => {\n    if (selected) {\n      setBatch((prev) => [...prev, refund._id]);\n    } else {\n      setBatch((prev) => prev.filter((item) => item !== refund._id));\n    }\n  }, [selected]);\n  return (\n    <>\n      <tr\n        className={`refund ${selected ? \"selected\" : \"\"}`}\n        onClick={() => history.push(`/account/myShop/refunds/${refund._id}`)}\n      >\n        {\n          //   <td className=\"checkContainer\">\n          //   <Checkbox\n          //     defaultValue={selected}\n          //     value={selected}\n          //     onChange={(e) => {\n          //       setSelected(e);\n          //     }}\n          //   />\n          // </td>\n        }\n        <td className=\"date\">\n          <Moment format=\"DD MMM YYYY, hh:mm a\">{refund.createdAt}</Moment>\n        </td>\n        <td>\n          <User user={refund.seller} />\n        </td>\n        <td>{refund.order?.products.reduce((a, c) => a + c.qty, 0)}</td>\n        <td>{refund.status}</td>\n        <td>₹{refund.order.total}</td>\n        {\n          //   <td>\n          //   {batch.length === 0 && (\n          //     <Actions icon={<Chev_down_svg />}>\n          //       <Link to=\"#\" className=\"edit\" onClick={() => setEdit(true)}>\n          //         Edit\n          //       </Link>\n          //       <Link\n          //         to=\"#\"\n          //         className=\"delete\"\n          //         onClick={() =>\n          //           Confirm({\n          //             label: \"Removing Product\",\n          //             question: \"You sure want to delete this product?\",\n          //             callback: removeProduct,\n          //           })\n          //         }\n          //       >\n          //         Delete\n          //       </Link>\n          //     </Actions>\n          //   )}\n          // </td>\n        }\n      </tr>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nexport const FullRefund = ({ history, match }) => {\n  const { userType } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [refund, setRefund] = useState(null);\n  const [order, setOrder] = useState(null);\n  const [milestoneForm, setMilestoneForm] = useState(false);\n  const [refundTill, setRefundTill] = useState(false);\n  const milestoneTimeout = useRef();\n  // const updateOrder = async (newData) => {\n  //   return fetch(\"/api/updateRefund\", {\n  //     method: \"PATCH\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(newData),\n  //   })\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       if (data.code === \"ok\") {\n  //         return data.order;\n  //       } else {\n  //         setMsg(\n  //           <>\n  //             <button onClick={() => setMsg(null)}>Okay</button>\n  //             <div>\n  //               <Err_svg />\n  //               <h4>Orders does not exist.</h4>\n  //             </div>\n  //           </>\n  //         );\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //       setMsg(\n  //         <>\n  //           <button onClick={() => setMsg(null)}>Okay</button>\n  //           <div>\n  //             <Err_svg />\n  //             <h4>Could not update order. Make sure you're online.</h4>\n  //           </div>\n  //         </>\n  //       );\n  //     });\n  // };\n  const updateRefund = async (newData) => {\n    return fetch(\"/api/updateRefund\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ...newData, _id: refund._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          return data.order;\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Refund request does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not update refund. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const acceptRefund = async () => {\n    fetch(\"/api/acceptRefund\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: refund._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setRefund((prev) => ({ ...prev, status: \"approved\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Refund request has been approved.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Refund request does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not accept refund request. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const declineRefund = async () => {\n    fetch(\"/api/declineRefund\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: refund._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setRefund((prev) => ({ ...prev, status: \"declined\" }));\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Refund request has been declined.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Refund request does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>\n                Could not decline refund request. Make sure you're online.\n              </h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    fetch(`/api/singleRefund?_id=${match.params._id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setOrder(data.refund.order);\n          setRefund(data.refund);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Refund does not exist.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get Refund. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, []);\n  useEffect(() => {\n    if (order?.refundable) {\n      let days = 0;\n      switch (order.refundable) {\n        case \"Upto 24 Hours After Delivery\":\n          days = 1;\n          break;\n        case \"Upto 7 Days After Delivery\":\n          days = 7;\n          break;\n        case \"Upto 15 Days After Delivery\":\n          days = 15;\n          break;\n        default:\n          return;\n      }\n      const refundTill = new Date(\n        new Date().getTime() + 1000 * 60 * 60 * 24 * days\n      );\n      if (new Date() < refundTill) {\n        setRefundTill(refundTill);\n      } else {\n        setRefundTill(null);\n      }\n    } else {\n      setRefundTill(null);\n    }\n  }, [refund]);\n  if (refund) {\n    return (\n      <>\n        <div className=\"actions\">\n          <Link\n            to={`/account/${\n              userType === \"seller\" ? \"myShop\" : \"myShopping\"\n            }/refunds`}\n            className=\"back\"\n          >\n            <Arrow_left_svg />\n            Back\n          </Link>\n          {refund.status === \"productSent\" && (\n            <button\n              onClick={() =>\n                Confirm({\n                  label: \"Refund Resolved\",\n                  question: \"You sure want to mark this refund resolved?\",\n                  callback: () => {\n                    updateRefund({ status: \"productRecieved\" }).then(\n                      (refund) => {\n                        setRefund((prev) => ({\n                          ...prev,\n                          status: \"productRecieved\",\n                        }));\n                      }\n                    );\n                  },\n                })\n              }\n            >\n              Mark as Recieved\n            </button>\n          )}\n          {refund.status === \"pending\" && (\n            <>\n              <button\n                onClick={() =>\n                  Confirm({\n                    label: \"Accepting Refund\",\n                    question: \"Do you accept this refund request?\",\n                    callback: acceptRefund,\n                  })\n                }\n              >\n                Accept\n              </button>\n              <button\n                onClick={() =>\n                  Confirm({\n                    label: \"Declining Refund\",\n                    question: \"Do you decline this refund?\",\n                    callback: declineRefund,\n                  })\n                }\n              >\n                Decline\n              </button>\n            </>\n          )}\n        </div>\n        <div className=\"singleOrder\">\n          <div className=\"summery\">\n            <h3>Summery</h3>\n            <ul>\n              <li className=\"devide\">\n                <label>Order</label>\n                <span />\n              </li>\n              <li>\n                <label>Seller</label>\n                <User user={order.seller} />\n              </li>\n              <li>\n                <label>Order ID</label>\n                {order._id}\n              </li>\n              <li>\n                <label>Status</label>\n                {order.status}\n              </li>\n              <li>\n                <label>Ordered at</label>\n                <Moment format=\"DD MMM YYYY, hh:mma\">{order.createdAt}</Moment>\n              </li>\n              <li>\n                <label>Delivered at</label>\n                <Moment format=\"DD MMM YYYY, hh:mm a\">\n                  {order.deliveredAt}\n                </Moment>\n              </li>\n              <li>\n                <label>Refundable</label>\n                {order.refundable || \"N/A\"}\n              </li>\n              <li>\n                <label>Proof of delivery</label>\n                {order.files?.length > 0 ? (\n                  <div className=\"thumbs\">\n                    <Media links={order.files} />\n                  </div>\n                ) : (\n                  <>No files added.</>\n                )}\n              </li>\n              {refundTill && (\n                <li>\n                  <label>Refund till</label>\n                  <Moment format=\"DD MMM YYYY, hh:mm a\">{refundTill}</Moment>\n                </li>\n              )}\n              <li></li>\n              <li className=\"devide\">\n                <label>Refund</label>\n                <span />\n              </li>\n              <li>\n                <label>Refund ID</label>\n                {refund._id}\n              </li>\n              <li>\n                <label>Status</label>\n                {refund.status}\n              </li>\n              <li>\n                <label>Submitted at</label>\n                <Moment format=\"DD MMM YYYY, hh:mma\">{refund.createdAt}</Moment>\n              </li>\n              <li>\n                <label>Issue</label>\n                {refund.issue}\n              </li>\n              <li>\n                <label>Descrption</label>\n                {refund.dscr}\n              </li>\n              <li>\n                <label>Images</label>\n                <div className=\"thumbs\">\n                  {refund.files.length ? (\n                    <Media links={refund.files} />\n                  ) : (\n                    <>No Images has been provided.</>\n                  )}\n                </div>\n              </li>\n              <li></li>\n              <li className=\"devide\">\n                <label>Delivery Address</label>\n                <span />\n              </li>\n              <>\n                {Object.entries(order.deliveryDetail).map(([key, value], i) =>\n                  key === \"deliveryTime\" ? (\n                    <li key={i}>\n                      <label>Delivery date</label>\n                      {order.deliveryDetail.deliveryTime ? (\n                        <Moment format=\"DD MMM, YYYY hh:mma\">\n                          {order.deliveryDetail.deliveryTime}\n                        </Moment>\n                      ) : (\n                        \"N/A\"\n                      )}\n                    </li>\n                  ) : (\n                    <li key={i}>\n                      <label>{key}</label>\n                      {value}\n                    </li>\n                  )\n                )}\n              </>\n            </ul>\n          </div>\n          <div className=\"products\">\n            <h3>Products</h3>\n            <ul>\n              {order.products.map(({ product, qty }, i) => (\n                <li key={i}>\n                  <Img src={product.images[0] || \"/open_box.png\"} />\n                  <div className=\"detail\">\n                    <p>{product.name}</p>\n                    <p className=\"qty\">QTY: {qty}</p>\n                  </div>\n                  <div className=\"price\">\n                    <span>\n                      {calculatePrice({ product, gst: true })} x {qty}\n                    </span>\n                    ₹{calculatePrice({ product, gst: true }) * qty}\n                  </div>\n                </li>\n              ))}\n            </ul>\n            <div className=\"total\">\n              <div className=\"data\">\n                <label>Total</label>₹\n                {order.products.reduce(\n                  (a, c) =>\n                    a +\n                    calculatePrice({ product: c.product, gst: true }) * c.qty,\n                  0\n                )}\n              </div>\n              <div className=\"data\">\n                <label>Shipping</label>\n                {order.shipping || \"N/A\"}\n              </div>\n              <div className=\"data\">\n                <label>Grand Total</label>₹\n                {order.products.reduce(\n                  (a, c) =>\n                    a +\n                    calculatePrice({ product: c.product, gst: true }) * c.qty,\n                  0\n                ) + (+order.shipping || 0)}\n              </div>\n            </div>\n          </div>\n          <div className=\"milestones\">\n            <h3>\n              Milestones\n              {(refund.status === \"approved\" ||\n                refund.status === \"productSent\" ||\n                refund.status === \"productRecieved\") && (\n                <button onClick={() => setMilestoneForm(true)}>\n                  Create Milestone\n                </button>\n              )}\n            </h3>\n            {refund.status === \"pending\" && (\n              <p>\n                You can create milestones once you accept the refund request.\n              </p>\n            )}\n            {refund.status === \"declined\" && (\n              <p>This refund request has been declined.</p>\n            )}\n            {!(refund.status === \"declined\" || refund.status === \"pending\") && (\n              <table cellSpacing={0} cellPadding={0}>\n                <thead>\n                  <tr>\n                    <td>Date</td>\n                    <td>Descrption</td>\n                    <td>Amount</td>\n                    <td>Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {refund.milestones.map((milestone) => (\n                    <tr\n                      key={milestone._id}\n                      onClick={() =>\n                        history.push(`/account/hold?q=${milestone._id}`)\n                      }\n                    >\n                      <td>\n                        <Moment format=\"DD MMM YYYY, hh:mma\">\n                          {milestone.createdAt}\n                        </Moment>\n                      </td>\n                      <td>{milestone.dscr}</td>\n                      <td>₹{milestone.amount}</td>\n                      <td>{milestone.status}</td>\n                    </tr>\n                  ))}\n                  {refund.milestones.length === 0 && (\n                    <tr className=\"placeholdert\">\n                      <td>Nothing yet.</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            )}\n          </div>\n          <section className=\"terms\">\n            <h3>Return Policy Terms</h3>\n            <ul>\n              {order.terms?.map((item, i) => (\n                <li key={i}>{item}</li>\n              ))}\n              {!order.terms?.length && (\n                <li>No terms has been set by the seller yet.</li>\n              )}\n            </ul>\n          </section>\n        </div>\n        <Modal\n          head={true}\n          label=\"Create Milestone\"\n          setOpen={setMilestoneForm}\n          className=\"milestoneRequest\"\n          open={milestoneForm}\n        >\n          <MilestoneForm\n            action=\"create\"\n            definedAmount={order.total}\n            client={refund.seller}\n            refund={refund._id}\n            onSuccess={(milestone) => {\n              setMilestoneForm(false);\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4 className=\"amount\">₹{milestone?.amount}</h4>\n                    <h4>Milestone has been created</h4>\n                  </div>\n                  <Link to=\"/account/hold\" onClick={() => setMsg(null)}>\n                    Check your Delivery pay Hold\n                  </Link>\n                </>\n              );\n              setRefund((prev) => ({\n                ...prev,\n                milestones: [...prev.milestones, milestone],\n              }));\n            }}\n          />\n        </Modal>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </>\n    );\n  }\n  return <>Loading</>;\n};\n\nexport default Refunds;\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  useContext,\n  lazy,\n} from \"react\";\nimport {\n  Succ_svg,\n  Err_svg,\n  Plus_svg,\n  X_svg,\n  Combobox,\n  Pagination,\n  Checkbox,\n  calculateDiscount,\n  calculatePrice,\n  Actions,\n  Chev_down_svg,\n  User,\n  Arrow_left_svg,\n  NumberInput,\n  Media,\n  UploadFiles,\n  FileInput,\n  Img,\n  Moment,\n  moment,\n} from \"../Elements\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { SiteContext } from \"../../SiteContext\";\nimport { Modal, Confirm } from \"../Modal\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { MilestoneForm } from \"../Account\";\nimport { toast } from \"react-toastify\";\n\nconst Coupons = ({ categories }) => {\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(20);\n  const [status, setStatus] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState({\n    column: \"createdAt\",\n    coupon: \"dsc\",\n  });\n  const [coupons, setCoupons] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [batch, setBatch] = useState([]);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    fetch(\n      `/api/getCoupons?${new URLSearchParams({\n        ...(search && { q: search }),\n        page,\n        perPage,\n        sort: sort.column,\n        order: sort.order,\n        ...(status && { status }),\n      })}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setCoupons(data.coupons);\n          setTotal(data.total);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get coupons.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [status, search, page, perPage]);\n  useEffect(() => {\n    if (selectAll) {\n    } else {\n      setBatch([]);\n    }\n  }, [selectAll]);\n  useEffect(() => {\n    if (batch.length === 0) {\n      setSelectAll(false);\n    }\n  }, [batch]);\n  return (\n    <>\n      <div className=\"benner\">\n        <p>Order Management</p>\n      </div>\n      <div className=\"filters\">\n        <section>\n          <label>Total:</label>\n          {total}\n        </section>\n        <section>\n          <label>Per Page:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"20\", value: 20 },\n              { label: \"30\", value: 30 },\n              { label: \"50\", value: 50 },\n            ]}\n            onChange={(e) => setPerPage(e.value)}\n          />\n        </section>\n        <section className=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 23 23\"\n          >\n            <path\n              id=\"Icon_ionic-ios-search\"\n              data-name=\"Icon ionic-ios-search\"\n              d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n              transform=\"translate(-4.5 -4.493)\"\n              fill=\"#707070\"\n              opacity=\"0.74\"\n            />\n          </svg>\n          <input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search for Buyer\"\n          />\n          {search && (\n            <button onClick={() => setSearch(\"\")}>\n              <X_svg />\n            </button>\n          )}\n        </section>\n        <section className=\"category\">\n          <label>Status:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"All\", value: \"\" },\n              { label: \"Pending\", value: \"draft\" },\n              { label: \"Active\", value: \"active\" },\n              { label: \"Inactive\", value: \"inactive\" },\n            ]}\n            onChange={(e) => setStatus(e.value)}\n          />\n        </section>\n      </div>\n      {batch.length > 0 && (\n        <div className=\"batchAction\">\n          <button onClick={() => console.log(\"batch delete\")}>Delete</button>\n        </div>\n      )}\n      <table className=\"table coupons\">\n        <thead>\n          <tr>\n            {\n              //   <th className=\"checkContainer\">\n              //   <Checkbox\n              //     value={selectAll}\n              //     defaultValue={selectAll}\n              //     onChange={(e) => setSelectAll(e)}\n              //   />\n              // </th>\n            }\n            <th className=\"date\">Date</th>\n            <th>Title</th>\n            <th>Status</th>\n            <th>Code</th>\n            <th>Discount</th>\n            <th>Threshold</th>\n            <th>Validity</th>\n            <th>Accept</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {coupons.map((coupon, i) => (\n            <SingleCoupon\n              key={i}\n              coupon={coupon}\n              setCoupons={setCoupons}\n              selectAll={selectAll}\n              setBatch={setBatch}\n              batch={batch}\n            />\n          ))}\n          {coupons.length === 0 && (\n            <tr className=\"placeholder\">\n              <td>No Campaign yet.</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <Pagination\n        total={total}\n        btns={5}\n        currentPage={page}\n        perPage={perPage}\n        setPage={setPage}\n      />\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nconst SingleCoupon = ({ coupon, setCoupons, selectAll, setBatch, batch }) => {\n  const actionsRef = useRef();\n  const checkRef = useRef();\n  const history = useHistory();\n  const { user } = useContext(SiteContext);\n  const [selected, setSelected] = useState(selectAll || false);\n  const [edit, setEdit] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [couponDetail, setCouponDetail] = useState(false);\n  const declineCoupon = (_id) => {\n    fetch(\"/api/declineCoupon\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setCoupons((prev) =>\n            prev.map((item) => {\n              if (item._id === _id) {\n                return {\n                  ...item,\n                  accept: false,\n                };\n              }\n              return item;\n            })\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>\n                  Coupon code declined. Buyers can no longer apply this coupon\n                  code on your shop.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not decline Coupon code. please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not decline Coupon code. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const acceptCoupon = (_id) => {\n    fetch(\"/api/acceptCoupon\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setCoupons((prev) =>\n            prev.map((item) => {\n              if (item._id === _id) {\n                return {\n                  ...item,\n                  accept: true,\n                };\n              }\n              return item;\n            })\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>\n                  Coupon code accepted. Now Buyers can apply this coupon code on\n                  your shop.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not accept Coupon code. please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not accept Coupon code. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    setSelected(selectAll);\n  }, [selectAll]);\n  useEffect(() => {\n    if (selected) {\n      setBatch((prev) => [...prev, coupon._id]);\n    } else {\n      setBatch((prev) => prev.filter((item) => item !== coupon._id));\n    }\n  }, [selected]);\n  return (\n    <>\n      <tr\n        className={`coupon ${selected ? \"selected\" : \"\"}`}\n        onClick={(e) => {\n          if (\n            e.nativeEvent.path.includes(actionsRef.current) ||\n            e.nativeEvent.path.includes(checkRef.current) ||\n            batch.length > 0\n          ) {\n          } else {\n            setCouponDetail(coupon);\n          }\n        }}\n      >\n        {\n          //   <td className=\"checkContainer\" ref={checkRef}>\n          //   <Checkbox\n          //     defaultValue={selected}\n          //     value={selected}\n          //     onChange={(e) => {\n          //       setSelected(e);\n          //     }}\n          //   />\n          // </td>\n        }\n        <td className=\"date\">\n          <Moment format=\"DD MMM YY\">{coupon.createdAt}</Moment>\n        </td>\n        <td>{coupon.title}</td>\n        <td>{coupon.status}</td>\n        <td>{coupon.code}</td>\n        <td className=\"discount\">\n          {coupon.type === \"percent\" ? (\n            <>\n              {coupon.amount}%<span>Up to ₹{coupon.maxDiscount}</span>\n            </>\n          ) : (\n            <>₹{coupon.amount}</>\n          )}\n        </td>\n        <td>₹{coupon.threshold}</td>\n        <td>\n          <Moment format=\"DD MMM YY\">{coupon.date?.from}</Moment>-\n          <Moment format=\"DD MMM YY\">{coupon.date?.to}</Moment>\n        </td>\n        <td>{coupon.accept ? \"Yes\" : \"No\"}</td>\n        <td ref={actionsRef}>\n          {batch.length === 0 && (\n            <Actions icon={<Chev_down_svg />}>\n              <button onClick={() => setCouponDetail(coupon)}>\n                View Detail\n              </button>\n              {coupon.accept && (\n                <button\n                  onClick={() =>\n                    Confirm({\n                      label: \"Accepting Coupon code\",\n                      question:\n                        \"You sure want to take part in this campaign and accept this coupon code?\",\n                      callback: () => declineCoupon(coupon._id),\n                    })\n                  }\n                >\n                  Decline\n                </button>\n              )}\n              {new Date(coupon.date?.to) >=\n                new Date(moment({ time: new Date(), format: \"YYYY-MM-DD\" })) &&\n                !coupon.accept && (\n                  <button\n                    onClick={() =>\n                      Confirm({\n                        label: \"Accepting Coupon code\",\n                        question:\n                          \"You sure want to take part in this campaign and accept this coupon code?\",\n                        callback: () => acceptCoupon(coupon._id),\n                      })\n                    }\n                  >\n                    Accept\n                  </button>\n                )}\n            </Actions>\n          )}\n        </td>\n      </tr>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n      <Modal\n        open={couponDetail}\n        head={true}\n        label=\"Coupon Detail\"\n        setOpen={setCouponDetail}\n        className=\"couponDetail\"\n      >\n        <div className=\"content\">\n          <section>\n            <label>Campaign Title</label>\n            <p>{couponDetail?.title}</p>\n          </section>\n          <section>\n            <label>Campaign Description</label>\n            <p>{couponDetail?.dscr}</p>\n          </section>\n          <section>\n            <label>Coupon Code</label>\n            <p>{couponDetail?.code}</p>\n          </section>\n          <section>\n            <label>Coupon code status</label>\n            <p>{couponDetail?.status}</p>\n          </section>\n          <section>\n            <label>Discount</label>\n            <p>\n              {couponDetail?.type === \"percent\" ? (\n                <>\n                  {couponDetail?.amount}% up to ₹{couponDetail.maxDiscount}\n                </>\n              ) : (\n                <>₹{couponDetail?.amount}</>\n              )}\n            </p>\n          </section>\n          <section>\n            <label>Validity</label>\n            <p>\n              <Moment format=\"DD MMM YY\">{couponDetail.date?.from}</Moment>-\n              <Moment format=\"DD MMM YY\">{couponDetail.date?.to}</Moment>\n            </p>\n          </section>\n          <section>\n            <label>Accept</label>\n            <p>{couponDetail.accept ? \"Yes\" : \"No\"}</p>\n          </section>\n          {couponDetail.termsUrl && (\n            <section className=\"termsUrl\">\n              <label>Terms</label>\n              <Link to={couponDetail.termsUrl} target=\"_blank\">\n                Terms of the Campaign\n              </Link>\n            </section>\n          )}\n          {couponDetail.terms?.length ? (\n            <section>\n              <label>Terms</label>\n              <ul>\n                {couponDetail.terms.map((term, i) => (\n                  <li key={i}>{term}</li>\n                ))}\n              </ul>\n            </section>\n          ) : null}\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default Coupons;\n","import { useEffect, useState, useContext } from \"react\";\nimport { SiteContext } from \"../../SiteContext\";\nimport { updateProfileInfo } from \"../Profile\";\nimport { Modal } from \"../Modal\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Chev_down_svg,\n  Checkbox,\n  Combobox,\n  Step_fill,\n  Img,\n  LS,\n  Succ_svg,\n  External_link_icon,\n  Moment,\n} from \"../Elements\";\nrequire(\"../styles/fbMarketplace.scss\");\n\nexport const Step = ({\n  label,\n  defaultStatus,\n  children,\n  disabled,\n  className,\n  data,\n  step,\n}) => {\n  const [open, setOpen] = useState(data ? !data : null);\n  useEffect(() => {\n    setOpen(defaultStatus);\n  }, [defaultStatus]);\n  return (\n    <div\n      className={`step ${open || defaultStatus ? \"open\" : \"\"} ${\n        disabled ? \"disabled\" : \"\"\n      } ${className || \"\"}`}\n    >\n      <div\n        className=\"head\"\n        onClick={() => {\n          if (!defaultStatus) {\n            setOpen(!open);\n          }\n        }}\n      >\n        <Chev_down_svg className=\"chev\" /> {label}\n        <div className=\"status\">{data && <Step_fill />}</div>\n      </div>\n      {(open || defaultStatus) && <div className=\"body\">{children}</div>}\n    </div>\n  );\n};\n\nconst Marketplace = () => {\n  const [msg, setMsg] = useState(null);\n  const { user, setUser } = useContext(SiteContext);\n  const { FB } = window;\n  const [step, setStep] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    console.log(user.fbMarket);\n    if (!user.fbMarket?.user?.id) {\n      setStep(\"account\");\n    } else if (!user.fbMarket?.businessManager?.id) {\n      setStep(\"businessManager\");\n    } else if (!user.fbMarket?.facebookPage?.id) {\n      setStep(\"fbPage\");\n    } else if (!user.fbMarket?.instagramAccount?.id) {\n      setStep(\"instagramAccount\");\n    }\n    // else if (!user.fbMarket?.dataSharing) {\n    // setStep(\"dataSharing\");\n    // }\n    else if (!user.fbMarket?.commerceAccount?.catalog?.id) {\n      setStep(\"commerceAccount\");\n    } else if (!user.fbMarket?.userAgreement) {\n      setStep(\"terms\");\n    }\n  }, [user]);\n  return (\n    <div className=\"fbMarket\">\n      <h1>Facebook marketplace</h1>\n      <div className=\"setup\">\n        <Step\n          data={user.fbMarket?.user?.id ? user.fbMarket.user : null}\n          defaultStatus={step === \"account\"}\n          step={step}\n          label=\"Facebook Account\"\n        >\n          <p className=\"note\">\n            Delivery Pay uses your personal Facebook account to access your\n            business accounts.\n          </p>\n          {\n            //   user.fbMarket?.user?.id && (\n            //   <p>Now you can log into Delivery Pay using this account.</p>\n            // )\n          }\n          <div className=\"profile\">\n            <div className=\"user\">\n              {user.fbMarket?.user?.id ? (\n                <>\n                  <Img\n                    key=\"img\"\n                    src={user.fbMarket.user.profileImg || \"/profile-user.jpg\"}\n                  />\n                  <p>{user.fbMarket.user.name}</p>\n                </>\n              ) : (\n                <>\n                  <Img key=\"placeholder\" src=\"/profile-user.jpg\" />\n                  <p>Connect your Facebook account to get started</p>\n                </>\n              )}\n            </div>\n            {user.fbMarket?.user?.id ? (\n              <button\n                className=\"btn\"\n                onClick={() => {\n                  FB.logout((res) => {\n                    console.log(res);\n                  });\n                  LS.remove(\"facebook_user_accessToken\");\n                  LS.remove(\"facebook_page_accessToken\");\n                  updateProfileInfo({\n                    \"fbMarket.user\": {},\n                    \"fbMarket.businessManager\": {},\n                    \"fbMarket.facebookPage\": {},\n                    \"fbMarket.dataSharing\": null,\n                    \"fbMarket.instagramAccount\": {},\n                    \"fbMarket.commerceAccount\": {},\n                    \"fbMarket.userAgreement\": false,\n                  }).then(({ user: newUser }) => {\n                    setUser((prev) => ({\n                      ...prev,\n                      fbMarket: newUser.fbMarket,\n                    }));\n                  });\n                }}\n              >\n                Disconnect\n              </button>\n            ) : (\n              <button\n                className=\"btn\"\n                onClick={() => {\n                  FB.login((res) => {\n                    LS.set(\n                      \"facebook_user_accessToken\",\n                      res.authResponse?.accessToken\n                    );\n                    const accessToken = res.authResponse.accessToken;\n                    fetch(\"/api/updateFBMarketUser\", {\n                      method: \"PUT\",\n                      headers: { \"Content-Type\": \"application/json\" },\n                      body: JSON.stringify({\n                        accessToken,\n                      }),\n                    })\n                      .then((res) => res.json())\n                      .then((data) => {\n                        if (data.code === \"ok\") {\n                          console.log(\"long_lived_token saved\");\n                          // LS.set(\n                          //   \"facebook_user_accessToken\",\n                          //   data.long_lived_token\n                          // );\n                        }\n                      });\n                    FB.api(\n                      \"/me\",\n                      \"GET\",\n                      { fields: \"name,picture.type(large){url}\" },\n                      (res) => {\n                        console.log(res);\n                        if (res.id) {\n                          updateProfileInfo({\n                            \"fbMarket.user.name\": res.name,\n                            \"fbMarket.user.id\": res.id,\n                            \"fbMarket.user.profileImg\": res.picture.data.url,\n                          }).then(({ user: newUser }) => {\n                            setUser((prev) => ({\n                              ...prev,\n                              fbMarket: newUser.fbMarket,\n                            }));\n                          });\n                        }\n                      }\n                    );\n                  });\n                }}\n              >\n                Connect Account\n              </button>\n            )}\n          </div>\n        </Step>\n        <Step\n          disabled={!user.fbMarket?.user?.id}\n          data={\n            user.fbMarket?.businessManager?.id\n              ? user.fbMarket.businessManager\n              : null\n          }\n          defaultStatus={step === \"businessManager\"}\n          label=\"Business Manager\"\n          className=\"businessManager\"\n        >\n          <BusinessManager setLoading={setLoading} />\n        </Step>\n        <Step\n          data={\n            user.fbMarket?.facebookPage?.id ? user.fbMarket.facebookPage : null\n          }\n          defaultStatus={step === \"fbPage\"}\n          label=\"Facebook Page\"\n          className=\"page\"\n          disabled={!user.fbMarket?.businessManager?.id}\n        >\n          <FbPage />\n        </Step>\n        <Step\n          data={\n            user.fbMarket?.instagramAccount?.id\n              ? user.fbMarket.instagramAccount\n              : null\n          }\n          disabled={!user.fbMarket?.facebookPage?.id}\n          label=\"Instagram Account\"\n          defaultStatus={step === \"instagramAccount\"}\n          className=\"instagramAccount\"\n        >\n          <InstagramAccount setStep={setStep} />\n        </Step>\n        {\n          //   <Step\n          //   data={user.fbMarket?.dataSharing}\n          //   disabled={!user.fbMarket?.facebookPage?.id}\n          //   label=\"Data Sharing\"\n          //   defaultStatus={step === \"dataSharing\"}\n          //   className=\"dataSharing\"\n          // >\n          //   <DataSharing setStep={setStep} />\n          // </Step>\n        }\n        <Step\n          data={\n            user.fbMarket?.commerceAccount?.catalog?.id\n              ? user.fbMarket.commerceAccount\n              : null\n          }\n          disabled={!user.fbMarket?.facebookPage?.id}\n          label=\"Facebook Commerce Account\"\n          defaultStatus={step === \"commerceAccount\"}\n          className=\"commerceAccount\"\n        >\n          <CommerceAccount setStep={setStep} />\n        </Step>\n        <Step\n          disabled={!user.fbMarket?.commerceAccount?.catalog?.id}\n          data={user.fbMarket?.userAgreement || null}\n          defaultStatus={step === \"terms\"}\n          label=\"Terms and Conditions\"\n        >\n          <p>\n            By proceeding, you accept{\" \"}\n            <a\n              target=\"_blank\"\n              href=\"https://www.facebook.com/legal/commerce_product_merchant_agreement\"\n            >\n              Facebook Commerce Terms <External_link_icon />\n            </a>\n            .\n          </p>\n          {!user.fbMarket?.userAgreement && (\n            <button\n              className=\"btn\"\n              onClick={() => {\n                updateProfileInfo({\n                  \"fbMarket.userAgreement\": true,\n                }).then(({ user: newUser }) => {\n                  setUser((prev) => ({ ...prev, fbMarket: newUser.fbMarket }));\n                  setStep(\"\");\n                  setMsg(\n                    <>\n                      <button onClick={() => setMsg(null)}>Okay</button>\n                      <div>\n                        <Succ_svg />\n                        <h4>\n                          Facebook marketplace has been setup successfully. Now\n                          you can add products to facebook marketplace directly\n                          from Delivery Pay.\n                        </h4>\n                        <Link to=\"/account/myShop/products\">\n                          Add your first product\n                        </Link>\n                      </div>\n                    </>\n                  );\n                });\n              }}\n            >\n              Finish setup\n            </button>\n          )}\n        </Step>\n      </div>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst BusinessManager = ({ setLoading }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const { FB } = window;\n  const [businessManagers, setBusinessManagers] = useState([]);\n  const [err, setErr] = useState(null);\n  useEffect(() => {\n    if (!user.fbMarket?.business?.id) {\n      FB.api(\n        \"/me\",\n        \"GET\",\n        {\n          fields: \"businesses{picture{url},name,id,created_time}\",\n          access_token: LS.get(\"facebook_user_accessToken\"),\n        },\n        function (res) {\n          if (res.businesses) {\n            setBusinessManagers(res.businesses.data);\n          }\n        }\n      );\n    }\n  }, [user]);\n  return (\n    <>\n      {user.fbMarket?.businessManager?.id ? (\n        <>\n          <p className=\"note\">\n            The Business Manager that owns all your Facebook business accounts.\n          </p>\n          <ul>\n            <li>\n              <div className=\"profile\">\n                <Img src={user.fbMarket.businessManager.profileImg} />\n                <div className=\"detail\">\n                  <a\n                    href={`https://business.facebook.com/latest/home?nav_ref=bm_home_redirect&business_id=${user.fbMarket.businessManager.id}`}\n                  >\n                    {user.fbMarket.businessManager.name} <External_link_icon />\n                  </a>\n                  <span>ID: {user.fbMarket.businessManager.id}</span>\n                  <span>\n                    Created at:{\" \"}\n                    <Moment format=\"DD MMM YYYY, hh:mm a\">\n                      {user.fbMarket.businessManager.created_time}\n                    </Moment>\n                  </span>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  updateProfileInfo({\n                    \"fbMarket.businessManager\": {},\n                    \"fbMarket.facebookPage\": {},\n                    \"fbMarket.commerceAccount\": {},\n                    \"fbMarket.userAgreement\": false,\n                  }).then(({ user: newUser }) => {\n                    setUser((prev) => ({\n                      ...prev,\n                      fbMarket: newUser.fbMarket,\n                    }));\n                  });\n                }}\n                className=\"btn\"\n              >\n                Disconnect\n              </button>\n            </li>\n          </ul>\n        </>\n      ) : (\n        <>\n          <p className=\"note\">\n            Connect the Business Manager you use to manage your business Page,\n            accounts, and product catalog. You can only connect a Business\n            Manager you have admin access to.\n          </p>\n          <p className=\"note\">\n            After you connect, you may receive a verification email from\n            Facebook. If so, you’ll need to confirm your business email address\n            before proceeding.\n          </p>\n          {err && <div className=\"err\">{err}</div>}\n          <ul>\n            {businessManagers.map((item, i) => (\n              <li key={i}>\n                <div className=\"profile\">\n                  <Img src={item.picture.data.url} />\n                  <div className=\"detail\">\n                    <a\n                      href={`https://business.facebook.com/latest/home?nav_ref=bm_home_redirect&business_id=${item.business_id}&asset_id=${item.asset_id}`}\n                    >\n                      {item.name} <External_link_icon />\n                    </a>\n                    <span>ID: {item.id}</span>\n                    <span>\n                      Created at:{\" \"}\n                      <Moment format=\"DD MMM YYYY, hh:mm a\">\n                        {item.created_time}\n                      </Moment>\n                    </span>\n                  </div>\n                </div>\n                <button\n                  className=\"btn\"\n                  onClick={() => {\n                    updateProfileInfo({\n                      \"fbMarket.businessManager.id\": item.id,\n                      \"fbMarket.businessManager.name\": item.name,\n                      \"fbMarket.businessManager.createdAt\": item.created_time,\n                      \"fbMarket.businessManager.profileImg\":\n                        item.picture.data.url,\n                    }).then(({ user: newUser }) => {\n                      setUser((prev) => ({\n                        ...prev,\n                        fbMarket: newUser.fbMarket,\n                      }));\n                    });\n                  }}\n                >\n                  Connect\n                </button>\n              </li>\n            ))}\n            <li>\n              <div className=\"profile\">\n                <Img src=\"/profile-user.jpg\" />\n                <p>Create Business Manager</p>\n              </div>\n              <button\n                className=\"btn\"\n                onClick={() => {\n                  setLoading(true);\n                  console.log(`/${user.fbMarket?.user?.id}/businesses`);\n                  FB.api(\n                    `/${user.fbMarket?.user?.id}/businesses`,\n                    \"POST\",\n                    {\n                      name: \"Delivery Pay Business Manager\",\n                      vertical: \"ECOMMERCE\",\n                    },\n                    function (res) {\n                      setLoading(false);\n                      console.log(res);\n                      if (res.id) {\n                        FB.api(\n                          \"/me\",\n                          \"GET\",\n                          {\n                            fields:\n                              \"businesses{picture{url},name,id,created_time}\",\n                          },\n                          function (res) {\n                            if (res.businesses) {\n                              setBusinessManagers(res.businesses.data);\n                            }\n                          }\n                        );\n                      }\n                      if (res.error) {\n                        if (res.error.code === 1) {\n                          setErr(\n                            <>\n                              You have reached maximum number of business\n                              manager one user can have. Use one of existing\n                              business manager instead of creating a new one.\n                            </>\n                          );\n                        } else if (res.error.code === 3947) {\n                          setErr(\n                            <>\n                              You already have a Business Manager with the same\n                              name. Select \"Delivery Pay Business Manager\"\n                              instead of creating a new one. or Choose another.\n                            </>\n                          );\n                        } else {\n                          setErr(\n                            <>{res.error.error_user_msg || res.error.message}</>\n                          );\n                        }\n                      }\n                    }\n                  );\n                }}\n              >\n                Create new\n              </button>\n            </li>\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\nconst FbPage = () => {\n  const { FB } = window;\n  const { user, setUser } = useContext(SiteContext);\n  const [fbPages, setFbPages] = useState([]);\n  const [createNew, setCreateNew] = useState(false);\n  useEffect(() => {\n    if (!user.fbMarket?.business?.id) {\n      FB.api(\n        \"/me/accounts\",\n        \"GET\",\n        {\n          fields: \"picture{url},access_token,name,category,business\",\n          access_token: LS.get(\"facebook_user_accessToken\"),\n        },\n        function (res) {\n          console.log(\"facebook pages:\", res);\n          if (res.data) {\n            setFbPages(res.data);\n          }\n        }\n      );\n    }\n  }, [user]);\n  return (\n    <>\n      {user.fbMarket?.facebookPage?.id ? (\n        <>\n          <p className=\"note\">\n            The Facebook business Page that you use to sell your products or\n            post ads.\n          </p>\n          <ul>\n            <li>\n              <div className=\"profile\">\n                <Img src={user.fbMarket.facebookPage.profileImg} />\n                <div className=\"detail\">\n                  <a\n                    href={`https://business.facebook.com/latest/home?nav_ref=bm_home_redirect&business_id=${user.fbMarket.businessManager.id}`}\n                  >\n                    {user.fbMarket.facebookPage.name} <External_link_icon />\n                  </a>\n                  <span>Category: {user.fbMarket.facebookPage.category}</span>\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  updateProfileInfo({\n                    \"fbMarket.facebookPage\": {},\n                    \"fbMarket.commerceAccount\": {},\n                    \"fbMarket.userAgreement\": false,\n                  }).then(({ user: newUser }) => {\n                    console.log(newUser.fbMarket);\n                    setUser((prev) => ({\n                      ...prev,\n                      fbMarket: newUser.fbMarket,\n                    }));\n                  });\n                }}\n                className=\"btn\"\n              >\n                Disconnect\n              </button>\n            </li>\n          </ul>\n        </>\n      ) : (\n        <>\n          <p className=\"note\">\n            Connect the business Page you use to sell products or post ads. You\n            can only connect a Page you have admin access to.\n          </p>\n          <ul>\n            {fbPages.map((item, i) => (\n              <li key={i}>\n                <div className=\"profile\">\n                  <Img src={item.picture.data.url} />\n                  <div className=\"detail\">\n                    <a\n                      href={`https://business.facebook.com/latest/home?nav_ref=bm_home_redirect&business_id=${item.business_id}&asset_id=${item.asset_id}`}\n                    >\n                      {item.name} <External_link_icon />\n                    </a>\n                    <span>{item.category}</span>\n                  </div>\n                </div>\n                <button\n                  className=\"btn\"\n                  onClick={() => {\n                    updateProfileInfo({\n                      \"fbMarket.facebookPage.id\": item.id,\n                      \"fbMarket.facebookPage.name\": item.name,\n                      \"fbMarket.facebookPage.access_token\": item.access_token,\n                      \"fbMarket.facebookPage.profileImg\": item.picture.data.url,\n                      \"fbMarket.facebookPage.category\": item.category,\n                    }).then(({ user: newUser }) => {\n                      setUser((prev) => ({\n                        ...prev,\n                        fbMarket: newUser.fbMarket,\n                      }));\n                    });\n                  }}\n                >\n                  Connect\n                </button>\n              </li>\n            ))}\n            <li>\n              <div className=\"profile\">\n                <Img src=\"/profile-user.jpg\" />\n                <p>Create Page</p>\n              </div>\n              <button className=\"btn\" onClick={() => setCreateNew(true)}>\n                Create new\n              </button>\n            </li>\n          </ul>\n        </>\n      )}\n      <Modal\n        head={true}\n        label=\"Create a new Facebook business Page\"\n        open={createNew}\n        setOpen={() => {\n          setCreateNew(false);\n          FB.api(\n            \"/me/accounts\",\n            \"GET\",\n            {\n              fields: \"picture{url},access_token,name,category,business\",\n              access_token: LS.get(\"facebook_user_accessToken\"),\n            },\n            function (res) {\n              console.log(\"facebook pages:\", res);\n              if (res.data) {\n                setFbPages(res.data);\n              }\n            }\n          );\n        }}\n        className=\"createNewPage\"\n      >\n        <div className=\"content\">\n          <p>\n            You'll be redirected to Facebook where you can create a new business\n            Page. All you need for now are basic details such as:\n          </p>\n          <ul>\n            <li>Business Page name</li>\n            <li>Business Page category</li>\n            <li>Profile Photo</li>\n            <li>Cover photo</li>\n            <li>Store description</li>\n          </ul>\n          <p>\n            As soon as you add these details, return to Delivery Pay and finish\n            setup. You can always update your Page later.\n          </p>\n          <a\n            target=\"_blank\"\n            href=\"https://www.facebook.com/pages/create/?ref_type=hc\"\n          >\n            <External_link_icon /> Go to Facebook\n          </a>\n        </div>\n      </Modal>\n    </>\n  );\n};\nconst InstagramAccount = ({ setStep }) => {\n  const { FB } = window;\n  const { user, setUser } = useContext(SiteContext);\n  const [instas, setInstas] = useState([]);\n  const [createNew, setCreateNew] = useState(false);\n  const updateInstaAccounts = () => {\n    if (!user.fbMarket?.instagramAccount?.id) {\n      FB.api(\n        `/${user.fbMarket.facebookPage.id}/instagram_accounts`,\n        \"GET\",\n        {\n          fields: \"profile_pic,username\",\n          access_token: user.fbMarket.facebookPage?.access_token,\n        },\n        function (res) {\n          console.log(\"instagram accounts:\", res);\n          if (res.data) {\n            setInstas(res.data);\n          }\n        }\n      );\n    }\n  };\n  useEffect(() => {\n    updateInstaAccounts();\n  }, [user]);\n  return (\n    <>\n      {user.fbMarket?.instagramAccount?.id ? (\n        <>\n          <p className=\"note\">\n            Post on Instagram directly from the product dashboard.\n          </p>\n          <ul>\n            <li>\n              <div className=\"profile\">\n                <Img src={user.fbMarket.instagramAccount?.profile_pic} />\n                <div className=\"detail\">\n                  {user.fbMarket.instagramAccount.username}\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  updateProfileInfo({\n                    \"fbMarket.instagramAccount\": {},\n                  }).then(({ user: newUser }) => {\n                    console.log(newUser.fbMarket);\n                    setUser((prev) => ({\n                      ...prev,\n                      fbMarket: newUser.fbMarket,\n                    }));\n                  });\n                }}\n                className=\"btn\"\n              >\n                Disconnect\n              </button>\n            </li>\n          </ul>\n        </>\n      ) : (\n        <>\n          <p className=\"note\">\n            Connect Instagram account to post about your product directly from\n            Delivery Pay product dashboard.\n          </p>\n          <ul>\n            {instas.map((item, i) => (\n              <li key={i}>\n                <div className=\"profile\">\n                  <Img src={item.profile_pic} />\n                  <div className=\"detail\">{item.username}</div>\n                </div>\n                <button\n                  className=\"btn\"\n                  onClick={() => {\n                    updateProfileInfo({\n                      \"fbMarket.instagramAccount.id\": item.id,\n                      \"fbMarket.instagramAccount.username\": item.username,\n                      \"fbMarket.instagramAccount.profile_pic\": item.profile_pic,\n                    }).then(({ user: newUser }) => {\n                      setUser((prev) => ({\n                        ...prev,\n                        fbMarket: newUser.fbMarket,\n                      }));\n                    });\n                  }}\n                >\n                  Connect\n                </button>\n              </li>\n            ))}\n            <li>\n              <div className=\"profile\">\n                <Img src=\"/profile-user.jpg\" />\n                <p>Create Page</p>\n              </div>\n              <button className=\"btn\" onClick={() => setCreateNew(true)}>\n                Create new\n              </button>\n            </li>\n          </ul>\n          <div className=\"btns\">\n            <button\n              className=\"btn_clear\"\n              onClick={() => {\n                setStep(\"commerceAccount\");\n              }}\n            >\n              Skip\n            </button>\n          </div>\n        </>\n      )}\n      <Modal\n        head={true}\n        label=\"Create a new Facebook business Page\"\n        open={createNew}\n        setOpen={() => {\n          setCreateNew(false);\n          updateInstaAccounts();\n        }}\n        className=\"createNewPage\"\n      >\n        <div className=\"content\">\n          <p>\n            You'll be redirected to Facebook where you can connect your\n            Instagram account with {user.fbMarket?.facebookPage?.name}.\n          </p>\n          <p>\n            As soon as you add these details, return to Delivery Pay and finish\n            setup. You can always update your Instagram account later.\n          </p>\n          <a\n            target=\"_blank\"\n            href={`https://www.facebook.com/${user.fbMarket?.facebookPage?.id}/settings/?tab=instagram_management`}\n          >\n            <External_link_icon /> Go to Facebook\n          </a>\n        </div>\n      </Modal>\n    </>\n  );\n};\nconst DataSharing = ({ setStep }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [shareData, setShareData] = useState(\n    !!user.fbMarket?.dataSharing || false\n  );\n  const [dataSharingLavel, setDataSharingLavel] = useState(\n    user.fbMarket?.dataSharing || \"\"\n  );\n  const [pixels, setPixels] = useState([]);\n  return (\n    <>\n      <p className=\"note\">\n        Facebook uses your customer data to target products, page posts, and ads\n        to your customers. To get started, first enable data sharing, and then\n        choose your level.\n      </p>\n      <section className=\"checkWrapper\">\n        <Checkbox\n          value={shareData}\n          onChange={(e) => {\n            setShareData(e);\n          }}\n        />\n        <label>ENABLE CUSTOMER DATA SHARING</label>\n      </section>\n      {shareData && (\n        <>\n          <div className=\"dataSharingLavel\">\n            <p>Choose lavel</p>\n            <Combobox\n              defaultValue={dataSharingLavel}\n              required={true}\n              options={[\n                { label: \"Standard\", value: \"standard\" },\n                { label: \"Enhanced\", value: \"enhanced\" },\n                { label: \"Maximum\", value: \"maximum\" },\n              ]}\n              onChange={(e) => setDataSharingLavel(e.value)}\n            />\n            {dataSharingLavel === \"standard\" && (\n              <p>\n                Standard uses <strong>Facebook Pixel</strong>, a third-party\n                cookie that collects and shares customers’ browsing behavior on\n                your online store. Browser-based ad blockers can prevent the\n                pixel from collecting data.\n              </p>\n            )}\n            {dataSharingLavel === \"enhanced\" && (\n              <p>\n                Enhanced uses <strong>Advanced Matching</strong>, which shares\n                personal information about your customers, including name,\n                location, and email. This pixel also shares customer browsing\n                behavior on your online store. Browser-based ad blockers can\n                prevent the pixel from collecting data.\n              </p>\n            )}\n            {dataSharingLavel === \"maximum\" && (\n              <p>\n                Maximum combines all data-sharing options to reach the highest\n                amount of customers. It uses <strong>Conversions API</strong>,\n                which shares data directly from Delivery Pay’s servers to\n                Facebook. This means the data can’t be blocked by ad blockers.\n              </p>\n            )}\n          </div>\n          <div className=\"warning\">\n            <svg viewBox=\"0 0 20 20\" focusable=\"false\" aria-hidden=\"true\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10 0C4.486 0 0 4.486 0 10s4.486 10 10 10 10-4.486 10-10S15.514 0 10 0zM9 6a1 1 0 1 1 2 0v4a1 1 0 1 1-2 0V6zm1 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"\n              ></path>\n            </svg>\n            <p className=\"dscr\">\n              This option shares <strong>personal customer details</strong>.\n              Ensure your privacy policy reflects your data-sharing settings.\n            </p>\n          </div>\n          {\n            //   <div>\n            //   <div className=\"head\">\n            //     <Chev_down_svg />\n            //     <p>View Detail</p>\n            //   </div>\n            // </div>\n          }\n          <div className=\"pixel\">\n            <p>BEHAVIOUR WILL BE TRACKED WITH THIS PIXEL</p>\n            <ul>\n              {pixels.map((item, i) => (\n                <li key={i}>\n                  {i}\n                  <div className=\"facebookPage\">\n                    <div className=\"thumb\" />\n                    <p>{item.name}</p>\n                    <span>ID: {item.id}</span>\n                    <span>Created at: {item.createdAt}</span>\n                  </div>\n                  <button>Connect</button>\n                </li>\n              ))}\n              <li>\n                <div className=\"profile\">\n                  <Img src=\"/profile-user.jpg\" />\n                  <p>\n                    Create Facebook Pixel{\" \"}\n                    <span>\n                      By creating a pixel, you agree to{\" \"}\n                      <a href=\"https://www.facebook.com/legal/technology_terms\">\n                        Facebook’s Business Tools Terms\n                      </a>\n                    </span>\n                  </p>\n                </div>\n                <button className=\"btn\">Create new</button>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n      <div className=\"btns\">\n        <button\n          className=\"btn_clear\"\n          onClick={() => {\n            updateProfileInfo({\n              \"fbMarket.dataSharing\": \"none\",\n            });\n          }}\n        >\n          Skip\n        </button>\n        <button\n          className=\"btn\"\n          onClick={() => {\n            if (shareData && !dataSharingLavel) {\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <h4>Select a data sharing level</h4>\n                  </div>\n                </>\n              );\n              return;\n            }\n            if (user.fbMarket?.dataSharing !== dataSharingLavel) {\n              updateProfileInfo({\n                \"fbMarket.dataSharing\": dataSharingLavel,\n              }).then(({ user: newUser }) => {\n                setUser((prev) => ({ ...prev, fbMarket: newUser.fbMarket }));\n              });\n            }\n          }}\n        >\n          Confirm\n        </button>\n      </div>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nconst CommerceAccount = ({ setStep }) => {\n  const { FB } = window;\n  const { user, setUser } = useContext(SiteContext);\n  const [commerceAccounts, setCommerceAccounts] = useState([]);\n  const [catalog, setCatalog] = useState(\n    user.fbMarket?.commerceAccount?.catalog\n  );\n  const [err, setErr] = useState(null);\n  useEffect(() => {\n    setCatalog(user.fbMarket?.commerceAccount?.catalog);\n  }, [user]);\n  return (\n    <>\n      <p className=\"note\">\n        Create a Commerce account to start selling on Facebook, Instagram, or\n        both. Once you have an account you’ll be able to customize your Shop and\n        collections in the{\" \"}\n        <a\n          target=\"_blank\"\n          href=\"https://www.facebook.com/business/help/2371372636254534\"\n        >\n          Facebook Commerce Manager <External_link_icon />\n        </a>\n        .\n      </p>\n      {err && <div className=\"err\">{err}</div>}\n      <ul>\n        {\n          //   commerceAccounts.map((item, i) => (\n          //   <li key={i}>\n          //     {i}\n          //     <div className=\"facebookPage\">\n          //       <div className=\"thumb\" />\n          //       <p>{item.name}</p>\n          //       <span>ID: {item.id}</span>\n          //       <span>Created at: {item.createdAt}</span>\n          //     </div>\n          //     <button>Connect</button>\n          //   </li>\n          // ))\n        }\n        {catalog && (\n          <li className=\"catalog\">\n            <p>PRODUCTS WILL BE SYNCED TO THIS CATALOG</p>\n            <p>{catalog.name}</p>\n            <span>ID: {catalog.id}</span>\n          </li>\n        )}\n        {!catalog && (\n          <li>\n            <div className=\"profile\">\n              <Img src=\"/profile-user.jpg\" />\n              <p>Create a new Commerce Account</p>\n            </div>\n            <button\n              className=\"btn\"\n              onClick={() => {\n                FB.api(\n                  `/${user.fbMarket.businessManager.id}/owned_product_catalogs`,\n                  \"GET\",\n                  {\n                    access_token: LS.get(\"facebook_user_accessToken\"),\n                  },\n                  async function ({ data, error }) {\n                    console.log(data, error);\n                    if (error) {\n                      setErr(error.message);\n                    }\n                    const delCatalog =\n                      data?.find(\n                        (item) => item.name === \"Delivery Pay Product Catalog\"\n                      ) ||\n                      (await FB.api(\n                        `/${user.fbMarket.businessManager.id}/owned_product_catalogs`,\n                        \"POST\",\n                        {\n                          name: \"Delivery Pay Product Catalog\",\n                          access_token: LS.get(\"facebook_user_accessToken\"),\n                        },\n                        function (res) {\n                          console.log(res.id);\n                          if (res.id) {\n                            return {\n                              ...res,\n                              name: \"Delivery Pay Product Catalog\",\n                            };\n                          } else {\n                            return null;\n                          }\n                          if (res.error) {\n                            console.log(res.error);\n                          }\n                        }\n                      ));\n                    if (delCatalog) {\n                      setCatalog(delCatalog);\n                      updateProfileInfo({\n                        \"fbMarket.commerceAccount.catalog\": delCatalog,\n                      }).then(({ user: newUser }) => {\n                        setUser((prev) => ({\n                          ...prev,\n                          fbMarket: newUser.fbMarket,\n                        }));\n                        setStep(\"terms\");\n                      });\n                    }\n                  }\n                );\n              }}\n            >\n              Create new\n            </button>\n          </li>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Marketplace;\n","import {\n  useEffect,\n  useState,\n  useContext,\n  useRef,\n  useLayoutEffect,\n  lazy,\n} from \"react\";\nimport { SiteContext } from \"../../SiteContext\";\nimport {\n  Err_svg,\n  Plus_svg,\n  X_svg,\n  Succ_svg,\n  FileInput,\n  NumberInput,\n  UploadFiles,\n  Combobox,\n  Tabs,\n  Checkbox,\n  Chev_down_svg,\n  Actions,\n  Pagination,\n  calculateDiscount,\n  calculatePrice,\n  Tip,\n  Media,\n  LS,\n  Moment,\n  moment,\n  InputDateRange,\n} from \"../Elements\";\nimport { Modal, Confirm } from \"../Modal\";\nimport { Link, Route, Switch, Redirect } from \"react-router-dom\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport OrderManagement, { FullOrder } from \"./OrderManagement\";\nimport RefundManagement, { FullRefund } from \"./RefundManagement\";\nimport Campaigns from \"./CampaignManagement\";\nimport FBMarket from \"./fbMarketplace\";\nimport { updateProfileInfo } from \"../Profile\";\nimport { Step } from \"./fbMarketplace\";\nimport { CSVLink } from \"react-csv\";\n\nrequire(\"../styles/products.scss\");\n\nconst parseXLSXtoJSON = (file, cb) => {\n  var name = file.name;\n  const reader = new FileReader();\n  reader.onload = async (evt) => {\n    const bstr = evt.target.result;\n    const XLSX = await import(\"xlsx\");\n    const wb = XLSX.read(bstr, { type: \"binary\" });\n    const wsname = wb.SheetNames[0];\n    const ws = wb.Sheets[wsname];\n    const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\n    const arr = [];\n    const cols = data.shift();\n    data.forEach((row, i) => {\n      const item = {};\n      cols.forEach((col, j) => {\n        let label;\n        switch (col) {\n          case \"Images\":\n            label = \"images\";\n            break;\n          case \"Name\":\n            label = \"name\";\n            break;\n          case \"Description\":\n            label = \"dscr\";\n            break;\n          case \"Material\":\n            label = \"material\";\n            break;\n          case \"Size [Please specify mm, cm, inch or KG]\":\n            label = \"size\";\n            break;\n          case \"Category\":\n            label = \"category\";\n            break;\n          case \"Type\":\n            label = \"type\";\n            break;\n          case \"Price in INR.\":\n            label = \"price\";\n            break;\n          case \"Units Available\":\n            label = \"available\";\n            break;\n          case \"HSN Code\":\n            label = \"hsn\";\n            break;\n          case \"GST %\":\n            label = \"gst\";\n            break;\n          case \"id\":\n            label = \"_id\";\n            break;\n          default:\n        }\n        item[label] = row[j];\n      });\n      arr.push(item);\n    });\n    cb(arr);\n  };\n  reader.readAsBinaryString(file);\n};\n\nconst MyShop = ({ history, location, match }) => {\n  const { user, userType } = useContext(SiteContext);\n  const { FB } = window;\n  const [msg, setMsg] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [shopSetupComplete, setShopSetupComplete] = useState(false);\n  useEffect(() => {\n    fetch(\"/api/categories\")\n      .then((res) => res.json())\n      .then((data) => {\n        setCategories(data.categories);\n      });\n  }, []);\n  useEffect(() => {\n    if (\n      !categories?.length ||\n      !user.shopInfo?.terms?.length ||\n      user.shopInfo?.shippingCost === undefined ||\n      user.shopInfo?.shippingCost === null ||\n      user.shopInfo?.deliveryWithin === undefined ||\n      user.shopInfo?.deliveryWithin === null ||\n      user.shopInfo?.refundable === undefined ||\n      Object.values(user.shopInfo?.paymentMethod || {}).length < 6\n    ) {\n      setShopSetupComplete(false);\n    } else {\n      setShopSetupComplete(true);\n    }\n  }, [categories, user]);\n  useEffect(() => {\n    FB.getLoginStatus(function (response) {\n      console.log(response);\n      if (response.status === \"connected\") {\n        const accessToken = response.authResponse.accessToken;\n        LS.set(\"facebook_user_accessToken\", accessToken);\n      }\n    });\n    if (user.fbMarket?.facebookPage?.access_token) {\n      LS.set(\n        \"facebook_page_accessToken\",\n        user.fbMarket.facebookPage.access_token\n      );\n    }\n  }, [user]);\n  return (\n    <>\n      {userType === \"buyer\" && <Redirect to=\"/account/orders/current\" />}\n      <div className=\"myShop\">\n        <div style={{ display: \"none\" }}>\n          <X_svg />\n        </div>\n        <Tabs\n          basepath=\"/account/myShop/\"\n          tabs={[\n            { label: \"Products & Services\", path: \"products\" },\n            { label: \"Orders\", path: \"orders\" },\n            { label: \"Refunds\", path: \"refunds\" },\n            { label: \"Campaigns\", path: \"campaigns\" },\n            { label: \"FB Marketplace\", path: \"fbMarketplace\" },\n            { label: \"Settings\", path: \"settings\" },\n          ]}\n        />\n        <Switch>\n          <Route path=\"/account/myShop/products\">\n            <Products\n              categories={categories}\n              shopSetupComplete={shopSetupComplete}\n            />\n          </Route>\n          <Route path=\"/account/myShop/orders/:_id\" component={FullOrder} />\n          <Route path=\"/account/myShop/orders\">\n            <OrderManagement categories={categories} />\n          </Route>\n          <Route path=\"/account/myShop/refunds/:_id\" component={FullRefund} />\n          <Route path=\"/account/myShop/refunds\" component={RefundManagement} />\n          <Route path=\"/account/myShop/campaigns\" component={Campaigns} />\n          <Route path=\"/account/myShop/fbMarketplace\" component={FBMarket} />\n          <Route path=\"/account/myShop/settings\">\n            <Settings categories={categories} setCategories={setCategories} />\n          </Route>\n        </Switch>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </div>\n    </>\n  );\n};\nconst ProductForm = ({ prefill, onSuccess, categories }) => {\n  const { user } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [type, setType] = useState(prefill?.type || \"product\");\n  const [category, setCategory] = useState(prefill?.category || \"\");\n  const [discount, setDiscount] = useState({\n    type: prefill?.discount?.type || null,\n    amount: prefill?.discount?.amount || 0,\n    dscr: prefill?.discount?.dscr || \"\",\n  });\n  const [name, setName] = useState(prefill?.name || \"\");\n  const [dscr, setDscr] = useState(prefill?.dscr || \"\");\n  const [price, setPrice] = useState(prefill?.price || \"\");\n  const [files, setFiles] = useState(prefill?.images || []);\n  const [gst, setGst] = useState(\n    prefill?.gst || user.gst?.verified ? user.gst.amount : 0\n  );\n  const [hsn, setHsn] = useState(prefill?.hsn || \"\");\n  const [available, setAvailable] = useState(prefill?.available);\n  const [msg, setMsg] = useState(null);\n  const [tags, setTags] = useState(prefill?.tags || []);\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const images = files.length\n      ? await UploadFiles({\n          files,\n          setMsg,\n        })\n      : [];\n    fetch(`/api/${prefill ? \"edit\" : \"add\"}Product`, {\n      method: prefill ? \"PATCH\" : \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        type,\n        name,\n        dscr,\n        price: +price,\n        images,\n        category,\n        tags,\n        available:\n          available === true || available === false ? available : +available,\n        gst,\n        discount,\n        ...(prefill && { _id: prefill._id }),\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.product);\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>\n                  You can't add more that 100 product at a time. Delete a\n                  product/service and try again.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not add product. please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not add product. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form onSubmit={submit} className={loading ? \"loading\" : \"\"}>\n        <section className=\"type\">\n          <label>Type</label>\n          <Combobox\n            defaultValue={type}\n            options={[\n              { label: \"Product\", value: \"product\" },\n              { label: \"Service\", value: \"service\" },\n              { label: \"Other\", value: \"other\" },\n            ]}\n            onChange={(e) => {\n              setType(e.value);\n            }}\n          />\n        </section>\n        <section className=\"name\">\n          <label>Name of the product/service</label>\n          <input\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required={true}\n          />\n        </section>\n        <section className=\"category\">\n          <label>\n            Category{\" \"}\n            <Tip>\n              You can Add/Edit/Delete your categories{\" \"}\n              <Link to=\"/account/myShop/settings\">here</Link>\n            </Tip>\n          </label>\n          <Combobox\n            required={true}\n            defaultValue={category}\n            options={categories.map((item) => ({ label: item, value: item }))}\n            onChange={(e) => setCategory(e.value)}\n          />\n        </section>\n        <section>\n          <label>Price ₹</label>\n          <NumberInput\n            defaultValue={price}\n            onChange={(e) => setPrice(e.target.value)}\n            required={true}\n          />\n        </section>\n        <section className=\"available\">\n          {type === \"product\" ? (\n            <>\n              <label>Available in stock</label>\n              <NumberInput\n                required={true}\n                defaultValue={available}\n                onChange={(e) => setAvailable(e.target.value)}\n              />\n            </>\n          ) : (\n            <>\n              <label>Availability</label>\n              <Combobox\n                defaultValue={available}\n                required={true}\n                options={[\n                  { label: \"Available\", value: true },\n                  { label: \"Not available\", value: false },\n                ]}\n                onChange={(e) => setAvailable(e.value)}\n              />\n            </>\n          )}\n        </section>\n        <section className=\"dscr\">\n          <label>Description of the product/service</label>\n          <TextareaAutosize\n            value={dscr}\n            onChange={(e) => setDscr(e.target.value)}\n            required={true}\n          />\n        </section>\n        <section className=\"tags\">\n          <label>Tags</label>\n          <ul>\n            {tags.map((item) => (\n              <li key={item}>\n                {item}\n                <button\n                  onClick={() => {\n                    setTags((prev) => prev.filter((tag) => tag !== item));\n                  }}\n                >\n                  <X_svg />\n                </button>\n              </li>\n            ))}\n            <li className=\"form\">\n              <input\n                placeholder=\"addNewTag\"\n                onKeyPress={(e) => {\n                  const value = `${e.target.value.trim()}`;\n                  if (e.charCode === 13) {\n                    e.preventDefault();\n                    if (!value) return;\n                    setTags((prev) => [\n                      ...prev.filter((tag) => tag !== value),\n                      value,\n                    ]);\n                    e.target.focus();\n                    e.target.value = \"\";\n                  }\n                }}\n              />\n              <button\n                type=\"button\"\n                onClick={(e) => {\n                  const input = e.target.previousElementSibling;\n                  const value = `${e.target.previousElementSibling.value.trim()}`;\n                  if (!value) return;\n                  setTags((prev) => [\n                    ...prev.filter((tag) => tag !== value),\n                    value,\n                  ]);\n                  input.value = \"\";\n                  input.focus();\n                }}\n              >\n                Add Tag\n              </button>\n            </li>\n          </ul>\n        </section>\n        <section className=\"images\">\n          <label>Images of the product</label>\n          <FileInput\n            multiple={true}\n            prefill={prefill?.images}\n            accept=\"image/*\"\n            onChange={(files) => setFiles(files)}\n          />\n        </section>\n        <section>\n          <label>HSN Code</label>\n          <input value={hsn} onChange={(e) => setHsn(e.target.value)} />\n        </section>\n        {user.gst?.verified && (\n          <section>\n            <label>GST (%)</label>\n            <NumberInput\n              defaultValue={gst}\n              onChange={(e) => setGst(e.target.value)}\n            />\n          </section>\n        )}\n        <section className=\"discountType\">\n          <label>Discount Type</label>\n          <Combobox\n            defaultValue={discount.type}\n            options={[\n              { label: \"None\", value: null },\n              { label: \"Percent\", value: \"percent\" },\n              { label: \"Flat\", value: \"flat\" },\n            ]}\n            onChange={(e) =>\n              setDiscount((prev) => ({ ...prev, type: e.value }))\n            }\n          />\n        </section>\n        {discount.type !== null && (\n          <>\n            <section className=\"discountAmount\">\n              <label>Amount {discount.type === \"percent\" && \"(%)\"}</label>\n              <NumberInput\n                defaultValue={discount.amount}\n                onChange={(e) =>\n                  setDiscount((prev) => ({ ...prev, amount: e.target.value }))\n                }\n              />\n            </section>\n            <section className=\"discountDscr\">\n              <label>Discount description</label>\n              <TextareaAutosize\n                defaultValue={discount.dscr}\n                onChange={(e) =>\n                  setDiscount((prev) => ({ ...prev, dscr: e.target.value }))\n                }\n              />\n            </section>\n          </>\n        )}\n        {price && (\n          <section className=\"finalPrice\">\n            <p>\n              <label>Input price</label>\n              {price}\n            </p>\n            {+gst > 0 && (\n              <p className=\"gst\">\n                <label>GST {gst}%</label>+{((+price / 100) * +gst).fix()}\n              </p>\n            )}\n            {\n              //   <p>\n              //   <label>Delivery Pay fee 10%</label>+\n              //   {((+price + (+price / 100) * +gst) * 0.1).fix(2)}\n              // </p>\n            }\n            {discount.amount > 0 && discount.type === \"flat\" && (\n              <p>\n                <label>Discount flat</label>- ₹{(+discount.amount).fix()}\n              </p>\n            )}\n            {discount.amount > 0 && discount.type === \"percent\" && (\n              <p>\n                <label>Discount {discount.amount}%</label>- ₹\n                {((+price / 100) * discount.amount).fix()}\n              </p>\n            )}\n            <p className=\"final\">\n              <label>Listing Price</label>₹\n              {(\n                +price +\n                (+price / 100) * +gst -\n                (discount.type === \"percent\"\n                  ? (+price / 100) * discount.amount\n                  : 0) -\n                (discount.type === \"flat\" ? discount.amount : 0)\n              ).fix()}\n            </p>\n          </section>\n        )}\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nconst Products = ({ categories, shopSetupComplete }) => {\n  const { user } = useContext(SiteContext);\n  const { FB } = window;\n  const [productForm, setProductForm] = useState(false);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(20);\n  const [category, setCategory] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState({\n    column: \"createdAt\",\n    order: \"dsc\",\n  });\n  const [dateRange, setDateRange] = useState(null);\n  const [type, setType] = useState(\"\");\n  const [products, setProducts] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [batch, setBatch] = useState([]);\n  const [addMany, setAddMany] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const deleteItems = (items) => {\n    if (items.length) {\n      fetch(\"/api/deleteProducts\", {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ _ids: items }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.code === \"ok\") {\n            setBatch([]);\n            setProducts((prev) =>\n              prev.filter((item) => !items.some((_id) => _id === item._id))\n            );\n          } else {\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Err_svg />\n                  <h4>Could not delete products. Try again.</h4>\n                </div>\n              </>\n            );\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not delete products. Make sure you're online.</h4>\n              </div>\n            </>\n          );\n        });\n    }\n  };\n  const deleteMany = () => deleteItems(batch);\n  const addToFbMarket = (_ids) => {\n    fetch(\"/api/addToFbMarket\", {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _ids,\n        access_token: LS.get(\"facebook_user_accessToken\"),\n      }),\n    })\n      .then((res) => res.json())\n      .then(({ code, fb_products }) => {\n        if (code === \"ok\") {\n          const success = [];\n          const failed = [];\n          fb_products.forEach((item, i) => {\n            if (item.success) {\n              success.push(item);\n            } else {\n              failed.push(item);\n            }\n          });\n          setProducts((prev) =>\n            prev.map((item) => {\n              const prod = fb_products.find(\n                (product) => product._id === item._id\n              );\n              if (prod) {\n                return {\n                  ...item,\n                  fbMarketId: prod.fbMarketId,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                {failed.length === 0 ? (\n                  <>\n                    <Succ_svg />\n                    <h4>{success.length} products has been added.</h4>\n                  </>\n                ) : (\n                  <>\n                    <Err_svg />\n                    <h4>{failed.length} products failed.</h4>\n                  </>\n                )}\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not add products to Facebook Marketplace.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>\n                Could not add products to Facebook Marketplace. Make sure you're\n                online.\n              </h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const removeFromFbMarket = (_ids) => {\n    fetch(\"/api/removeFromFbMarket\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _ids,\n        access_token: LS.get(\"facebook_user_accessToken\"),\n      }),\n    })\n      .then((res) => res.json())\n      .then(({ code, fb_products }) => {\n        if (code === \"ok\") {\n          const success = [];\n          const failed = [];\n          fb_products.forEach((item, i) => {\n            if (item.success) {\n              success.push(item);\n            } else {\n              failed.push(item);\n            }\n          });\n          setProducts((prev) =>\n            prev.map((item) => {\n              const prod = fb_products.find(\n                (product) => product._id === item._id\n              );\n              if (prod) {\n                return {\n                  ...item,\n                  fbMarketId: prod.fbMarketId,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                {failed.length === 0 ? (\n                  <>\n                    <Succ_svg />\n                    <h4>{success.length} products has been removed.</h4>\n                  </>\n                ) : (\n                  <>\n                    <Err_svg />\n                    <h4>{failed.length} products failed to remove.</h4>\n                  </>\n                )}\n              </div>\n            </>\n          );\n          // console.log(data);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not remove products from Facebook Marketplace.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>\n                Could not remove products from Facebook Marketplace. Make sure\n                you're online.\n              </h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    const startDate = moment({\n      time: dateRange?.startDate,\n      format: \"YYYY-MM-DD\",\n    });\n    const endDate = moment({\n      time: new Date(dateRange?.endDate)?.setHours(24, 0, 0, 0),\n      format: \"YYYY-MM-DD\",\n    });\n    fetch(\n      `/api/products?${new URLSearchParams({\n        ...(search && { q: search }),\n        page,\n        perPage,\n        sort: sort.column,\n        order: sort.order,\n        ...(dateRange && {\n          dateFrom: startDate,\n          dateTo: endDate,\n        }),\n        ...(category && { category }),\n        ...(type && { type }),\n      })}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setProducts(data.products);\n          setTotal(data.total);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get products.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [category, search, page, perPage, type, addMany, dateRange]);\n  useEffect(() => {\n    if (selectAll) {\n      // setBatch(products.map((item) => item._id));\n    } else {\n      setBatch([]);\n    }\n  }, [selectAll]);\n  useEffect(() => {\n    if (batch.length === 0) {\n      setSelectAll(false);\n    }\n  }, [batch]);\n  return (\n    <>\n      <div className=\"benner\">\n        <p>Product Management</p>\n        {shopSetupComplete ? (\n          <>\n            <button className=\"pill\" onClick={() => setProductForm(true)}>\n              <Plus_svg /> Add Product\n            </button>\n            <button\n              className=\"pill batchUpload\"\n              onClick={() => setAddMany(true)}\n            >\n              <Plus_svg /> Batch Upload\n            </button>\n          </>\n        ) : (\n          <Link to=\"/account/myShop/settings\" className=\"err\">\n            <p>Please complete your shop information to add product.</p>\n          </Link>\n        )}\n      </div>\n      <div className=\"filters\">\n        <section>\n          <label>Total:</label>\n          {total}\n        </section>\n        <section>\n          <label>Per Page:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"20\", value: 20 },\n              { label: \"30\", value: 30 },\n              { label: \"50\", value: 50 },\n            ]}\n            onChange={(e) => setPerPage(e.value)}\n          />\n        </section>\n        <section className=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 23 23\"\n          >\n            <path\n              id=\"Icon_ionic-ios-search\"\n              data-name=\"Icon ionic-ios-search\"\n              d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n              transform=\"translate(-4.5 -4.493)\"\n              fill=\"#707070\"\n              opacity=\"0.74\"\n            />\n          </svg>\n          <input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search for products & services\"\n          />\n          {search && (\n            <button onClick={() => setSearch(\"\")}>\n              <X_svg />\n            </button>\n          )}\n        </section>\n        <section className=\"type\">\n          <label>Type:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"All\", value: \"\" },\n              { label: \"Product\", value: \"product\" },\n              { label: \"Service\", value: \"service\" },\n              { label: \"Other\", value: \"other\" },\n            ]}\n            onChange={(e) => setType(e.value)}\n          />\n        </section>\n        <section className=\"category\">\n          <label>Category:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"All\", value: \"\" },\n              ...categories.map((item) => ({\n                label: item,\n                value: item,\n              })),\n            ]}\n            onChange={(e) => setCategory(e.value)}\n          />\n        </section>\n        <section className={`date`}>\n          <InputDateRange\n            dateRange={dateRange}\n            onChange={(range) => setDateRange(range)}\n          />\n        </section>\n      </div>\n      <table className=\"table products\">\n        <thead>\n          {batch.length > 0 ? (\n            <tr className=\"batchAction\">\n              <th className=\"checkContainer\">\n                <Checkbox\n                  value={selectAll}\n                  defaultValue={selectAll}\n                  onChange={(e) => setSelectAll(e)}\n                />\n              </th>\n              <th>\n                <button\n                  onClick={() =>\n                    Confirm({\n                      label: \"Batch delete\",\n                      question: `You sure you want to delete these ${batch.length} items?`,\n                      callback: deleteMany,\n                    })\n                  }\n                >\n                  Delete\n                </button>\n              </th>\n              {user.fbMarket?.userAgreement && (\n                <>\n                  <th>\n                    <button\n                      onClick={() => {\n                        addToFbMarket(batch);\n                        setBatch([]);\n                      }}\n                    >\n                      Add to Facebook\n                    </button>\n                  </th>\n                  <th>\n                    <button\n                      onClick={() => {\n                        removeFromFbMarket(batch);\n                        setBatch([]);\n                      }}\n                    >\n                      Remove from Facebook\n                    </button>\n                  </th>\n                </>\n              )}\n            </tr>\n          ) : (\n            <tr>\n              <th className=\"checkContainer\">\n                <Checkbox\n                  value={selectAll}\n                  defaultValue={selectAll}\n                  onChange={(e) => setSelectAll(e)}\n                />\n              </th>\n              <th className=\"date\">Date</th>\n              <th>Image</th>\n              <th className=\"name\">Name</th>\n              <th>Type</th>\n              <th>Facebook Marketplace</th>\n              <th>Available</th>\n              <th>Price</th>\n              <th>GST</th>\n              <th>Discount</th>\n              <th>Listing Price</th>\n              {\n                // <th>Sold</th>\n              }\n              <th>Actions</th>\n            </tr>\n          )}\n        </thead>\n        <tbody>\n          {products.map((product) => (\n            <SingleProduct\n              categories={categories}\n              key={product._id}\n              product={product}\n              setProducts={setProducts}\n              selectAll={selectAll}\n              setBatch={setBatch}\n              batch={batch}\n              deleteItems={deleteItems}\n              addToFbMarket={addToFbMarket}\n              removeFromFbMarket={removeFromFbMarket}\n            />\n          ))}\n          {products.length === 0 && (\n            <tr className=\"placeholder\">\n              <td>No product yet.</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      <Pagination\n        total={total}\n        btns={5}\n        currentPage={page}\n        perPage={perPage}\n        setPage={setPage}\n      />\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n      <Modal\n        head={true}\n        label=\"Edit Product/Service\"\n        setOpen={setProductForm}\n        open={productForm}\n        className=\"productForm\"\n      >\n        <ProductForm\n          categories={categories}\n          onSuccess={(product) => {\n            setProducts((prev) => [...prev, product]);\n            setProductForm(false);\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Succ_svg />\n                  <h4>Product added.</h4>\n                </div>\n              </>\n            );\n          }}\n        />\n      </Modal>\n      <Modal\n        open={addMany}\n        head={true}\n        label=\"Batch product upload\"\n        setOpen={setAddMany}\n        className=\"batchItemPreview\"\n      >\n        <BatchUpload\n          categories={categories}\n          onSuccess={() => {\n            setAddMany(false);\n          }}\n        />\n      </Modal>\n    </>\n  );\n};\nconst SingleProduct = ({\n  product,\n  setProducts,\n  categories,\n  selectAll,\n  setBatch,\n  batch,\n  deleteItems,\n  addToFbMarket,\n  removeFromFbMarket,\n}) => {\n  const { user } = useContext(SiteContext);\n  const [selected, setSelected] = useState(selectAll || false);\n  const [edit, setEdit] = useState(false);\n  const [msg, setMsg] = useState(false);\n  useEffect(() => {\n    setSelected(selectAll);\n  }, [selectAll]);\n  useEffect(() => {\n    if (selected) {\n      setBatch((prev) => [...prev, product._id]);\n    } else {\n      setBatch((prev) => prev.filter((item) => item !== product._id));\n    }\n  }, [selected]);\n  return (\n    <tr className={`product ${selected ? \"selected\" : \"\"}`}>\n      <td className=\"checkContainer\">\n        <Checkbox\n          defaultValue={selected}\n          value={selected}\n          onChange={(e) => {\n            setSelected(e);\n          }}\n        />\n      </td>\n      <td className=\"date\">\n        <Moment format=\"DD-MM-YY\">{product.createdAt}</Moment>\n      </td>\n      <td className=\"thumbs\">\n        <Media links={product.images} />\n      </td>\n      <td className=\"name\">{product.name}</td>\n      <td>{product.type}</td>\n      <td>{product.fbMarketId ? \"Added\" : \"N/A\"}</td>\n      <td>\n        {product.available} {product.available === true && \"Available\"}\n        {product.available === false && \"Unavailable\"}\n      </td>\n      <td>₹{product.price}</td>\n      <td>\n        {user.gst?.verified\n          ? (product.gst || user.gst?.amount || 0) + \"%\"\n          : \"N/A\"}\n      </td>\n      <td>₹{calculateDiscount(product) || 0}</td>\n      <td>₹{calculatePrice({ product, gst: user.gst }) || 0}</td>\n      {\n        // <td>{product.popularity || 0}</td>\n      }\n      <td>\n        {batch.length === 0 && (\n          <Actions icon={<Chev_down_svg />}>\n            <Link to={`/marketplace/${product._id}`} target=\"_blank\">\n              View\n            </Link>\n            {user.fbMarket?.userAgreement && (\n              // LS.get(\"facebook_user_accessToken\") &&\n              <>\n                {product.fbMarketId ? (\n                  <button onClick={() => removeFromFbMarket([product._id])}>\n                    Remove from Facebook\n                  </button>\n                ) : (\n                  <button onClick={() => addToFbMarket([product._id])}>\n                    Add to Facebook\n                  </button>\n                )}\n              </>\n            )}\n            {!user.fbMarket?.userAgreement && (\n              <Link to=\"/account/myShop/fbMarketplace\" className=\"edit\">\n                Setup FB Marketplace\n              </Link>\n            )}\n            <Link to=\"#\" className=\"edit\" onClick={() => setEdit(true)}>\n              Edit\n            </Link>\n            <Link\n              to=\"#\"\n              className=\"delete\"\n              onClick={() =>\n                Confirm({\n                  label: \"Removing Product\",\n                  question: \"You sure want to delete this product?\",\n                  callback: () => deleteItems([product._id]),\n                })\n              }\n            >\n              Delete\n            </Link>\n          </Actions>\n        )}\n      </td>\n      <Modal\n        head={true}\n        label=\"Edit Product/Service\"\n        open={edit}\n        setOpen={setEdit}\n        className=\"productForm\"\n      >\n        <ProductForm\n          categories={categories}\n          onSuccess={(product) => {\n            setProducts((prev) =>\n              prev.map((item) => {\n                if (item._id === product._id) {\n                  return product;\n                } else {\n                  return item;\n                }\n              })\n            );\n            setEdit(false);\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Succ_svg />\n                  <h4>Product updated.</h4>\n                </div>\n              </>\n            );\n          }}\n          prefill={product}\n        />\n      </Modal>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </tr>\n  );\n};\n\nconst BatchUpload = ({ onSuccess, categories }) => {\n  const [loading, setLoading] = useState(false);\n  const [step, setStep] = useState(1);\n  const [batchItems, setBatchItems] = useState(null);\n  const [images, setImages] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const [category, setCategory] = useState(\"\");\n  const [csvDraft, setCsvDraft] = useState(null);\n  const addBatchProducts = () => {\n    setLoading(true);\n    fetch(\"/api/updateDraft\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ items: batchItems }),\n    })\n      .then((res) => res.json())\n      .then(({ code, updated }) => {\n        setLoading(false);\n        if (code === \"ok\") {\n          setMsg(\n            <>\n              <button\n                onClick={() => {\n                  setMsg(null);\n                  onSuccess?.();\n                }}\n              >\n                Okay\n              </button>\n              <div>\n                {updated ? <Succ_svg /> : <Err_svg />}\n                <h4>{updated} items has been updated.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not add products. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not add products. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const uploadImages = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const imgLinks = (await UploadFiles({ files: images, setMsg })) || [];\n    if (imgLinks.length !== images.length) {\n      setMsg(\n        <>\n          <button onClick={() => setMsg(null)}>Okay</button>\n          <div>\n            <Err_svg />\n            <h4>Could not upload images. Please try again.</h4>\n          </div>\n        </>\n      );\n      return;\n    }\n    fetch(\"/api/uploadProductImg\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        images: imgLinks,\n        category,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          const headers = Object.entries({\n            Images: \"images\",\n            id: \"_id\",\n            Name: \"name\",\n            Description: \"dscr\",\n            Material: \"material\",\n            \"Size [Please specify mm, cm, inch or KG]\": \"size\",\n            Category: \"category\",\n            Type: \"type\",\n            \"Price in INR.\": \"price\",\n            \"Units Available\": \"available\",\n            \"HSN Code\": \"hsn\",\n            \"GST %\": \"gst\",\n          }).map(([key, value]) => ({\n            label: key,\n            key: value,\n          }));\n          setCsvDraft({\n            headers,\n            data: data.products,\n            filename: `Delivery Pay Product Draft.csv`,\n          });\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not add products. Make sure you're online.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not add products. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <div className=\"content\">\n      <Step\n        label=\"Create Draft\"\n        className=\"createDraft\"\n        defaultStatus={step === 1}\n        data={csvDraft}\n      >\n        <>\n          <form onSubmit={uploadImages}>\n            <section className=\"category\">\n              <label>Choose category</label>\n              <Combobox\n                options={categories.map((item) => ({\n                  label: item,\n                  value: item.toLowerCase(),\n                }))}\n                required={true}\n                onChange={(e) => setCategory(e.value)}\n              />\n            </section>\n            <p>\n              Choose images{\" \"}\n              <span>\n                Choose 1 image for each product. you can add multiple images\n                later.\n              </span>\n            </p>\n            <FileInput onChange={(files) => setImages(files)} multiple={true} />\n            <section className=\"btns\">\n              <button\n                className=\"clean\"\n                type=\"button\"\n                onClick={() => setStep(3)}\n              >\n                Already have a draft\n              </button>\n              {csvDraft ? (\n                <CSVLink\n                  {...csvDraft}\n                  className=\"submit\"\n                  type=\"submit\"\n                  onClick={() => {\n                    setCsvDraft(null);\n                    setStep(2);\n                  }}\n                >\n                  Download Draft\n                </CSVLink>\n              ) : (\n                <button className=\"submit\">Create Draft</button>\n              )}\n            </section>\n          </form>\n        </>\n      </Step>\n      <Step label=\"Populate With data\" defaultStatus={step === 2}>\n        <p>\n          Populate the Sheet with real product data. Don't Change the header.\n        </p>\n        <button className=\"submit\" onClick={() => setStep(3)}>\n          Next\n        </button>\n      </Step>\n      <Step label=\"Upload Draft\" defaultStatus={step === 3}>\n        {!!batchItems?.length && (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Type</th>\n                <th>Images</th>\n                <th className=\"name\">Name</th>\n                <th className=\"dscr\">Description</th>\n                <th>Available</th>\n                <th>Price</th>\n                <th>GST</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {batchItems?.map((item, i) => (\n                <tr key={i}>\n                  <td>{item.type}</td>\n                  <td className=\"thumbs\">\n                    <Media links={item.images} />\n                  </td>\n                  <td className=\"name\">{item.name}</td>\n                  <td className=\"dscr\">{item.dscr}</td>\n                  <td>\n                    {item.available}\n                    {item.available === true && \"Available\"}\n                    {item.available === false && \"Unavailable\"}\n                  </td>\n                  <td>{item.price}</td>\n                  <td>{item.gst}</td>\n                  <td>\n                    <button\n                      className=\"remove\"\n                      onClick={() =>\n                        setBatchItems((prev) => {\n                          const newItems = [...prev];\n                          newItems.splice(i, 1);\n                          return newItems;\n                        })\n                      }\n                    >\n                      <X_svg />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n        {!batchItems?.length && (\n          <div className=\"uploadFile\">\n            <p>\n              Upload xlsx/csv file in. See the example file{\" \"}\n              <a\n                href=\"/batch_product_upload_xlsx_file_example.csv\"\n                target=\"_blank\"\n              >\n                here\n              </a>\n              .\n            </p>\n            <input\n              type=\"file\"\n              accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n              onChange={(e) => {\n                if (e.target.files[0]) {\n                  parseXLSXtoJSON(e.target.files[0], (result) => {\n                    if (result?.length) {\n                      setBatchItems(\n                        result\n                          .filter(\n                            (item) =>\n                              item.type &&\n                              item.category &&\n                              item.name &&\n                              item.dscr &&\n                              item.price !== undefined\n                          )\n                          .map((item) => ({\n                            ...item,\n                            status: \"\",\n                            images: item.images\n                              .split(/,( |\\n)/)\n                              .filter((item) => item.trim()),\n                          }))\n                      );\n                    }\n                  });\n                }\n                e.target.value = null;\n              }}\n            />\n          </div>\n        )}\n        {!!batchItems?.length && (\n          <button\n            className=\"submit\"\n            onClick={() =>\n              Confirm({\n                label: \"Adding Batch products\",\n                question: \"You sure want to add all these items?\",\n                callback: addBatchProducts,\n              })\n            }\n          >\n            Add\n          </button>\n        )}\n      </Step>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst defaultTerms = [\n  \"Buyer will be responsible for paying for shipping costs & for returning the item.\",\n  \"Shipping costs are nonrefundable.\",\n  \"Orders must be returned with Original Packaging & Securely.\",\n  \"Orders must be Returned Via Trackable / Traceable Courier Services Only.\",\n  \"Proof of Return via Photo of Tracking Number & Dispatch Ticket is Required.\",\n  \"Refund is Only Issued Upon Delivery of Return Package.\",\n];\nconst Settings = ({ categories, setCategories }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [gstEdit, setGstEdit] = useState(false);\n  const [shippingEdit, setShippingEdit] = useState(false);\n  const [termsEdit, setTermsEdit] = useState();\n  const [editPayment, setEditPayment] = useState(false);\n  const [msg, setMsg] = useState(null);\n  return (\n    <div className=\"settings\">\n      <div className=\"caution\">\n        {!categories?.length && <p className=\"err\">Add at least 1 category.</p>}\n        {!user.shopInfo?.terms?.length && (\n          <p className=\"err\">Add Return policy terms</p>\n        )}\n        {(user.shopInfo?.shippingCost === undefined ||\n          user.shopInfo?.shippingCost === null ||\n          user.shopInfo?.deliveryWithin === undefined ||\n          user.shopInfo?.deliveryWithin === null ||\n          user.shopInfo?.refundable === undefined) && (\n          <p className=\"err\">Add Shipping & Delivery detail</p>\n        )}\n        {Object.values(user.shopInfo?.paymentMethod || {}).length < 6 && (\n          <p className=\"err\">Add valid payment method</p>\n        )}\n      </div>\n      <div className=\"cat\">\n        <h2 className=\"head\">Categories</h2>\n        <ul className=\"categories\">\n          {categories.map((item, i) => (\n            <li key={i}>\n              {item}{\" \"}\n              <button\n                onClick={() =>\n                  Confirm({\n                    label: \"Remove Category\",\n                    question: \"You sure want to remove this category?\",\n                    callback: () => {\n                      fetch(\"/api/categories\", {\n                        method: \"DELETE\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({\n                          category: item,\n                        }),\n                      })\n                        .then((res) => res.json())\n                        .then((data) => {\n                          if (data.code === \"ok\") {\n                            setCategories((prev) =>\n                              prev.filter((cat) => cat !== item)\n                            );\n                          } else {\n                            setMsg(\n                              <>\n                                <button onClick={() => setMsg(null)}>\n                                  Okay\n                                </button>\n                                <div>\n                                  <Err_svg />\n                                  <h4>Could not delete category. Try again.</h4>\n                                </div>\n                              </>\n                            );\n                          }\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                          setMsg(\n                            <>\n                              <button onClick={() => setMsg(null)}>Okay</button>\n                              <div>\n                                <Err_svg />\n                                <h4>\n                                  Could not delete category. Make sure you're\n                                  online.\n                                </h4>\n                              </div>\n                            </>\n                          );\n                        });\n                    },\n                  })\n                }\n              >\n                <X_svg />\n              </button>\n            </li>\n          ))}\n          {categories.length === 0 && (\n            <li className=\"placeholder\">No category found.</li>\n          )}\n        </ul>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const input = e.target.querySelector(\"input\");\n            fetch(\"/api/addCategory\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n                category: input.value,\n              }),\n            })\n              .then((res) => res.json())\n              .then((data) => {\n                if (data.code === \"ok\") {\n                  setCategories(data.categories);\n                  input.value = \"\";\n                } else {\n                  setMsg(\n                    <>\n                      <button onClick={() => setMsg(null)}>Okay</button>\n                      <div>\n                        <Err_svg />\n                        <h4>Could not add category. Try again.</h4>\n                      </div>\n                    </>\n                  );\n                }\n              })\n              .catch((err) => {\n                console.log(err);\n                setMsg(\n                  <>\n                    <button onClick={() => setMsg(null)}>Okay</button>\n                    <div>\n                      <Err_svg />\n                      <h4>Could not add category. Make sure you're online.</h4>\n                    </div>\n                  </>\n                );\n              });\n          }}\n        >\n          <input\n            type=\"text\"\n            required={true}\n            placeholder=\"New Category. ie Mobile\"\n          />\n          <button>Add category</button>\n        </form>\n      </div>\n      <div className=\"gst\">\n        <h2 className=\"head\">\n          GST{\" \"}\n          {!gstEdit && <button onClick={() => setGstEdit(true)}>Edit</button>}\n        </h2>\n        <p className=\"status\">\n          Status:{\" \"}\n          <strong>{user.gst?.verified ? \"Verified\" : \"Unverified\"}</strong>\n        </p>\n        {gstEdit ? (\n          <GstEditForm setOpen={setGstEdit} setMsg={setMsg} />\n        ) : (\n          <>\n            <p>GST Registration number: {user.gst?.detail?.reg || \"N/A\"}</p>\n            <p>\n              GST amount: {user.gst?.amount ? user.gst.amount + \"%\" : \"N/A\"}\n            </p>\n            <p>\n              Files for verification:{\" \"}\n              {!user.gst?.detail?.files?.length && \"N/A\"}\n            </p>\n            {user.gst?.detail?.files?.length && (\n              <ul className=\"thumbs\">\n                <Media links={user.gst?.detail?.files} />\n              </ul>\n            )}\n          </>\n        )}\n        {!user.gst?.verified && (\n          <p className=\"note\">\n            *GST will apply once we review and verify your GST registraion.\n          </p>\n        )}\n      </div>\n      <div className=\"payment\">\n        <h2 className=\"head\">\n          Payment Method{\" \"}\n          {!editPayment && (\n            <button onClick={() => setEditPayment(true)}>Edit</button>\n          )}\n        </h2>\n        {editPayment ? (\n          <PaymentMethodForm\n            prefill={user.shopInfo?.paymentMethod}\n            setOpen={setEditPayment}\n            setMsg={setMsg}\n          />\n        ) : (\n          <>\n            <p>Name: {user.shopInfo?.paymentMethod?.name || \"--\"}</p>\n            <p>Bank: {user.shopInfo?.paymentMethod?.bank || \"--\"}</p>\n            <p>City: {user.shopInfo?.paymentMethod?.city || \"--\"}</p>\n            <p>\n              Account type: {user.shopInfo?.paymentMethod?.accountType || \"--\"}\n            </p>\n            <p>\n              Account Number:{\" \"}\n              {user.shopInfo?.paymentMethod?.accountNumber || \"--\"}\n            </p>\n            <p>ifsc: {user.shopInfo?.paymentMethod?.ifsc || \"--\"}</p>\n          </>\n        )}\n      </div>\n      <div className=\"terms shipping\">\n        <h2 className=\"head\">\n          Shipping & Delivery{\" \"}\n          {!shippingEdit && (\n            <button onClick={() => setShippingEdit(true)}>Edit</button>\n          )}\n        </h2>\n        {shippingEdit ? (\n          <ShippingEditForm setOpen={setShippingEdit} setMsg={setMsg} />\n        ) : (\n          <>\n            <p>\n              Shipping cost:{\" \"}\n              {user.shopInfo?.shippingCost\n                ? \"₹\" + user.shopInfo?.shippingCost\n                : \"N/A\"}\n            </p>\n            <p>\n              Delivery within (days): {user.shopInfo?.deliveryWithin || \"N/A\"}\n            </p>\n            <p>Refundable: {user.shopInfo?.refundable?.toString() || \"N/A\"}</p>\n          </>\n        )}\n      </div>\n      {\n        //   <div className=\"terms payment\">\n        //   <h2 className=\"head\">Deposit & Payment Terms</h2>\n        //   <p>\n        //     Refundable [ I will accept Returns ] / Non Refundable [ I will not\n        //     accept returns , My payment should be released as soon as my Order is\n        //     Delivered ] as Options before Requesting for a Payment.\n        //   </p>\n        // </div>\n      }\n      <div className=\"terms return\">\n        <h2 className=\"head\">\n          Return Policy Terms{\" \"}\n          {!termsEdit && (\n            <button onClick={() => setTermsEdit(true)}>Edit</button>\n          )}\n        </h2>\n        <TermsEditForm\n          setOpen={setTermsEdit}\n          termsEdit={termsEdit}\n          setMsg={setMsg}\n        />\n      </div>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst GstEditForm = ({ setOpen, setMsg }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [gstFiles, setGstFiles] = useState([]);\n  const [gstReg, setGstReg] = useState(user.gst?.detail?.reg);\n  const [amount, setAmount] = useState(user.gst?.amount);\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = (await UploadFiles({ files: gstFiles, setMsg })) || [];\n    updateProfileInfo({\n      \"gst.detail.files\": fileLinks,\n      \"gst.detail.reg\": gstReg,\n      \"gst.amount\": amount,\n    })\n      .then(({ user: newUser }) => {\n        setLoading(false);\n        if (newUser) {\n          setUser((prev) => ({ ...prev, gst: newUser.gst }));\n          setOpen(false);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not upadte GST Information. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <form onSubmit={submit}>\n      <section>\n        <label>GST Registration Nubmer</label>\n        <input\n          required={true}\n          type=\"text\"\n          defaultValue={user.gst?.detail.reg}\n          name=\"gst.detail.reg\"\n          onChange={(e) => setGstReg(e.target.value)}\n        />\n      </section>\n      <section>\n        <label>GST percentage (%)</label>\n        <NumberInput\n          required={true}\n          defaultValue={user.gst?.amount}\n          name=\"gst.detail.reg\"\n          onChange={(e) => setAmount(e.target.value)}\n        />\n      </section>\n      <section>\n        <label>Upload files for verification</label>\n        <FileInput\n          multiple={true}\n          prefill={user.gst?.detail?.files}\n          name=\"gst.detail.files\"\n          onChange={(files) => setGstFiles(files)}\n        />\n      </section>\n      <section className=\"btns\">\n        <button>Save Changes</button>\n        <button type=\"button\" onClick={() => setOpen(false)}>\n          Cancel\n        </button>\n      </section>\n    </form>\n  );\n};\nconst ShippingEditForm = ({ setOpen, setMsg }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [shippingCost, setShippingCost] = useState(\n    user.shopInfo?.shippingCost || 0\n  );\n  const [deliveryWithin, setDeliveryWithin] = useState(\n    user.shopInfo?.deliveryWithin\n  );\n  const [refundable, setRefundable] = useState(\n    user.shopInfo?.refundable || null\n  );\n  const submit = (e) => {\n    e.preventDefault();\n    updateProfileInfo({\n      \"shopInfo.shippingCost\": shippingCost,\n      \"shopInfo.deliveryWithin\": deliveryWithin,\n      \"shopInfo.refundable\": refundable,\n    })\n      .then(({ user: newUser }) => {\n        if (newUser) {\n          setUser((prev) => ({ ...prev, shopInfo: newUser.shopInfo }));\n          setOpen(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not upadte Terms. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <form onSubmit={submit}>\n      <section>\n        <label>Shipping Cost ₹</label>\n        <NumberInput\n          required={true}\n          defaultValue={shippingCost}\n          name=\"shippingCost\"\n          onChange={(e) => setShippingCost(e.target.value)}\n        />\n      </section>\n      <section>\n        <label>Delivery Within (days)</label>\n        <NumberInput\n          required={true}\n          defaultValue={deliveryWithin}\n          name=\"deliveryWithin\"\n          min={1}\n          step=\"0\"\n          placeholder=\"ie. 4 Days\"\n          onChange={(e) => setDeliveryWithin(e.target.value)}\n        />\n      </section>\n      <section>\n        <label>Refundable</label>\n        <Combobox\n          required={true}\n          defaultValue={0}\n          onChange={(e) => setRefundable(e.value)}\n          options={[\n            { label: \"No\", value: null },\n            {\n              label: \"Upto 24 Hours After Delivery\",\n              value: \"Upto 24 Hours After Delivery\",\n            },\n            {\n              label: \"Upto 7 Days After Delivery\",\n              value: \"Upto 7 Days After Delivery\",\n            },\n            {\n              label: \"Upto 15 Days After Delivery\",\n              value: \"Upto 15 Days After Delivery\",\n            },\n          ]}\n        />\n      </section>\n      <section className=\"btns\">\n        <button>Save Changes</button>\n        <button type=\"button\" onClick={() => setOpen(false)}>\n          Cancel\n        </button>\n      </section>\n    </form>\n  );\n};\nconst TermsEditForm = ({ setOpen, termsEdit, setMsg }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [terms, setTerms] = useState(user.shopInfo?.terms || []);\n  const [addTerm, setAddTerm] = useState(\"\");\n  const submit = (e) => {\n    e.preventDefault();\n    updateProfileInfo({\n      \"shopInfo.terms\": terms,\n    })\n      .then(({ user: newUser }) => {\n        if (newUser) {\n          setUser((prev) => ({ ...prev, shopInfo: newUser.shopInfo }));\n          setOpen(false);\n          setTerms(newUser.shopInfo?.terms);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not upadte Terms. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    if (termsEdit) {\n      if (terms.length === 0) {\n        setTerms(defaultTerms);\n      }\n    } else {\n      setTerms(user.shopInfo?.terms || []);\n    }\n  }, [termsEdit]);\n  return (\n    <form onSubmit={submit}>\n      <ul>\n        {terms.map((item, i) => (\n          <li key={i}>\n            {item}{\" \"}\n            {termsEdit && (\n              <button\n                type=\"button\"\n                onClick={() =>\n                  setTerms((prev) => prev.filter((term) => term !== item))\n                }\n              >\n                <X_svg />\n              </button>\n            )}\n          </li>\n        ))}\n        {terms.length === 0 && <li>No terms has been added.</li>}\n      </ul>\n      {termsEdit && (\n        <>\n          <section className=\"addTerm\">\n            <TextareaAutosize\n              value={addTerm}\n              placeholder=\"Add auditional term\"\n              onChange={(e) => setAddTerm(e.target.value)}\n            />\n            <button\n              type=\"button\"\n              onClick={() => {\n                setTerms((prev) =>\n                  addTerm\n                    ? [...prev.filter((term) => term !== addTerm), addTerm]\n                    : prev\n                );\n                setAddTerm(\"\");\n              }}\n            >\n              Add Term\n            </button>\n          </section>\n          <section className=\"btns\">\n            <button>Save Changes</button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setOpen(false);\n                setTerms(\n                  user.shopInfo?.terms?.length\n                    ? user.shopInfo.terms\n                    : defaultTerms\n                );\n              }}\n            >\n              Cancel\n            </button>\n          </section>\n        </>\n      )}\n    </form>\n  );\n};\nconst PaymentMethodForm = ({ prefill, onSuccess, setMsg, setOpen }) => {\n  const { setUser } = useContext(SiteContext);\n  const [bank, setBank] = useState(prefill?.bank || \"\");\n  const [name, setName] = useState(prefill?.name || \"\");\n  const [ifsc, setIfsc] = useState(prefill?.ifsc || \"\");\n  const [city, setCity] = useState(prefill?.city || \"\");\n  const [type, setType] = useState(prefill?.accountType || \"\");\n  const [accountNumber, setAccountNumber] = useState(\n    prefill?.accountNumber || \"\"\n  );\n  const submit = (e) => {\n    e.preventDefault();\n    updateProfileInfo({\n      \"shopInfo.paymentMethod\": {\n        name,\n        bank,\n        city,\n        accountType: type,\n        ifsc,\n        accountNumber,\n      },\n    })\n      .then(({ user: newUser }) => {\n        if (newUser) {\n          setUser((prev) => ({\n            ...prev,\n            shopInfo: newUser.shopInfo,\n          }));\n          setOpen(false);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not update payment method. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>\n                Could not updated payment method. Make sure you're online.\n              </h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <form className=\"paymentMethodForm netBanking\" onSubmit={submit}>\n      <section className=\"inputs\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Full name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"bank\"\n          placeholder=\"Bank\"\n          value={bank}\n          onChange={(e) => setBank(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"city\"\n          placeholder=\"City\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"type\"\n          placeholder=\"Account type ie. Savings / Current\"\n          value={type}\n          onChange={(e) => setType(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"accountNumber\"\n          placeholder=\"Account Number\"\n          value={accountNumber}\n          onChange={(e) => setAccountNumber(e.target.value)}\n          required={true}\n        />\n        <input\n          type=\"text\"\n          name=\"ifsc\"\n          placeholder=\"IFSC\"\n          value={ifsc}\n          onChange={(e) => setIfsc(e.target.value)}\n          required={true}\n        />\n      </section>\n      <section className=\"btns\">\n        <button type=\"submit\">Save Changes</button>\n        <button type=\"button\" onClick={() => setOpen(false)}>\n          Cancel\n        </button>\n      </section>\n    </form>\n  );\n};\n\nexport default MyShop;\n"],"sourceRoot":""}