{"version":3,"sources":["components/Profile.js"],"names":["updateProfileInfo","newData","a","fetch","method","headers","body","JSON","stringify","then","res","json","require","SinglePaymentMethod","setMsg","setUser","useContext","SiteContext","useState","edit","setEdit","deletePaymentMethod","useCallback","_id","code","prev","paymentMethods","filter","item","onClick","className","__t","Confirm","label","question","callback","card","open","head","setOpen","prefill","onSuccess","paymentMethod","account","DataEdit","fields","value","onError","formData","form","useRef","submit","e","preventDefault","allData","FormData","target","entries","field","password","confirm_password","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","type","coordinates","UploadFiles","files","user","alert","catch","err","console","log","ref","onSubmit","Profile","history","match","location","mismatchPass","setMismatchPass","msg","kycFiles","setKycFiles","src","profileImg","xmlns","width","height","viewBox","id","transform","fill","d","stroke","accept","onChange","file","cdn","process","_file","append","data","firstName","lastName","userId","placeholder","defaultValue","name","required","phone","pattern","email","gender","age","address","street","city","state","zip","multiple","kyc","verified","links","map","i","length"],"mappings":"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","file":"static/js/14.60172116.chunk.js","sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport { BankCard, BankAccount, BankCardForm, NetBankingForm } from \"./Wallet\";\nimport { Modal, Confirm } from \"./Modal\";\nimport {\n  Err_svg,\n  Succ_svg,\n  FileInput,\n  Media,\n  UploadFiles,\n  Img,\n} from \"./Elements\";\n// import GoogleLogin from \"react-google-login\";\nrequire(\"./styles/profile.scss\");\n\nexport async function updateProfileInfo(newData) {\n  return fetch(\"/api/editUserProfile\", {\n    method: \"PATCH\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ ...newData }),\n  }).then((res) => res.json());\n}\n\nconst Profile = ({ history, match, location }) => {\n  const { user, setUser } = useContext(SiteContext);\n  const [mismatchPass, setMismatchPass] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const [kycFiles, setKycFiles] = useState([]);\n  const [gstFiles, setGstFiles] = useState([]);\n  // const addGoogleId = (e) => {\n  //   if (e.googleId) {\n  //     updateProfileInfo({ googleId: e.googleId })\n  //       .then((data) => {\n  //         setUser((prev) => ({ ...prev, googleId: e.googleId }));\n  //         setMsg(\n  //           <>\n  //             <button onClick={() => setMsg(null)}>Okay</button>\n  //             <div>\n  //               <Succ_svg />\n  //               <h4>Google account successfully connected.</h4>\n  //             </div>\n  //           </>\n  //         );\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //         setMsg(\n  //           <>\n  //             <button onClick={() => setMsg(null)}>Okay</button>\n  //             <div>\n  //               <Err_svg />\n  //               <h4>Could not connect Google account.</h4>\n  //             </div>\n  //           </>\n  //         );\n  //       });\n  //   }\n  // };\n  // const disconnectFromGoogle = (e) => {\n  //   updateProfileInfo({ googleId: null })\n  //     .then((data) => {\n  //       if (data.user) {\n  //         setUser((prev) => ({ ...prev, googleId: null }));\n  //         setMsg(\n  //           <>\n  //             <button onClick={() => setMsg(null)}>Okay</button>\n  //             <div>\n  //               <Succ_svg />\n  //               <h4>Successfully disconnected Google.</h4>\n  //             </div>\n  //           </>\n  //         );\n  //       } else {\n  //         setMsg(\n  //           <>\n  //             <button onClick={() => setMsg(null)}>Okay</button>\n  //             <div>\n  //               <Err_svg />\n  //               <h4>Could not disconnect Google account. Please try again.</h4>\n  //             </div>\n  //           </>\n  //         );\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //       setMsg(\n  //         <>\n  //           <button onClick={() => setMsg(null)}>Okay</button>\n  //           <div>\n  //             <Err_svg />\n  //             <h4>Could not disconnect Google account.</h4>\n  //           </div>\n  //         </>\n  //       );\n  //     });\n  // };\n  return (\n    <div className=\"profileContainer\">\n      <div className=\"benner\">\n        <div className=\"profileImg\">\n          <Img src={user.profileImg || \"/profile-user.jpg\"} />\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"91.832\"\n            height=\"25.468\"\n            viewBox=\"0 0 91.832 25.468\"\n          >\n            <g\n              id=\"Path_1937\"\n              data-name=\"Path 1937\"\n              transform=\"translate(15.429 -9.647)\"\n              fill=\"#fff\"\n            >\n              <path\n                d=\"M 29.79687690734863 34.6146240234375 C 22.21588897705078 34.6146240234375 13.43720626831055 32.0111198425293 5.0779709815979 27.28368377685547 C -2.8753981590271 22.78578186035156 -9.78753662109375 16.7585563659668 -14.48426628112793 10.24203777313232 C -13.95890235900879 10.24473857879639 -13.30369663238525 10.25548648834229 -12.80753517150879 10.26361274719238 C -12.44524097442627 10.26955413818359 -12.15906429290771 10.27424812316895 -12.02891159057617 10.27424812316895 C -11.93940830230713 10.27424812316895 -11.86373233795166 10.26253128051758 -11.79978466033936 10.24241733551025 C -11.48864650726318 10.21196746826172 -10.04010391235352 10.17821311950684 -5.149840831756592 10.17821311950684 C -1.226676225662231 10.17821311950684 4.093100070953369 10.19837760925293 9.725229263305664 10.21973037719727 C 16.20444107055664 10.24428367614746 23.54814720153809 10.27211856842041 29.79687690734863 10.27211856842041 C 31.89767646789551 10.27211856842041 43.68988800048828 10.22107124328613 56.17448806762695 10.16702461242676 L 59.24650192260742 10.15374183654785 C 60.32665252685547 10.14907169342041 61.61424255371094 10.14680099487305 63.18285369873047 10.14680099487305 C 64.99295043945313 10.14680099487305 66.92156219482422 10.14978885650635 68.78666687011719 10.15269470214844 C 70.55825042724609 10.1554479598999 72.23158264160156 10.15804767608643 73.72422027587891 10.15804767608643 C 74.4501953125 10.15804767608643 75.08247375488281 10.1574182510376 75.63590240478516 10.15613842010498 C 74.24596405029297 13.15391826629639 71.95748138427734 16.1362361907959 68.82386779785156 19.03109550476074 C 65.67525482177734 21.9398250579834 61.6738166809082 24.71903610229492 57.25215911865234 27.06828308105469 C 52.91740798950195 29.37135314941406 48.15610122680664 31.27616500854492 43.48295974731445 32.57678985595703 C 38.69290161132813 33.90995407104492 33.96032333374023 34.6146240234375 29.79687690734863 34.6146240234375 Z\"\n                stroke=\"none\"\n              />\n              <path\n                d=\"M 63.18235397338867 10.64679336547852 C 61.61428070068359 10.64679336547852 60.32755279541016 10.64906692504883 59.24865341186523 10.65373229980469 L 56.18099212646484 10.6670036315918 C 43.69374084472656 10.72105407714844 31.89901733398438 10.77211761474609 29.79687881469727 10.77211761474609 C 23.54719161987305 10.77211761474609 16.2029914855957 10.74428176879883 9.723331451416016 10.71971893310547 C 4.091693878173828 10.69837951660156 -1.227619171142578 10.67821884155273 -5.149848937988281 10.67821884155273 C -9.844169616699219 10.67821884155273 -11.33226013183594 10.70873641967773 -11.7083740234375 10.73677062988281 C -11.80277252197266 10.76053237915039 -11.90915679931641 10.77424240112305 -12.0289306640625 10.77424240112305 C -12.16323089599609 10.77424240112305 -12.45131683349609 10.7695198059082 -12.81605529785156 10.76354217529297 C -13.01943206787109 10.76021194458008 -13.24966430664063 10.75643920898438 -13.48653411865234 10.75296401977539 C -8.851593017578125 16.903076171875 -2.239547729492188 22.57095718383789 5.324104309082031 26.84845542907715 C 13.60947799682617 31.53411865234375 22.30074310302734 34.11461639404297 29.79687881469727 34.11461639404297 C 33.91565704345703 34.11461639404297 38.60186767578125 33.41628265380859 43.34890747070313 32.0950927734375 C 47.98773193359375 30.80401802062988 52.71426773071289 28.91309356689453 57.0175666809082 26.62672996520996 C 61.40182876586914 24.29735565185547 65.3670654296875 21.5438175201416 68.48458099365234 18.6638298034668 C 71.32099151611328 16.04351997375488 73.45128631591797 13.35661125183105 74.83492279052734 10.65748596191406 C 74.4908447265625 10.65786743164063 74.12125396728516 10.65805435180664 73.72370147705078 10.65805435180664 C 72.23068237304688 10.65805435180664 70.55716705322266 10.65545654296875 68.78539276123047 10.65269470214844 C 66.92047119140625 10.6497917175293 64.9920654296875 10.64679336547852 63.18235397338867 10.64679336547852 M 63.18235778808594 9.646797180175781 C 66.69034576416016 9.646797180175781 70.639892578125 9.658050537109375 73.72370910644531 9.658050537109375 C 74.72272491455078 9.658050537109375 75.63052368164063 9.656867980957031 76.4033203125 9.653743743896484 C 70.7041015625 23.3221435546875 47.19384002685547 35.11461639404297 29.79687881469727 35.11461639404297 C 13.80905532836914 35.11461639404297 -5.7138671875 23.84020614624023 -15.427734375 9.772117614746094 C -15.45098876953125 9.749141693115234 -15.14891815185547 9.741405487060547 -14.71451568603516 9.741401672363281 C -13.8193359375 9.741401672363281 -12.36181640625 9.774246215820313 -12.02893829345703 9.774246215820313 C -11.98212432861328 9.774246215820313 -11.95759582519531 9.773597717285156 -11.9599609375 9.772117614746094 C -12.07225799560547 9.701694488525391 -9.402595520019531 9.678211212158203 -5.14984130859375 9.678211212158203 C 3.356430053710938 9.678211212158203 18.19854354858398 9.772117614746094 29.79687881469727 9.772117614746094 C 32.07231903076172 9.772117614746094 46.01445388793945 9.710941314697266 59.24433135986328 9.653743743896484 C 60.42824935913086 9.648624420166016 61.76977157592773 9.646797180175781 63.18235778808594 9.646797180175781 Z\"\n                stroke=\"none\"\n                fill=\"#336cf9\"\n              />\n            </g>\n          </svg>\n          <input\n            type=\"file\"\n            accept=\".jpg, .png, .jpeg\"\n            onChange={(e) => {\n              const file = e.target.files[0];\n              const cdn = process.env.REACT_APP_CDN_HOST;\n              if (file) {\n                let imgLink = \"\";\n                const formData = new FormData();\n                for (var _file of e.target.files) {\n                  formData.append(\"file\", _file);\n                }\n                fetch(`${cdn}/upload`, {\n                  method: \"POST\",\n                  body: formData,\n                })\n                  .then((res) => res.json())\n                  .then((data) => {\n                    if (data.code === \"ok\") {\n                      imgLink = cdn + \"/\" + data.files[0];\n                      updateProfileInfo({ profileImg: imgLink }).then(\n                        (data) => {\n                          if (data.user) {\n                            setUser((prev) => ({\n                              ...prev,\n                              profileImg: data.user.profileImg,\n                            }));\n                          }\n                        }\n                      );\n                    } else {\n                      setMsg(\n                        <>\n                          <button onClick={() => setMsg(null)}>Okay</button>\n                          <div>\n                            <Err_svg />\n                            <h4>Image upload failed</h4>\n                          </div>\n                        </>\n                      );\n                    }\n                  })\n                  .catch((err) => {\n                    setMsg(\n                      <>\n                        <button onClick={() => setMsg(null)}>Okay</button>\n                        <div>\n                          <Err_svg />\n                          <h4>Image upload failed. Make sure you're online.</h4>\n                        </div>\n                      </>\n                    );\n                  });\n              }\n            }}\n          />\n          <label>Edit</label>\n        </div>\n        <div>\n          <p className=\"name\">{user.firstName + \" \" + user.lastName}</p>\n          <p className=\"id\">Delivery pay ID: {user.userId || user._id}</p>\n        </div>\n      </div>\n      <div className=\"settings\">\n        <div className=\"head\">Account Settings</div>\n        <ul>\n          <DataEdit\n            label=\"Name\"\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"First name\"\n                    defaultValue={user.firstName}\n                    name=\"firstName\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    placeholder=\"last name\"\n                    defaultValue={user.lastName}\n                    name=\"lastName\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.firstName + \" \" + user.lastName}\n          />\n          <DataEdit\n            label=\"Phone Number\"\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"Phone Number\"\n                    defaultValue={user.phone}\n                    name=\"phone\"\n                    required={true}\n                    pattern=\"^(\\+91|91|1|)\\d{10}$\"\n                  />\n                </section>\n              </>\n            }\n            value={user.phone}\n          />\n          <DataEdit\n            label=\"Email\"\n            fields={\n              <>\n                <section>\n                  <input\n                    type=\"email\"\n                    placeholder=\"Phone Number\"\n                    defaultValue={user.email}\n                    name=\"email\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.email}\n          />\n          <DataEdit\n            label=\"Password\"\n            onError={() => setMismatchPass(true)}\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    required={true}\n                    type=\"password\"\n                    onChange={(e) => setMismatchPass(false)}\n                  />\n                </section>\n                <section>\n                  <input\n                    placeholder=\"Confirm password\"\n                    name=\"confirm_password\"\n                    required={true}\n                    type=\"password\"\n                    onChange={(e) => setMismatchPass(false)}\n                  />\n                </section>\n                {mismatchPass && (\n                  <p className=\"errMsg\">Password did not match.</p>\n                )}\n              </>\n            }\n            value=\"••••••••••••\"\n          />\n          <DataEdit\n            label=\"Gender\"\n            fields={\n              <>\n                <section>\n                  <input\n                    placeholder=\"Gender\"\n                    defaultValue={user.gender}\n                    name=\"gender\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.gender}\n          />\n          <DataEdit\n            label=\"Age\"\n            fields={\n              <>\n                <section>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Age\"\n                    defaultValue={user.age}\n                    name=\"age\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={user.age}\n          />\n          <DataEdit\n            label=\"Address\"\n            fields={\n              <>\n                <section>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Address\"\n                    defaultValue={user.address.street}\n                    name=\"address.street\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    type=\"text\"\n                    placeholder=\"City\"\n                    defaultValue={user.address.city}\n                    name=\"address.city\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    type=\"text\"\n                    placeholder=\"State\"\n                    defaultValue={user.address.state}\n                    name=\"address.state\"\n                    required={true}\n                  />\n                </section>\n                <section>\n                  <input\n                    type=\"number\"\n                    placeholder=\"PIN Code\"\n                    defaultValue={user.address.zip}\n                    name=\"address.zip\"\n                    required={true}\n                  />\n                </section>\n              </>\n            }\n            value={`${user.address?.street || \"\"} ${user.address?.city || \"\"} ${\n              user.address?.state || \"\"\n            } ${user.address?.zip || \"\"}`}\n          />\n        </ul>\n      </div>\n      <div className=\"kyc\">\n        <div className=\"head\">KYC</div>\n        <ul>\n          <DataEdit\n            label=\"KYC\"\n            setMsg={setMsg}\n            formData={kycFiles}\n            fields={\n              <>\n                <section>\n                  <label>Upload files for verification.</label>\n                  <FileInput\n                    multiple={true}\n                    prefill={user.kyc?.files}\n                    name=\"kyc.files\"\n                    onChange={(files) => setKycFiles(files)}\n                  />\n                </section>\n              </>\n            }\n            value={\n              <>\n                <p>Status: {user.kyc?.verified ? \"Verified\" : \"Unverified\"}</p>\n                <label>Files for verification:</label>\n                <ul className=\"thumbs\">\n                  <Media links={user.kyc?.files} />\n                </ul>\n              </>\n            }\n          />\n        </ul>\n      </div>\n      <div className=\"paymentMethods\">\n        <div className=\"head\">Payment Methods</div>\n        <ul className=\"methods\">\n          {user.paymentMethods.map((method, i) => (\n            <SinglePaymentMethod key={i} setMsg={setMsg} method={method} />\n          ))}\n          {user.paymentMethods?.length === 0 && <p>No payment method added.</p>}\n        </ul>\n      </div>\n      {\n        //   <div className=\"socials\">\n        //   <div className=\"head\">Connect Social Accounts</div>\n        //   <ul className=\"providers\">\n        //     {user.googleId ? (\n        //       <GoogleLogin\n        //         className=\"google\"\n        //         clientId=\"978249749020-kjq65au1n373ur5oap7n4ebo2fq1jdhq.apps.googleusercontent.com\"\n        //         buttonText=\"Disconnect from Google\"\n        //         onSuccess={disconnectFromGoogle}\n        //         onFailure={disconnectFromGoogle}\n        //         cookiePolicy={\"single_host_origin\"}\n        //       />\n        //     ) : (\n        //       <GoogleLogin\n        //         className=\"google\"\n        //         clientId=\"978249749020-kjq65au1n373ur5oap7n4ebo2fq1jdhq.apps.googleusercontent.com\"\n        //         buttonText=\"Connect with Google\"\n        //         onSuccess={addGoogleId}\n        //         onFailure={addGoogleId}\n        //         cookiePolicy={\"single_host_origin\"}\n        //       />\n        //     )}\n        //   </ul>\n        // </div>\n      }\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\nconst SinglePaymentMethod = ({ method, setMsg }) => {\n  const { setUser } = useContext(SiteContext);\n  const [edit, setEdit] = useState(false);\n  const deletePaymentMethod = useCallback((method) => {\n    fetch(\"/api/deletePaymentMethod\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: method._id }),\n    })\n      .then((res) => res.json())\n      .then(({ code }) => {\n        if (code === \"ok\") {\n          setUser((prev) => ({\n            ...prev,\n            paymentMethods: prev.paymentMethods.filter(\n              (item) => item._id !== method._id\n            ),\n          }));\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Payment method could not be deleted.</h4>\n              </div>\n            </>\n          );\n        }\n      });\n  }, []);\n  return (\n    <li>\n      <div className=\"actions\">\n        <button className=\"edit\" onClick={() => setEdit(method.__t)}>\n          Edit\n        </button>\n        <button\n          className=\"delete\"\n          onClick={() => {\n            return Confirm({\n              label: \"Payment method delete\",\n              question: \"Do you want to delete this payment method?\",\n              callback: () => deletePaymentMethod(method),\n            });\n          }}\n        >\n          Delete\n        </button>\n      </div>\n      {method.__t === \"BankCard\" && (\n        <>\n          <BankCard card={method} />\n          {edit === method.__t && (\n            <Modal\n              open={edit}\n              head={true}\n              label=\"Edit Payment Method\"\n              setOpen={setEdit}\n              className=\"editPaymentMethod\"\n            >\n              <BankCardForm\n                prefill={method}\n                onSuccess={(paymentMethod) => {\n                  if (paymentMethod) {\n                    setEdit(false);\n                    setMsg(\n                      <>\n                        <button onClick={() => setMsg(null)}>Okay</button>\n                        <div>\n                          <Succ_svg />\n                          <h4>Payment method updated.</h4>\n                        </div>\n                      </>\n                    );\n                  }\n                }}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n      {method.__t === \"BankAccount\" && (\n        <>\n          <BankAccount account={method} />\n          {edit === method.__t && (\n            <Modal\n              open={edit}\n              head={true}\n              label=\"Edit Payment Method\"\n              setOpen={setEdit}\n              className=\"editPaymentMethod\"\n            >\n              <NetBankingForm\n                prefill={method}\n                onSuccess={(paymentMethod) => {\n                  if (paymentMethod) {\n                    setEdit(false);\n                    setMsg(\n                      <>\n                        <button onClick={() => setMsg(null)}>Okay</button>\n                        <div>\n                          <Succ_svg />\n                          <h4>Payment method updated.</h4>\n                        </div>\n                      </>\n                    );\n                  }\n                }}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n    </li>\n  );\n};\n\nconst DataEdit = ({ label, fields, value, onError, setMsg, formData }) => {\n  const { setUser } = useContext(SiteContext);\n  const [edit, setEdit] = useState(false);\n  const form = useRef(null);\n  const submit = async (e) => {\n    e.preventDefault();\n    let allData = {};\n    for (var [field, value] of new FormData(e.target).entries()) {\n      allData[field] = value;\n    }\n    if (allData.password && allData.password !== allData.confirm_password) {\n      onError?.();\n      return;\n    }\n    if (allData[\"address.city\"]) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        let lat = position.coords.latitude;\n        let long = position.coords.longitude;\n        allData[\"address.location\"] = {\n          type: \"Point\",\n          coordinates: [long, lat],\n        };\n      });\n    }\n    if (allData[\"kyc.files\"]) {\n      allData[\"kyc.files\"] =\n        (await UploadFiles({ files: formData, setMsg })) || [];\n    }\n    if (allData[\"gst.detail.files\"]) {\n      allData[\"gst.detail.files\"] =\n        (await UploadFiles({ files: formData, setMsg })) || [];\n    }\n    fetch(\"/api/editUserProfile\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(allData),\n    })\n      .then((res) => res.json())\n      .then(({ user }) => {\n        if (user) {\n          setUser(user);\n          setEdit(false);\n        } else {\n          alert(\"someting went wrong\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"someting went wrong\");\n      });\n  };\n  return (\n    <li>\n      <p className=\"label\">{label}</p>\n      <form ref={form} onSubmit={submit}>\n        {edit ? (\n          <div className=\"inputs\">{fields}</div>\n        ) : (\n          <div className=\"currentValue\">{value}</div>\n        )}\n        <div className=\"btns\">\n          {edit ? (\n            <>\n              <button key=\"submit\" type=\"submit\">\n                Save changes\n              </button>\n              <button key=\"cancel\" type=\"button\" onClick={() => setEdit(false)}>\n                Cancel\n              </button>\n            </>\n          ) : (\n            <button key=\"edit\" type=\"button\" onClick={() => setEdit(true)}>\n              Edit\n            </button>\n          )}\n        </div>\n      </form>\n    </li>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}