{"version":3,"sources":["components/Forms.js","components/Support.js"],"names":["MilestoneForm","action","client","onSuccess","definedAmount","order","refund","strict","useContext","SiteContext","user","config","setUser","useState","loading","setLoading","userDetail","clientDetail","dscr","setDscr","amount","setAmount","fee","setFee","msg","setMsg","onTimeout","useRef","requestMilestone","useCallback","fetch","method","headers","body","JSON","stringify","buyer_id","_id","then","res","json","data","code","onClick","catch","err","console","log","createMilestone","seller","to","useEffect","fix","className","onSubmit","e","preventDefault","toast","current","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","onClose","draggable","progress","undefined","readOnly","min","defaultValue","required","onChange","target","value","toString","firstName","lastName","type","src","profileImg","phone","email","address","street","city","zip","open","MilestoneReleaseForm","milestone","setReleaseForm","AddressForm","onCancel","name","setName","setPhone","setZip","locality","setLocatily","setStreet","setCity","state","setState","landmark","setLandmark","altPhone","setAltPhone","htmlFor","resiz","DisputeForm","setDisputeForm","issue","setIssue","caseFiles","setCaseFiles","submit","a","length","UploadFiles","files","fileLinks","milestoneId","defendantId","_case","options","role","label","multiple","accept","TicketForm","setMilestone","transaction","setTransaction","setFiles","message","setMessage","ticket","TicketReplyForm","require","BugReportForm","Tickets","history","location","pathname","ticketForm","setTicketForm","total","setTotal","tickets","setTickets","column","sort","setSort","dateRange","setDateRange","page","setPage","search","setSearch","perPage","setPerPage","startDate","moment","time","format","endDate","Date","setHours","URLSearchParams","q","dateFrom","dateTo","pageInfo","count","style","display","xmlns","width","height","viewBox","id","d","transform","fill","opacity","placeholder","range","cellSpacing","cellPadding","prev","map","item","push","createdAt","status","currentPage","btns","head","setOpen","newTicket","SingleTicket","match","setTicket","replyForm","setReplyForm","params","updatedAt","verification","buyer","__t","note","messages","reverse","i","links","Support","userType","faqs","setFaqs","bugReport","setBugReport","path","component","ques","ans"],"mappings":"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","file":"static/js/14.f85cb24a.chunk.js","sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport {\n  NumberInput,\n  Combobox,\n  Err_svg,\n  FileInput,\n  UploadFiles,\n  Img,\n} from \"./Elements\";\nimport { Link } from \"react-router-dom\";\nimport { Modal } from \"./Modal\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const MilestoneForm = ({\n  action,\n  client,\n  onSuccess,\n  definedAmount,\n  order,\n  refund,\n  strict,\n}) => {\n  const { user, setUser, config } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [addressForm, setAddressForm] = useState(false);\n  const [userDetail, setUserDetail] = useState({ ...user });\n  const [clientDetail, setClientDetail] = useState({ ...client });\n  const [dscr, setDscr] = useState(\"\");\n  const [amount, setAmount] = useState(definedAmount || \"\");\n  const [fee, setFee] = useState(0);\n  const [msg, setMsg] = useState(null);\n  const onTimeout = useRef();\n  const requestMilestone = useCallback(() => {\n    fetch(\"/api/requestMilestone\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        buyer_id: client._id,\n        amount,\n        dscr,\n        order,\n        refund,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.({ ...data });\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not request milestone. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not request milestone. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [clientDetail, userDetail, amount, dscr]);\n  const createMilestone = useCallback(() => {\n    fetch(\"/api/createMilestone\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        seller: { ...clientDetail },\n        amount,\n        dscr,\n        order,\n        refund,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.({ ...data });\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Insufficient fund</h4>\n                <Link to=\"/account/profile/wallet\">\n                  Add Money to your wallet now.\n                </Link>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not create milestone. Try again</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not create milestone. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [clientDetail, userDetail, amount, dscr]);\n  useEffect(() => {\n    setFee(() => {\n      return ((+amount / 100) * config.fee).fix();\n    });\n  }, [amount]);\n  return (\n    <>\n      <form\n        className=\"milestonesForm\"\n        onSubmit={(e) => {\n          setLoading(true);\n          e.preventDefault();\n          toast(\n            <div className=\"toast\">\n              Milestone is being{\" \"}\n              {action === \"create\" ? \"created.\" : \"requested.\"}{\" \"}\n              <button\n                className=\"undo\"\n                onClick={() => {\n                  onTimeout.current = null;\n                }}\n              >\n                Undo\n              </button>\n            </div>,\n            {\n              position: \"bottom-center\",\n              autoClose: 8000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              onClose: () => {\n                onTimeout.current?.();\n                setLoading(false);\n              },\n              draggable: true,\n              progress: undefined,\n            }\n          );\n          if (action === \"create\") {\n            onTimeout.current = createMilestone;\n          } else {\n            onTimeout.current = requestMilestone;\n          }\n        }}\n      >\n        <section className=\"transactionDetail\">\n          <section className=\"amount\">\n            <label>Amount</label>\n            <NumberInput\n              readOnly={strict}\n              min={10}\n              defaultValue={definedAmount || 0}\n              required={true}\n              onChange={(e) => setAmount((+e.target.value).toString())}\n            />\n          </section>\n          {amount && (\n            <>\n              {action === \"create\" && (\n                <label className=\"receivable\">\n                  {client.firstName} {client.lastName} will recieve ₹\n                  {(amount - fee).fix()}\n                </label>\n              )}\n              {action === \"request\" && (\n                <label className=\"receivable\">\n                  You will recieve ₹{(amount - fee).fix()}\n                </label>\n              )}\n            </>\n          )}\n          <section>\n            <label>Detail</label>\n            <input\n              value={dscr}\n              required={true}\n              onChange={(e) => setDscr(e.target.value)}\n            />\n          </section>\n          <button type=\"submit\">\n            {action === \"create\" ? \"Create Milestone\" : \"Request Milestone\"}\n          </button>\n        </section>\n        <section className=\"clientDetail\">\n          {action === \"request\" && (\n            <>\n              <Img src={client?.profileImg || \"/profile-user.jpg\"} />\n              <label>Buyer Information</label>\n              <div className=\"detail\">\n                <section className=\"profileDetail\">\n                  <p className=\"name\">\n                    {client?.firstName + \" \" + client?.lastName}\n                  </p>\n                  <p className=\"phone\">{client?.phone}</p>\n                  <p className=\"email\">{client?.email}</p>\n                </section>\n                {client?.address?.street && (\n                  <section className=\"address\">\n                    <p className=\"street\">\n                      {client.address?.street}, {client.address?.city},{\" \"}\n                      {client.address?.zip}\n                    </p>\n                  </section>\n                )}\n              </div>\n            </>\n          )}\n          {action === \"request\" ? null : (\n            <div className=\"sellerInfo\">\n              <Img src={clientDetail?.profileImg || \"/profile-user.jpg\"} />\n              <label>Seller Information</label>\n              <div className=\"detail\">\n                <section className=\"profileDetail\">\n                  <p className=\"name\">\n                    {clientDetail?.firstName} {clientDetail?.lastName}\n                  </p>\n                  <p className=\"phone\">{clientDetail?.phone}</p>\n                  <p className=\"email\">{clientDetail?.email}</p>\n                </section>\n              </div>\n            </div>\n          )}\n        </section>\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nexport const MilestoneReleaseForm = ({\n  milestone,\n  setReleaseForm,\n  onSuccess,\n}) => {\n  const [amount, setAmount] = useState(milestone.amount);\n  const [msg, setMsg] = useState(null);\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        fetch(\"/api/releaseMilestone\", {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ _id: milestone._id, amount }),\n        })\n          .then((res) => res.json())\n          .then(({ code, milestone }) => {\n            if (milestone) {\n              onSuccess?.(milestone);\n            } else if (code === 403) {\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Err_svg />\n                    <h4>Could not release Milestone due to low balance.</h4>\n                  </div>\n                </>\n              );\n            } else {\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Err_svg />\n                    <h4>Could not release Milestone.</h4>\n                  </div>\n                </>\n              );\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not release Milestone. Make sure you're online.</h4>\n              </div>\n            </>;\n          });\n      }}\n    >\n      You sure want to release this Milestone?\n      {\n        // <label>How much money you want to release?</label>\n        //   <NumberInput\n        //   defaultValue={amount}\n        //   onChange={(e) => setAmount(e.target.value)}\n        // />\n      }\n      <section className=\"btns\">\n        <button type=\"submit\">Confirm</button>\n        <button\n          className=\"cancel\"\n          type=\"button\"\n          onClick={() => setReleaseForm(false)}\n        >\n          Cancel\n        </button>\n      </section>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </form>\n  );\n};\n\nexport const AddressForm = ({ client, onSuccess, onCancel }) => {\n  const [name, setName] = useState(\n    client ? client.name || client.firstName + \" \" + client.lastName : \"\"\n  );\n  const [phone, setPhone] = useState(client?.phone || \"\");\n  const [zip, setZip] = useState(client?.address?.zip || \"\");\n  const [locality, setLocatily] = useState(client?.address?.locality || \"\");\n  const [street, setStreet] = useState(client?.address?.street || \"\");\n  const [city, setCity] = useState(client?.address?.city || \"\");\n  const [state, setState] = useState(client?.address?.state || \"\");\n  const [landmark, setLandmark] = useState(client?.address?.landmark || \"\");\n  const [altPhone, setAltPhone] = useState(client?.address?.altPhone || \"\");\n  return (\n    <form\n      className=\"addressForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSuccess?.({\n          address: {\n            name,\n            phone,\n            street,\n            city,\n            state,\n            zip,\n            locality,\n            landmark,\n            altPhone,\n          },\n        });\n      }}\n    >\n      <section>\n        <label htmlFor=\"name\">Full Name</label>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"phone\">Phone Number</label>\n        <input\n          value={phone}\n          onChange={(e) => setPhone(e.target.value)}\n          type=\"tel\"\n          name=\"phone\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"zip\">PIN Code</label>\n        <input\n          value={zip}\n          onChange={(e) => setZip(e.target.value)}\n          type=\"number\"\n          name=\"zip\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"locality\">Locality</label>\n        <input\n          value={locality}\n          onChange={(e) => setLocatily(e.target.value)}\n          type=\"text\"\n          name=\"locality\"\n          required={true}\n        />\n      </section>\n      <section className=\"street\">\n        <label htmlFor=\"address\">Address</label>\n        <textarea\n          value={street}\n          onChange={(e) => setStreet(e.target.value)}\n          resiz=\"off\"\n          type=\"text\"\n          name=\"address\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"city\">City</label>\n        <input\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n          type=\"text\"\n          name=\"city\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"state\">State</label>\n        <input\n          value={state}\n          onChange={(e) => setState(e.target.value)}\n          type=\"text\"\n          name=\"state\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"landmark\">Landmark (Optional)</label>\n        <input\n          value={landmark}\n          onChange={(e) => setLandmark(e.target.value)}\n          type=\"text\"\n          name=\"landmark\"\n        />\n      </section>\n      <section>\n        <label htmlFor=\"altPhone\">Alternate Phone (Optional)</label>\n        <input\n          value={altPhone}\n          onChange={(e) => setAltPhone(e.target.value)}\n          type=\"tel\"\n          name=\"altPhone\"\n        />\n      </section>\n      <button className=\"save\">Save</button>\n      <button className=\"cancel\" type=\"button\" onClick={() => onCancel?.()}>\n        Cancel\n      </button>\n      <section className=\"pBtm\" />\n    </form>\n  );\n};\n\nexport const DisputeForm = ({ milestone, setDisputeForm, onSuccess }) => {\n  const [issue, setIssue] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [dscr, setDscr] = useState(\"\");\n  const [caseFiles, setCaseFiles] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = caseFiles.length\n      ? await UploadFiles({\n          files: caseFiles,\n          setMsg,\n        })\n      : [];\n    fetch(\"/api/fileDispute\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        issue,\n        milestoneId: milestone._id,\n        defendantId: milestone.client._id,\n        _case: { dscr, files: fileLinks },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.milestone);\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>\n                  Insufficient fund! you have to have ₹500 in your wallet to\n                  file a dispute.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not file dispute.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(true);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not file dispute. make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"disputeForm\" onSubmit={submit}>\n        <h4>You feel like you are getting scammed?</h4>\n        <section>\n          <label htmlFor=\"issue\">Issue</label>\n          <Combobox\n            name=\"issue\"\n            options={\n              milestone.role === \"buyer\"\n                ? [\n                    {\n                      label: \"Buyer Not Releasing Payments\",\n                      value: \"Buyer Not Releasing Payments\",\n                    },\n                  ]\n                : [\n                    {\n                      label: \"Goods Not Received\",\n                      value: \"Goods Not Received\",\n                    },\n                    {\n                      label: \"Services Not Received\",\n                      value: \"Services Not Received\",\n                    },\n                    {\n                      label: \"Damaged\",\n                      value: \"Damaged\",\n                    },\n                    {\n                      label: \"Not As Agreed\",\n                      value: \"Not As Agreed\",\n                    },\n                    {\n                      label: \"Not As Displayed\",\n                      value: \"Not As Displayed\",\n                    },\n                  ]\n            }\n            onChange={(e) => {\n              setIssue(e.value);\n            }}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"description\">Description</label>\n          <TextareaAutosize\n            name=\"description\"\n            value={dscr}\n            required={true}\n            onChange={(e) => setDscr(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">\n            Upload images to prove your case. ie: Product of image, proof of\n            delivery.\n          </label>\n          <FileInput\n            multiple={true}\n            accept=\"audio/*,video/*,image/*\"\n            onChange={(e) => setCaseFiles(e)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport const TicketForm = ({ onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [issue, setIssue] = useState(\"\");\n  const [milestone, setMilestone] = useState(\"\");\n  const [transaction, setTransaction] = useState(\"\");\n  const [files, setFiles] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = files.length ? await UploadFiles({ files, setMsg }) : [];\n    fetch(\"/api/openTicket\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        issue,\n        milestone,\n        transaction,\n        message: {\n          body: message,\n          files: fileLinks,\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.ticket);\n        } else if (data.message === \"milestone ID is invalid\") {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Milestone Id is invalid.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Ticket could not be submitted.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Ticket could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"ticketForm\" onSubmit={submit}>\n        <section>\n          <label>Issue</label>\n          <input\n            value={issue}\n            required={true}\n            onChange={(e) => setIssue(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Milestone ID (optional)</label>\n          <input\n            value={milestone}\n            onChange={(e) => setMilestone(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Transaction ID (optional)</label>\n          <input\n            value={transaction}\n            onChange={(e) => setTransaction(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Detail</label>\n          <TextareaAutosize\n            required={true}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">Upload relevant files (optional)</label>\n          <FileInput onChange={(files) => setFiles(files)} />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\nexport const TicketReplyForm = ({ _id, onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = files.length ? await UploadFiles({ files, setMsg }) : [];\n    fetch(\"/api/addTicketReply\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id,\n        message: { body: message, files: fileLinks },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.ticket);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Reply could not be submitted.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Reply could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"ticketReplyForm\" onSubmit={submit}>\n        <section>\n          <label>Message</label>\n          <TextareaAutosize\n            required={true}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">Upload relevant files (optional)</label>\n          <FileInput\n            accept=\"audio/*,video/*,image/*\"\n            multiple={true}\n            onChange={(files) => setFiles(files)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  lazy,\n  useContext,\n} from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { Modal, Confirm } from \"./Modal\";\nimport {\n  Arrow_left_svg,\n  Combobox,\n  X_svg,\n  Err_svg,\n  Succ_svg,\n  Pagination,\n  Chev_down_svg,\n  Media,\n  Moment,\n  moment,\n  InputDateRange,\n} from \"./Elements\";\nimport { TicketForm, TicketReplyForm } from \"./Forms\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nrequire(\"./styles/singleTicket.scss\");\nrequire(\"./styles/table.scss\");\n\nconst BugReportForm = ({ onSuccess }) => {\n  const { user } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [name, setName] = useState(\n    user ? user.firstName + \" \" + user.lastName : \"\"\n  );\n  const [phone, setPhone] = useState(user ? user.phone : \"\");\n  const [issue, setIssue] = useState(\"\");\n  const [dscr, setDscr] = useState(\"\");\n  const [msg, setMsg] = useState(null);\n  const submit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    fetch(\"/api/bugReport\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name,\n        phone,\n        issue,\n        dscr,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.();\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Report could not be submitted.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Report could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form onSubmit={submit}>\n        <section>\n          <label>Name</label>\n          <input value={name} onChange={(e) => setName(e.target.value)} />\n        </section>\n        <section>\n          <label>Phone</label>\n          <input value={phone} onChange={(e) => setPhone(e.target.value)} />\n        </section>\n        <section>\n          <label>Issue</label>\n          <input value={issue} onChange={(e) => setIssue(e.target.value)} />\n        </section>\n        <section>\n          <label>Description</label>\n          <TextareaAutosize\n            value={dscr}\n            onChange={(e) => setDscr(e.target.value)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\">Submit</button>\n        </section>\n      </form>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport const Tickets = ({ history, location, pathname }) => {\n  const [ticketForm, setTicketForm] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [tickets, setTickets] = useState([]);\n  const [sort, setSort] = useState({ column: \"createdAt\", order: \"dsc\" });\n  const [dateRange, setDateRange] = useState(null);\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState(\"\");\n  const [perPage, setPerPage] = useState(20);\n  useEffect(() => {\n    const startDate = moment({\n      time: dateRange?.startDate,\n      format: \"YYYY-MM-DD\",\n    });\n    const endDate = moment({\n      time: new Date(dateRange?.endDate)?.setHours(24, 0, 0, 0),\n      format: \"YYYY-MM-DD\",\n    });\n    fetch(\n      `/api/getTickets?${new URLSearchParams({\n        page,\n        perPage,\n        sort: sort.column,\n        sort: sort.order,\n        ...(search && { q: search }),\n        ...(dateRange && {\n          dateFrom: startDate,\n          dateTo: endDate,\n        }),\n      }).toString()}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setTickets(data.tickets.tickets);\n          setTotal(data.tickets.pageInfo[0]?.count || 0);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not get tickets.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get tickets. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [page, perPage, sort.column, sort.order, search, dateRange]);\n  return (\n    <div className=\"table ticketContainer\">\n      <div style={{ display: \"none\" }}>\n        <X_svg />\n      </div>\n      <div className=\"head\">\n        <h3>Tickets</h3>\n        <button onClick={() => setTicketForm(true)}>Open Ticket</button>\n      </div>\n      <div className=\"filters\">\n        <section>\n          <label>Total:</label>\n          {total}\n        </section>\n        <section>\n          <label>Per Page:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"20\", value: 20 },\n              { label: \"30\", value: 30 },\n              { label: \"50\", value: 50 },\n            ]}\n            onChange={(e) => setPerPage(e.value)}\n          />\n        </section>\n        <section className=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 23 23\"\n          >\n            <path\n              id=\"Icon_ionic-ios-search\"\n              data-name=\"Icon ionic-ios-search\"\n              d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n              transform=\"translate(-4.5 -4.493)\"\n              fill=\"#707070\"\n              opacity=\"0.74\"\n            />\n          </svg>\n          <input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search issue\"\n          />\n          {search && (\n            <button onClick={() => setSearch(\"\")}>\n              <X_svg />\n            </button>\n          )}\n        </section>\n        <section className={`date`}>\n          <InputDateRange\n            dateRange={dateRange}\n            onChange={(range) => setDateRange(range)}\n          />\n        </section>\n      </div>\n      <table cellSpacing={0} cellPadding={0}>\n        <thead>\n          <tr>\n            <th\n              className={\n                sort.column === \"createdAt\" ? \"sort\" + \" \" + sort.order : \"\"\n              }\n              onClick={() => {\n                setSort((prev) => ({\n                  column: \"createdAt\",\n                  order: prev.order === \"dsc\" ? \"asc\" : \"dsc\",\n                }));\n              }}\n            >\n              Date <Chev_down_svg />\n            </th>\n            <th\n              className={\n                sort.column === \"issue\" ? \"sort\" + \" \" + sort.order : \"\"\n              }\n              onClick={() => {\n                setSort((prev) => ({\n                  column: \"issue\",\n                  order: prev.order === \"dsc\" ? \"asc\" : \"dsc\",\n                }));\n              }}\n            >\n              Issue <Chev_down_svg />\n            </th>\n            <th\n              className={\n                sort.column === \"status\" ? \"sort\" + \" \" + sort.order : \"\"\n              }\n              onClick={() => {\n                setSort((prev) => ({\n                  column: \"status\",\n                  order: prev.order === \"dsc\" ? \"asc\" : \"dsc\",\n                }));\n              }}\n            >\n              Status <Chev_down_svg />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {tickets.map((item) => (\n            <tr\n              key={item._id}\n              onClick={() =>\n                history.push(`/account/support/ticket/${item._id}`)\n              }\n            >\n              <td>\n                <Moment format=\"hh:mm a, DD MMM, YYYY\">{item.createdAt}</Moment>\n              </td>\n              <td>{item.issue}</td>\n              <td>{item.status}</td>\n            </tr>\n          ))}\n          {tickets.length === 0 && (\n            <tr className=\"placeholder\">\n              <td>Nothing yet.</td>\n            </tr>\n          )}\n        </tbody>\n        <tfoot>\n          <tr>\n            <Pagination\n              total={total}\n              perPage={perPage}\n              currentPage={page}\n              btns={5}\n              setPage={setPage}\n            />\n          </tr>\n        </tfoot>\n      </table>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n      <Modal\n        open={ticketForm}\n        head={true}\n        label=\"Open Ticket\"\n        setOpen={setTicketForm}\n        className=\"formModal ticketFormModal\"\n      >\n        <TicketForm\n          onSuccess={(newTicket) => {\n            setTicketForm(false);\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Succ_svg />\n                  <h4>Ticket successfully submitted.</h4>\n                </div>\n              </>\n            );\n            setTickets((prev) => [newTicket, ...prev]);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\nexport const SingleTicket = ({ history, match }) => {\n  const [ticket, setTicket] = useState(null);\n  const [msg, setMsg] = useState(null);\n  const [replyForm, setReplyForm] = useState(false);\n  useEffect(() => {\n    fetch(`/api/singleTicket?_id=${match.params._id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setTicket(data.ticket);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => history.push(\"/account/support/ticket\")}>\n                Go Back\n              </button>\n              <div>\n                <Err_svg />\n                <h4>Ticket could not be found.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => history.push(\"/account/support/ticket\")}>\n              Go Back\n            </button>\n            <div>\n              <Err_svg />\n              <h4>Ticket could not be found.</h4>\n            </div>\n          </>\n        );\n      });\n  }, []);\n  if (ticket) {\n    return (\n      <div className=\"ticket\">\n        <div className=\"detail\">\n          <Link to=\"/account/support/ticket\" className=\"back\">\n            <Arrow_left_svg />\n            Go Back\n          </Link>\n          <ul className=\"summery\">\n            <li className=\"head\">Ticket Summery</li>\n            <li>\n              <label>Issue:</label>\n              <p>{ticket.issue}</p>\n            </li>\n            <li>\n              <label>Status:</label>\n              <p>{ticket.status}</p>\n            </li>\n            <li>\n              <label>Created at:</label>\n              <p>\n                <Moment format=\"hh:mm a, DD MMM, YYYY\">\n                  {ticket.createdAt}\n                </Moment>\n              </p>\n            </li>\n            <li>\n              <label>Last Activity:</label>\n              <p>\n                <Moment format=\"hh:mm a, DD MMM, YYYY\">\n                  {ticket.updatedAt}\n                </Moment>\n              </p>\n            </li>\n          </ul>\n          <ul className=\"milestoneDetail\">\n            <li className=\"head\">Milestone Detail</li>\n            {ticket.milestone ? (\n              <>\n                <li>\n                  <label>Amount:</label>\n                  <p>{ticket.milestone.amount}</p>\n                </li>\n                <li>\n                  <label>Status:</label>\n                  <p>{ticket.milestone.status}</p>\n                </li>\n                <li>\n                  <label>Created at:</label>\n                  <p>\n                    <Moment format=\"hh:mm a, DD MMM, YYYY\">\n                      {ticket.milestone.createdAt}\n                    </Moment>\n                  </p>\n                </li>\n                <li>\n                  <label>Verification Method:</label>\n                  <p>{ticket.milestone.verification}</p>\n                </li>\n                <li>\n                  <label>Seller:</label>\n                  <p>\n                    {ticket.milestone.seller.firstName +\n                      \" \" +\n                      ticket.milestone.seller.lastName}\n                  </p>\n                </li>\n                <li>\n                  <label>Buyer:</label>\n                  <p>\n                    {ticket.milestone.buyer.firstName +\n                      \" \" +\n                      ticket.milestone.buyer.lastName}\n                  </p>\n                </li>\n                <li>\n                  <label>Description:</label>\n                  <p>{ticket.milestone.dscr}</p>\n                </li>\n              </>\n            ) : (\n              <li className=\"placeholder\">No Detail provided</li>\n            )}\n          </ul>\n          <ul className=\"transactionDetail\">\n            <li className=\"head\">Transaction Detail</li>\n            {ticket.transaction ? (\n              <>\n                <li>\n                  <label>Type:</label>\n                  <p>{ticket.transaction.__t}</p>\n                </li>\n                <li>\n                  <label>Amount:</label>\n                  <p>{ticket.transaction.amount}</p>\n                </li>\n                <li>\n                  <label>Note:</label>\n                  <p>{ticket.transaction.note}</p>\n                </li>\n                <li>\n                  <label>Created at:</label>\n                  <p>\n                    <Moment format=\"hh:mm a, DD MMM, YYYY\">\n                      {ticket.transaction.createdAt}\n                    </Moment>\n                  </p>\n                </li>\n              </>\n            ) : (\n              <li className=\"placeholder\">No Detail provided</li>\n            )}\n          </ul>\n          <div className=\"pBtm\" />\n        </div>\n        <div className=\"messages\">\n          <div className=\"head\">\n            Messages <button onClick={() => setReplyForm(true)}>Reply</button>\n          </div>\n          <ul>\n            {[...ticket.messages].reverse().map((item, i) => (\n              <li key={i}>\n                <div className=\"user\">\n                  <p className=\"name\">\n                    {item.user.name}\n                    <span>•</span>\n                    <span className=\"role\">{item.user.role}</span>\n                    <span className=\"date\">\n                      <Moment format=\"hh:mm a, DD MMM, YYYY\">\n                        {item.createdAt}\n                      </Moment>\n                    </span>\n                  </p>\n                </div>\n                <p className=\"message\">{item.message.body}</p>\n                {item.message.files.length > 0 && (\n                  <div className=\"thumbs\">\n                    <Media links={item.message.files} />\n                  </div>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <Modal\n          open={replyForm}\n          head={true}\n          label=\"Add reply to Ticket\"\n          setOpen={setReplyForm}\n          className=\"ticketReplyFormModal\"\n        >\n          <TicketReplyForm\n            _id={ticket._id}\n            onSuccess={(newTicket) => {\n              setReplyForm(false);\n              setTicket((prev) => ({ ...prev, messages: newTicket.messages }));\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4>Reply has been submitted.</h4>\n                  </div>\n                </>\n              );\n            }}\n          />\n        </Modal>\n        <Modal open={msg} className=\"msg\">\n          {msg}\n        </Modal>\n      </div>\n    );\n  }\n  return (\n    <div className=\"ticket loading\">\n      <div className=\"detail\">\n        <Link to=\"/account/support/ticket\" className=\"back\">\n          <Arrow_left_svg />\n          Go Back\n        </Link>\n        <ul className=\"summery\">\n          <li className=\"head\">Ticket Summery</li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n        </ul>\n        <ul className=\"milestoneDetail\">\n          <li className=\"head\">Milestone Detail</li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n        </ul>\n        <ul className=\"transactionDetail\">\n          <li className=\"head\">Transaction Detail</li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n        </ul>\n      </div>\n      <div className=\"messages\">\n        <div className=\"head\">Messages</div>\n        <ul>\n          <li>\n            <div className=\"user\">\n              <div className=\"img\" />\n              <p className=\"name\" />\n            </div>\n            <p className=\"message\">\n              <span />\n            </p>\n            <div className=\"thumbs\">\n              <div className=\"img\" />\n              <div className=\"img\" />\n            </div>\n          </li>\n          <li>\n            <div className=\"user\">\n              <div className=\"img\" />\n              <p className=\"name\" />\n            </div>\n            <p className=\"message\">\n              <span />\n            </p>\n            <div className=\"thumbs\">\n              <div className=\"img\" />\n              <div className=\"img\" />\n              <div className=\"img\" />\n            </div>\n          </li>\n        </ul>\n      </div>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </div>\n  );\n};\nconst Support = ({ history, location, match }) => {\n  const { userType } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [faqs, setFaqs] = useState([]);\n  const [bugReport, setBugReport] = useState(false);\n  useEffect(() => {\n    fetch(`/api/faq?audience=${userType}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setFaqs(data.faqs);\n        }\n      });\n  }, [userType]);\n  return (\n    <>\n      <Switch>\n        <Route path=\"/account/support/ticket/:_id\" component={SingleTicket} />\n        <Route path=\"/account/support/ticket\" component={Tickets} />\n        <Route path=\"/\">\n          <div className=\"supportContainer\">\n            <div className=\"benner\">\n              <div className=\"clas\">\n                <Link className=\"ticketLink\" to=\"/account/support/ticket\">\n                  My Tickets\n                </Link>\n                <button\n                  className=\"ticketLink\"\n                  onClick={() => setBugReport(true)}\n                >\n                  Report Bug\n                </button>\n              </div>\n              <h1>Support portal</h1>\n              <p>\n                Search for an answer or browse help topics to create a ticket\n              </p>\n              <form onSubmit={(e) => e.preventDefault()}>\n                <input\n                  type=\"text\"\n                  required={true}\n                  placeholder=\"Eg: How does the Delivery pay Hold Works\"\n                  onChange={(e) => {\n                    fetch(`/api/faq?audience=${userType}&q=${e.target.value}`)\n                      .then((res) => res.json())\n                      .then((data) => {\n                        if (data.code === \"ok\") {\n                          setFaqs(data.faqs);\n                        }\n                      });\n                  }}\n                />\n                <button type=\"submit\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"31.336\"\n                    height=\"31.336\"\n                    viewBox=\"0 0 31.336 31.336\"\n                  >\n                    <path\n                      id=\"Path_1935\"\n                      data-name=\"Path 1935\"\n                      d=\"M25.4,22.708H23.98l-.5-.484a11.663,11.663,0,1,0-1.254,1.254l.484.5V25.4l8.958,8.94,2.67-2.67Zm-10.75,0a8.062,8.062,0,1,1,8.063-8.063A8.052,8.052,0,0,1,14.646,22.708Z\"\n                      transform=\"translate(-3 -3)\"\n                      fill=\"#707070\"\n                    />\n                  </svg>\n                </button>\n              </form>\n            </div>\n            <div className=\"content\">\n              <div className=\"faq\">\n                <h3 className=\"label\">\n                  FAQs {userType && <span>(for {userType}s)</span>}\n                </h3>\n                <ul>\n                  {faqs.map((item) => (\n                    <li key={item._id}>\n                      <h4>{item.ques}</h4>\n                      <p className=\"ans\">{item.ans}</p>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"feedback\">\n                <form>\n                  <textarea required={true} />\n                  <button>Submit</button>\n                </form>\n                <Link className=\"feedbackLink\" to=\"/support/myFeedbacks\">\n                  Submitted Feedbacks\n                </Link>\n              </div>\n            </div>\n          </div>\n        </Route>\n      </Switch>\n      <Modal\n        open={bugReport}\n        setOpen={setBugReport}\n        className=\"bugReport\"\n        label=\"Report Bug\"\n        head={true}\n      >\n        <BugReportForm\n          onSuccess={() => {\n            setBugReport(false);\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Succ_svg />\n                  <h4>Report has been submitted.</h4>\n                </div>\n              </>\n            );\n          }}\n        />\n      </Modal>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport default Support;\n"],"sourceRoot":""}