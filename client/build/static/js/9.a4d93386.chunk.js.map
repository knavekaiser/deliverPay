{"version":3,"sources":["components/Support.js"],"names":["require","BugReportForm","onSuccess","user","useContext","SiteContext","useState","loading","setLoading","firstName","lastName","name","setName","phone","setPhone","issue","setIssue","dscr","setDscr","msg","setMsg","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","code","onClick","catch","err","console","log","value","onChange","target","className","open","Tickets","history","location","pathname","ticketForm","setTicketForm","total","setTotal","tickets","setTickets","column","order","sort","setSort","dateRange","setDateRange","page","setPage","search","setSearch","perPage","setPerPage","useEffect","startDate","moment","time","format","endDate","Date","setHours","URLSearchParams","q","dateFrom","dateTo","toString","pageInfo","count","style","display","defaultValue","options","label","xmlns","width","height","viewBox","id","d","transform","fill","opacity","placeholder","range","cellSpacing","cellPadding","prev","map","item","push","_id","createdAt","status","length","currentPage","btns","head","setOpen","newTicket","SingleTicket","match","ticket","setTicket","replyForm","setReplyForm","params","to","updatedAt","milestone","amount","verification","seller","buyer","transaction","__t","note","messages","reverse","i","role","message","files","links","Support","userType","faqs","setFaqs","bugReport","setBugReport","path","component","type","required","ques","ans"],"mappings":"6TA2BAA,EAAQ,KACRA,EAAQ,KAER,IAAMC,EAAgB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACfC,EAASC,qBAAWC,KAApBF,KACR,EAA8BG,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBACtBH,EAAOA,EAAKM,UAAY,IAAMN,EAAKO,SAAW,IADhD,mBAAOC,EAAP,KAAaC,EAAb,KAGA,EAA0BN,mBAASH,EAAOA,EAAKU,MAAQ,IAAvD,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAAwBV,mBAAS,IAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAsBZ,mBAAS,MAA/B,mBAAOa,EAAP,KAAYC,EAAZ,KA6CA,OACE,qCACE,uBAAMC,SA9CK,SAACC,GACdA,EAAEC,iBACFf,GAAW,GACXgB,MAAM,iBAAkB,CACtBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBlB,OACAE,QACAE,QACAE,WAGDa,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLzB,GAAW,GACO,OAAdyB,EAAKC,KACE,OAAThC,QAAS,IAATA,OAEAkB,EACE,qCACE,wBAAQe,QAAS,kBAAMf,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,0EAMTgB,OAAM,SAACC,GACN7B,GAAW,GACX8B,QAAQC,IAAIF,GACZjB,EACE,qCACE,wBAAQe,QAAS,kBAAMf,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,oGAQR,UACE,oCACE,yCACA,uBAAOoB,MAAO7B,EAAM8B,SAAU,SAACnB,GAAD,OAAOV,EAAQU,EAAEoB,OAAOF,aAExD,oCACE,0CACA,uBAAOA,MAAO3B,EAAO4B,SAAU,SAACnB,GAAD,OAAOR,EAASQ,EAAEoB,OAAOF,aAE1D,oCACE,0CACA,uBAAOA,MAAOzB,EAAO0B,SAAU,SAACnB,GAAD,OAAON,EAASM,EAAEoB,OAAOF,aAE1D,oCACE,gDACA,cAAC,IAAD,CACEA,MAAOvB,EACPwB,SAAU,SAACnB,GAAD,OAAOJ,EAAQI,EAAEoB,OAAOF,aAGtC,yBAASG,UAAU,OAAnB,SACE,wBAAQA,UAAU,SAAlB,yBAGJ,cAAC,QAAD,CAAOC,KAAMzB,EAAKwB,UAAU,MAA5B,SACGxB,IAEFZ,GACC,qBAAKoC,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAOZE,EAAU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QACxB,GAD0D,EAAzBC,SAAyB,EAAfC,SACP1C,oBAAS,IAA7C,mBAAO2C,EAAP,KAAmBC,EAAnB,KACA,EAAsB5C,mBAAS,MAA/B,mBAAOa,EAAP,KAAYC,EAAZ,KACA,EAA0Bd,mBAAS,GAAnC,mBAAO6C,EAAP,KAAcC,EAAd,KACA,EAA8B9C,mBAAS,IAAvC,mBAAO+C,EAAP,KAAgBC,EAAhB,KACA,EAAwBhD,mBAAS,CAAEiD,OAAQ,YAAaC,MAAO,QAA/D,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCpD,mBAAS,MAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAAwBtD,mBAAS,GAAjC,mBAAOuD,EAAP,KAAaC,EAAb,KACA,EAA4BxD,mBAAS,IAArC,mBAAOyD,EAAP,KAAeC,EAAf,KACA,EAA8B1D,mBAAS,IAAvC,mBAAO2D,EAAP,KAAgBC,EAAhB,KAqDA,OApDAC,qBAAU,WAAO,IAAD,EACRC,EAAYC,YAAO,CACvBC,KAAI,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAWS,UACjBG,OAAQ,eAEJC,EAAUH,YAAO,CACrBC,KAAI,UAAE,IAAIG,KAAJ,OAASd,QAAT,IAASA,OAAT,EAASA,EAAWa,gBAAtB,aAAE,EAA8BE,SAAS,GAAI,EAAG,EAAG,GACvDH,OAAQ,eAEV/C,MAAM,mBAAD,OACgB,IAAImD,gBAAJ,qCACjBd,OACAI,UACAR,KAAMA,EAAKF,QAHM,OAIXE,EAAKD,OACPO,GAAU,CAAEa,EAAGb,IACfJ,GAAa,CACfkB,SAAUT,EACVU,OAAQN,KAETO,aAEFjD,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACoB,IAAD,EAAN,OAAdA,EAAKC,MACPoB,EAAWrB,EAAKoB,QAAQA,SACxBD,GAAS,UAAAnB,EAAKoB,QAAQ2B,SAAS,UAAtB,eAA0BC,QAAS,IAE5C7D,EACE,qCACE,wBAAQe,QAAS,kBAAMf,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,kEAMTgB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZjB,EACE,qCACE,wBAAQe,QAAS,kBAAMf,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,6FAKT,CAACyC,EAAMI,EAASR,EAAKF,OAAQE,EAAKD,MAAOO,EAAQJ,IAElD,sBAAKhB,UAAU,wBAAf,UACE,qBAAKuC,MAAO,CAAEC,QAAS,QAAvB,SACE,cAAC,IAAD,MAEF,sBAAKxC,UAAU,OAAf,UACE,yCACA,wBAAQR,QAAS,kBAAMe,GAAc,IAArC,4BAEF,sBAAKP,UAAU,UAAf,UACE,oCACE,2CACCQ,KAEH,oCACE,8CACA,cAAC,IAAD,CACEiC,aAAc,EACdC,QAAS,CACP,CAAEC,MAAO,KAAM9C,MAAO,IACtB,CAAE8C,MAAO,KAAM9C,MAAO,IACtB,CAAE8C,MAAO,KAAM9C,MAAO,KAExBC,SAAU,SAACnB,GAAD,OAAO4C,EAAW5C,EAAEkB,aAGlC,0BAASG,UAAU,SAAnB,UACE,qBACE4C,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YAJV,SAME,sBACEC,GAAG,wBACH,YAAU,wBACVC,EAAE,6LACFC,UAAU,yBACVC,KAAK,UACLC,QAAQ,WAGZ,uBACEvD,MAAOuB,EACPtB,SAAU,SAACnB,GAAD,OAAO0C,EAAU1C,EAAEoB,OAAOF,QACpCwD,YAAY,iBAEbjC,GACC,wBAAQ5B,QAAS,kBAAM6B,EAAU,KAAjC,SACE,cAAC,IAAD,SAIN,yBAASrB,UAAS,OAAlB,SACE,cAAC,IAAD,CACEgB,UAAWA,EACXlB,SAAU,SAACwD,GAAD,OAAWrC,EAAaqC,WAIxC,wBAAOC,YAAa,EAAGC,YAAa,EAApC,UACE,gCACE,+BACE,qBACExD,UACkB,cAAhBc,EAAKF,OAAyB,QAAeE,EAAKD,MAAQ,GAE5DrB,QAAS,WACPuB,GAAQ,SAAC0C,GAAD,MAAW,CACjB7C,OAAQ,YACRC,MAAsB,QAAf4C,EAAK5C,MAAkB,MAAQ,WAP5C,kBAWO,cAAC,IAAD,OAEP,qBACEb,UACkB,UAAhBc,EAAKF,OAAqB,QAAeE,EAAKD,MAAQ,GAExDrB,QAAS,WACPuB,GAAQ,SAAC0C,GAAD,MAAW,CACjB7C,OAAQ,QACRC,MAAsB,QAAf4C,EAAK5C,MAAkB,MAAQ,WAP5C,mBAWQ,cAAC,IAAD,OAER,qBACEb,UACkB,WAAhBc,EAAKF,OAAsB,QAAeE,EAAKD,MAAQ,GAEzDrB,QAAS,WACPuB,GAAQ,SAAC0C,GAAD,MAAW,CACjB7C,OAAQ,SACRC,MAAsB,QAAf4C,EAAK5C,MAAkB,MAAQ,WAP5C,oBAWS,cAAC,IAAD,YAIb,kCACGH,EAAQgD,KAAI,SAACC,GAAD,OACX,qBAEEnE,QAAS,kBACPW,EAAQyD,KAAR,kCAAwCD,EAAKE,OAHjD,UAME,6BACE,cAAC,IAAD,CAAQjC,OAAO,wBAAf,SAAwC+B,EAAKG,cAE/C,6BAAKH,EAAKvF,QACV,6BAAKuF,EAAKI,WATLJ,EAAKE,QAYM,IAAnBnD,EAAQsD,QACP,oBAAIhE,UAAU,cAAd,SACE,mDAIN,gCACE,6BACE,cAAC,IAAD,CACEQ,MAAOA,EACPc,QAASA,EACT2C,YAAa/C,EACbgD,KAAM,EACN/C,QAASA,WAKjB,cAAC,QAAD,CAAOlB,KAAMzB,EAAKwB,UAAU,MAA5B,SACGxB,IAEH,cAAC,QAAD,CACEyB,KAAMK,EACN6D,MAAM,EACNxB,MAAM,cACNyB,QAAS7D,EACTP,UAAU,4BALZ,SAOE,cAAC,aAAD,CACEzC,UAAW,SAAC8G,GACV9D,GAAc,GACd9B,EACE,qCACE,wBAAQe,QAAS,kBAAMf,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,uEAINkC,GAAW,SAAC8C,GAAD,OAAWY,GAAX,mBAAyBZ,gBAOnCa,EAAe,SAAC,GAAwB,IAAtBnE,EAAqB,EAArBA,QAASoE,EAAY,EAAZA,MACtC,EAA4B5G,mBAAS,MAArC,mBAAO6G,EAAP,KAAeC,EAAf,KACA,EAAsB9G,mBAAS,MAA/B,mBAAOa,EAAP,KAAYC,EAAZ,KACA,EAAkCd,oBAAS,GAA3C,mBAAO+G,EAAP,KAAkBC,EAAlB,KAoCA,OAnCAnD,qBAAU,WACR3C,MAAM,yBAAD,OAA0B0F,EAAMK,OAAOf,MACzC1E,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACa,OAAdA,EAAKC,KACPkF,EAAUnF,EAAKkF,QAEf/F,EACE,qCACE,wBAAQe,QAAS,kBAAMW,EAAQyD,KAAK,4BAApC,qBAGA,gCACE,cAAC,IAAD,IACA,sEAMTnE,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZjB,EACE,qCACE,wBAAQe,QAAS,kBAAMW,EAAQyD,KAAK,4BAApC,qBAGA,gCACE,cAAC,IAAD,IACA,wEAKT,IACCY,EAEA,sBAAKxE,UAAU,SAAf,UACE,sBAAKA,UAAU,SAAf,UACE,eAAC,IAAD,CAAM6E,GAAG,0BAA0B7E,UAAU,OAA7C,UACE,cAAC,IAAD,IADF,aAIA,qBAAIA,UAAU,UAAd,UACE,oBAAIA,UAAU,OAAd,4BACA,+BACE,2CACA,4BAAIwE,EAAOpG,WAEb,+BACE,4CACA,4BAAIoG,EAAOT,YAEb,+BACE,gDACA,4BACE,cAAC,IAAD,CAAQnC,OAAO,wBAAf,SACG4C,EAAOV,iBAId,+BACE,mDACA,4BACE,cAAC,IAAD,CAAQlC,OAAO,wBAAf,SACG4C,EAAOM,oBAKhB,qBAAI9E,UAAU,kBAAd,UACE,oBAAIA,UAAU,OAAd,8BACCwE,EAAOO,UACN,qCACE,+BACE,4CACA,4BAAIP,EAAOO,UAAUC,YAEvB,+BACE,4CACA,4BAAIR,EAAOO,UAAUhB,YAEvB,+BACE,gDACA,4BACE,cAAC,IAAD,CAAQnC,OAAO,wBAAf,SACG4C,EAAOO,UAAUjB,iBAIxB,+BACE,yDACA,4BAAIU,EAAOO,UAAUE,kBAEvB,+BACE,4CACA,4BACGT,EAAOO,UAAUG,OAAOpH,UACvB,IACA0G,EAAOO,UAAUG,OAAOnH,cAG9B,+BACE,2CACA,4BACGyG,EAAOO,UAAUI,MAAMrH,UACtB,IACA0G,EAAOO,UAAUI,MAAMpH,cAG7B,+BACE,iDACA,4BAAIyG,EAAOO,UAAUzG,aAIzB,oBAAI0B,UAAU,cAAd,mCAGJ,qBAAIA,UAAU,oBAAd,UACE,oBAAIA,UAAU,OAAd,gCACCwE,EAAOY,YACN,qCACE,+BACE,0CACA,4BAAIZ,EAAOY,YAAYC,SAEzB,+BACE,4CACA,4BAAIb,EAAOY,YAAYJ,YAEzB,+BACE,0CACA,4BAAIR,EAAOY,YAAYE,UAEzB,+BACE,gDACA,4BACE,cAAC,IAAD,CAAQ1D,OAAO,wBAAf,SACG4C,EAAOY,YAAYtB,oBAM5B,oBAAI9D,UAAU,cAAd,mCAGJ,qBAAKA,UAAU,YAEjB,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,sBACW,wBAAQR,QAAS,kBAAMmF,GAAa,IAApC,sBAEX,6BACG,YAAIH,EAAOe,UAAUC,UAAU9B,KAAI,SAACC,EAAM8B,GAAP,OAClC,+BACE,qBAAKzF,UAAU,OAAf,SACE,oBAAGA,UAAU,OAAb,UACG2D,EAAKnG,KAAKQ,KACX,0CACA,sBAAMgC,UAAU,OAAhB,SAAwB2D,EAAKnG,KAAKkI,OAClC,sBAAM1F,UAAU,OAAhB,SACE,cAAC,IAAD,CAAQ4B,OAAO,wBAAf,SACG+B,EAAKG,mBAKd,mBAAG9D,UAAU,UAAb,SAAwB2D,EAAKgC,QAAQ3G,OACpC2E,EAAKgC,QAAQC,MAAM5B,OAAS,GAC3B,qBAAKhE,UAAU,SAAf,SACE,cAAC,IAAD,CAAO6F,MAAOlC,EAAKgC,QAAQC,YAhBxBH,WAuBf,cAAC,QAAD,CACExF,KAAMyE,EACNP,MAAM,EACNxB,MAAM,sBACNyB,QAASO,EACT3E,UAAU,uBALZ,SAOE,cAAC,kBAAD,CACE6D,IAAKW,EAAOX,IACZtG,UAAW,SAAC8G,GACVM,GAAa,GACbF,GAAU,SAAChB,GAAD,mBAAC,eAAeA,GAAhB,IAAsB8B,SAAUlB,EAAUkB,cACpD9G,EACE,qCACE,wBAAQe,QAAS,kBAAMf,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,uEAOZ,cAAC,QAAD,CAAOwB,KAAMzB,EAAKwB,UAAU,MAA5B,SACGxB,OAMP,sBAAKwB,UAAU,iBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,eAAC,IAAD,CAAM6E,GAAG,0BAA0B7E,UAAU,OAA7C,UACE,cAAC,IAAD,IADF,aAIA,qBAAIA,UAAU,UAAd,UACE,oBAAIA,UAAU,OAAd,4BACA,+BACE,0BACA,yBAEF,+BACE,0BACA,yBAEF,+BACE,0BACA,4BAGJ,qBAAIA,UAAU,kBAAd,UACE,oBAAIA,UAAU,OAAd,8BACA,+BACE,0BACA,yBAEF,+BACE,0BACA,yBAEF,+BACE,0BACA,4BAGJ,qBAAIA,UAAU,oBAAd,UACE,oBAAIA,UAAU,OAAd,gCACA,+BACE,0BACA,yBAEF,+BACE,0BACA,yBAEF,+BACE,0BACA,+BAIN,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,OAAf,sBACA,+BACE,+BACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,QACf,mBAAGA,UAAU,YAEf,mBAAGA,UAAU,UAAb,SACE,2BAEF,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,QACf,qBAAKA,UAAU,cAGnB,+BACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,QACf,mBAAGA,UAAU,YAEf,mBAAGA,UAAU,UAAb,SACE,2BAEF,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,QACf,qBAAKA,UAAU,QACf,qBAAKA,UAAU,oBAKvB,cAAC,QAAD,CAAOC,KAAMzB,EAAKwB,UAAU,MAA5B,SACGxB,QAmIMsH,UA9HC,SAAC,GAAiC,EAA/B3F,QAA+B,EAAtBC,SAAsB,EAAZmE,MAAa,IACzCwB,EAAatI,qBAAWC,KAAxBqI,SACR,EAAsBpI,mBAAS,MAA/B,mBAAOa,EAAP,KAAYC,EAAZ,KACA,EAAwBd,mBAAS,IAAjC,mBAAOqI,EAAP,KAAaC,EAAb,KACA,EAAkCtI,oBAAS,GAA3C,mBAAOuI,EAAP,KAAkBC,EAAlB,KAUA,OATA3E,qBAAU,WACR3C,MAAM,qBAAD,OAAsBkH,IACxB5G,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACa,OAAdA,EAAKC,MACP0G,EAAQ3G,EAAK0G,WAGlB,CAACD,IAEF,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,+BAA+BC,UAAW/B,IACtD,cAAC,IAAD,CAAO8B,KAAK,0BAA0BC,UAAWnG,IACjD,cAAC,IAAD,CAAOkG,KAAK,IAAZ,SACE,sBAAKpG,UAAU,mBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAMA,UAAU,aAAa6E,GAAG,0BAAhC,wBAGA,wBACE7E,UAAU,aACVR,QAAS,kBAAM2G,GAAa,IAF9B,2BAOF,gDACA,8FAGA,uBAAMzH,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAAzB,UACE,uBACE0H,KAAK,OACLC,UAAU,EACVlD,YAAY,2CACZvD,SAAU,SAACnB,GACTE,MAAM,qBAAD,OAAsBkH,EAAtB,cAAoCpH,EAAEoB,OAAOF,QAC/CV,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACa,OAAdA,EAAKC,MACP0G,EAAQ3G,EAAK0G,YAKvB,wBAAQM,KAAK,SAAb,SACE,qBACE1D,MAAM,6BACNC,MAAM,SACNC,OAAO,SACPC,QAAQ,oBAJV,SAME,sBACEC,GAAG,YACH,YAAU,YACVC,EAAE,wKACFC,UAAU,mBACVC,KAAK,sBAMf,sBAAKnD,UAAU,UAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAIA,UAAU,QAAd,kBACQ+F,GAAY,yCAAYA,EAAZ,WAEpB,6BACGC,EAAKtC,KAAI,SAACC,GAAD,OACR,+BACE,6BAAKA,EAAK6C,OACV,mBAAGxG,UAAU,MAAb,SAAoB2D,EAAK8C,QAFlB9C,EAAKE,aAOpB,sBAAK7D,UAAU,WAAf,UACE,iCACE,0BAAUuG,UAAU,IACpB,+CAEF,cAAC,IAAD,CAAMvG,UAAU,eAAe6E,GAAG,uBAAlC,+CAQV,cAAC,QAAD,CACE5E,KAAMiG,EACN9B,QAAS+B,EACTnG,UAAU,YACV2C,MAAM,aACNwB,MAAM,EALR,SAOE,cAAC7G,EAAD,CACEC,UAAW,WACT4I,GAAa,GACb1H,EACE,qCACE,wBAAQe,QAAS,kBAAMf,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,wEAOZ,cAAC,QAAD,CAAOwB,KAAMzB,EAAKwB,UAAU,MAA5B,SACGxB,S","file":"static/js/9.a4d93386.chunk.js","sourcesContent":["import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  lazy,\n  useContext,\n} from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { Modal, Confirm } from \"./Modal\";\nimport {\n  Arrow_left_svg,\n  Combobox,\n  X_svg,\n  Err_svg,\n  Succ_svg,\n  Pagination,\n  Chev_down_svg,\n  Media,\n  Moment,\n  moment,\n  InputDateRange,\n} from \"./Elements\";\nimport { TicketForm, TicketReplyForm } from \"./Forms\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nrequire(\"./styles/singleTicket.scss\");\nrequire(\"./styles/table.scss\");\n\nconst BugReportForm = ({ onSuccess }) => {\n  const { user } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [name, setName] = useState(\n    user ? user.firstName + \" \" + user.lastName : \"\"\n  );\n  const [phone, setPhone] = useState(user ? user.phone : \"\");\n  const [issue, setIssue] = useState(\"\");\n  const [dscr, setDscr] = useState(\"\");\n  const [msg, setMsg] = useState(null);\n  const submit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    fetch(\"/api/bugReport\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name,\n        phone,\n        issue,\n        dscr,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.();\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Report could not be submitted.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Report could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form onSubmit={submit}>\n        <section>\n          <label>Name</label>\n          <input value={name} onChange={(e) => setName(e.target.value)} />\n        </section>\n        <section>\n          <label>Phone</label>\n          <input value={phone} onChange={(e) => setPhone(e.target.value)} />\n        </section>\n        <section>\n          <label>Issue</label>\n          <input value={issue} onChange={(e) => setIssue(e.target.value)} />\n        </section>\n        <section>\n          <label>Description</label>\n          <TextareaAutosize\n            value={dscr}\n            onChange={(e) => setDscr(e.target.value)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\">Submit</button>\n        </section>\n      </form>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport const Tickets = ({ history, location, pathname }) => {\n  const [ticketForm, setTicketForm] = useState(false);\n  const [msg, setMsg] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [tickets, setTickets] = useState([]);\n  const [sort, setSort] = useState({ column: \"createdAt\", order: \"dsc\" });\n  const [dateRange, setDateRange] = useState(null);\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState(\"\");\n  const [perPage, setPerPage] = useState(20);\n  useEffect(() => {\n    const startDate = moment({\n      time: dateRange?.startDate,\n      format: \"YYYY-MM-DD\",\n    });\n    const endDate = moment({\n      time: new Date(dateRange?.endDate)?.setHours(24, 0, 0, 0),\n      format: \"YYYY-MM-DD\",\n    });\n    fetch(\n      `/api/getTickets?${new URLSearchParams({\n        page,\n        perPage,\n        sort: sort.column,\n        sort: sort.order,\n        ...(search && { q: search }),\n        ...(dateRange && {\n          dateFrom: startDate,\n          dateTo: endDate,\n        }),\n      }).toString()}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setTickets(data.tickets.tickets);\n          setTotal(data.tickets.pageInfo[0]?.count || 0);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not get tickets.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get tickets. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [page, perPage, sort.column, sort.order, search, dateRange]);\n  return (\n    <div className=\"table ticketContainer\">\n      <div style={{ display: \"none\" }}>\n        <X_svg />\n      </div>\n      <div className=\"head\">\n        <h3>Tickets</h3>\n        <button onClick={() => setTicketForm(true)}>Open Ticket</button>\n      </div>\n      <div className=\"filters\">\n        <section>\n          <label>Total:</label>\n          {total}\n        </section>\n        <section>\n          <label>Per Page:</label>\n          <Combobox\n            defaultValue={0}\n            options={[\n              { label: \"20\", value: 20 },\n              { label: \"30\", value: 30 },\n              { label: \"50\", value: 50 },\n            ]}\n            onChange={(e) => setPerPage(e.value)}\n          />\n        </section>\n        <section className=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 23 23\"\n          >\n            <path\n              id=\"Icon_ionic-ios-search\"\n              data-name=\"Icon ionic-ios-search\"\n              d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n              transform=\"translate(-4.5 -4.493)\"\n              fill=\"#707070\"\n              opacity=\"0.74\"\n            />\n          </svg>\n          <input\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search issue\"\n          />\n          {search && (\n            <button onClick={() => setSearch(\"\")}>\n              <X_svg />\n            </button>\n          )}\n        </section>\n        <section className={`date`}>\n          <InputDateRange\n            dateRange={dateRange}\n            onChange={(range) => setDateRange(range)}\n          />\n        </section>\n      </div>\n      <table cellSpacing={0} cellPadding={0}>\n        <thead>\n          <tr>\n            <th\n              className={\n                sort.column === \"createdAt\" ? \"sort\" + \" \" + sort.order : \"\"\n              }\n              onClick={() => {\n                setSort((prev) => ({\n                  column: \"createdAt\",\n                  order: prev.order === \"dsc\" ? \"asc\" : \"dsc\",\n                }));\n              }}\n            >\n              Date <Chev_down_svg />\n            </th>\n            <th\n              className={\n                sort.column === \"issue\" ? \"sort\" + \" \" + sort.order : \"\"\n              }\n              onClick={() => {\n                setSort((prev) => ({\n                  column: \"issue\",\n                  order: prev.order === \"dsc\" ? \"asc\" : \"dsc\",\n                }));\n              }}\n            >\n              Issue <Chev_down_svg />\n            </th>\n            <th\n              className={\n                sort.column === \"status\" ? \"sort\" + \" \" + sort.order : \"\"\n              }\n              onClick={() => {\n                setSort((prev) => ({\n                  column: \"status\",\n                  order: prev.order === \"dsc\" ? \"asc\" : \"dsc\",\n                }));\n              }}\n            >\n              Status <Chev_down_svg />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {tickets.map((item) => (\n            <tr\n              key={item._id}\n              onClick={() =>\n                history.push(`/account/support/ticket/${item._id}`)\n              }\n            >\n              <td>\n                <Moment format=\"hh:mm a, DD MMM, YYYY\">{item.createdAt}</Moment>\n              </td>\n              <td>{item.issue}</td>\n              <td>{item.status}</td>\n            </tr>\n          ))}\n          {tickets.length === 0 && (\n            <tr className=\"placeholder\">\n              <td>Nothing yet.</td>\n            </tr>\n          )}\n        </tbody>\n        <tfoot>\n          <tr>\n            <Pagination\n              total={total}\n              perPage={perPage}\n              currentPage={page}\n              btns={5}\n              setPage={setPage}\n            />\n          </tr>\n        </tfoot>\n      </table>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n      <Modal\n        open={ticketForm}\n        head={true}\n        label=\"Open Ticket\"\n        setOpen={setTicketForm}\n        className=\"formModal ticketFormModal\"\n      >\n        <TicketForm\n          onSuccess={(newTicket) => {\n            setTicketForm(false);\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Succ_svg />\n                  <h4>Ticket successfully submitted.</h4>\n                </div>\n              </>\n            );\n            setTickets((prev) => [newTicket, ...prev]);\n          }}\n        />\n      </Modal>\n    </div>\n  );\n};\nexport const SingleTicket = ({ history, match }) => {\n  const [ticket, setTicket] = useState(null);\n  const [msg, setMsg] = useState(null);\n  const [replyForm, setReplyForm] = useState(false);\n  useEffect(() => {\n    fetch(`/api/singleTicket?_id=${match.params._id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setTicket(data.ticket);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => history.push(\"/account/support/ticket\")}>\n                Go Back\n              </button>\n              <div>\n                <Err_svg />\n                <h4>Ticket could not be found.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => history.push(\"/account/support/ticket\")}>\n              Go Back\n            </button>\n            <div>\n              <Err_svg />\n              <h4>Ticket could not be found.</h4>\n            </div>\n          </>\n        );\n      });\n  }, []);\n  if (ticket) {\n    return (\n      <div className=\"ticket\">\n        <div className=\"detail\">\n          <Link to=\"/account/support/ticket\" className=\"back\">\n            <Arrow_left_svg />\n            Go Back\n          </Link>\n          <ul className=\"summery\">\n            <li className=\"head\">Ticket Summery</li>\n            <li>\n              <label>Issue:</label>\n              <p>{ticket.issue}</p>\n            </li>\n            <li>\n              <label>Status:</label>\n              <p>{ticket.status}</p>\n            </li>\n            <li>\n              <label>Created at:</label>\n              <p>\n                <Moment format=\"hh:mm a, DD MMM, YYYY\">\n                  {ticket.createdAt}\n                </Moment>\n              </p>\n            </li>\n            <li>\n              <label>Last Activity:</label>\n              <p>\n                <Moment format=\"hh:mm a, DD MMM, YYYY\">\n                  {ticket.updatedAt}\n                </Moment>\n              </p>\n            </li>\n          </ul>\n          <ul className=\"milestoneDetail\">\n            <li className=\"head\">Milestone Detail</li>\n            {ticket.milestone ? (\n              <>\n                <li>\n                  <label>Amount:</label>\n                  <p>{ticket.milestone.amount}</p>\n                </li>\n                <li>\n                  <label>Status:</label>\n                  <p>{ticket.milestone.status}</p>\n                </li>\n                <li>\n                  <label>Created at:</label>\n                  <p>\n                    <Moment format=\"hh:mm a, DD MMM, YYYY\">\n                      {ticket.milestone.createdAt}\n                    </Moment>\n                  </p>\n                </li>\n                <li>\n                  <label>Verification Method:</label>\n                  <p>{ticket.milestone.verification}</p>\n                </li>\n                <li>\n                  <label>Seller:</label>\n                  <p>\n                    {ticket.milestone.seller.firstName +\n                      \" \" +\n                      ticket.milestone.seller.lastName}\n                  </p>\n                </li>\n                <li>\n                  <label>Buyer:</label>\n                  <p>\n                    {ticket.milestone.buyer.firstName +\n                      \" \" +\n                      ticket.milestone.buyer.lastName}\n                  </p>\n                </li>\n                <li>\n                  <label>Description:</label>\n                  <p>{ticket.milestone.dscr}</p>\n                </li>\n              </>\n            ) : (\n              <li className=\"placeholder\">No Detail provided</li>\n            )}\n          </ul>\n          <ul className=\"transactionDetail\">\n            <li className=\"head\">Transaction Detail</li>\n            {ticket.transaction ? (\n              <>\n                <li>\n                  <label>Type:</label>\n                  <p>{ticket.transaction.__t}</p>\n                </li>\n                <li>\n                  <label>Amount:</label>\n                  <p>{ticket.transaction.amount}</p>\n                </li>\n                <li>\n                  <label>Note:</label>\n                  <p>{ticket.transaction.note}</p>\n                </li>\n                <li>\n                  <label>Created at:</label>\n                  <p>\n                    <Moment format=\"hh:mm a, DD MMM, YYYY\">\n                      {ticket.transaction.createdAt}\n                    </Moment>\n                  </p>\n                </li>\n              </>\n            ) : (\n              <li className=\"placeholder\">No Detail provided</li>\n            )}\n          </ul>\n          <div className=\"pBtm\" />\n        </div>\n        <div className=\"messages\">\n          <div className=\"head\">\n            Messages <button onClick={() => setReplyForm(true)}>Reply</button>\n          </div>\n          <ul>\n            {[...ticket.messages].reverse().map((item, i) => (\n              <li key={i}>\n                <div className=\"user\">\n                  <p className=\"name\">\n                    {item.user.name}\n                    <span>•</span>\n                    <span className=\"role\">{item.user.role}</span>\n                    <span className=\"date\">\n                      <Moment format=\"hh:mm a, DD MMM, YYYY\">\n                        {item.createdAt}\n                      </Moment>\n                    </span>\n                  </p>\n                </div>\n                <p className=\"message\">{item.message.body}</p>\n                {item.message.files.length > 0 && (\n                  <div className=\"thumbs\">\n                    <Media links={item.message.files} />\n                  </div>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <Modal\n          open={replyForm}\n          head={true}\n          label=\"Add reply to Ticket\"\n          setOpen={setReplyForm}\n          className=\"ticketReplyFormModal\"\n        >\n          <TicketReplyForm\n            _id={ticket._id}\n            onSuccess={(newTicket) => {\n              setReplyForm(false);\n              setTicket((prev) => ({ ...prev, messages: newTicket.messages }));\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4>Reply has been submitted.</h4>\n                  </div>\n                </>\n              );\n            }}\n          />\n        </Modal>\n        <Modal open={msg} className=\"msg\">\n          {msg}\n        </Modal>\n      </div>\n    );\n  }\n  return (\n    <div className=\"ticket loading\">\n      <div className=\"detail\">\n        <Link to=\"/account/support/ticket\" className=\"back\">\n          <Arrow_left_svg />\n          Go Back\n        </Link>\n        <ul className=\"summery\">\n          <li className=\"head\">Ticket Summery</li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n        </ul>\n        <ul className=\"milestoneDetail\">\n          <li className=\"head\">Milestone Detail</li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n        </ul>\n        <ul className=\"transactionDetail\">\n          <li className=\"head\">Transaction Detail</li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n          <li>\n            <label></label>\n            <p></p>\n          </li>\n        </ul>\n      </div>\n      <div className=\"messages\">\n        <div className=\"head\">Messages</div>\n        <ul>\n          <li>\n            <div className=\"user\">\n              <div className=\"img\" />\n              <p className=\"name\" />\n            </div>\n            <p className=\"message\">\n              <span />\n            </p>\n            <div className=\"thumbs\">\n              <div className=\"img\" />\n              <div className=\"img\" />\n            </div>\n          </li>\n          <li>\n            <div className=\"user\">\n              <div className=\"img\" />\n              <p className=\"name\" />\n            </div>\n            <p className=\"message\">\n              <span />\n            </p>\n            <div className=\"thumbs\">\n              <div className=\"img\" />\n              <div className=\"img\" />\n              <div className=\"img\" />\n            </div>\n          </li>\n        </ul>\n      </div>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </div>\n  );\n};\nconst Support = ({ history, location, match }) => {\n  const { userType } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [faqs, setFaqs] = useState([]);\n  const [bugReport, setBugReport] = useState(false);\n  useEffect(() => {\n    fetch(`/api/faq?audience=${userType}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setFaqs(data.faqs);\n        }\n      });\n  }, [userType]);\n  return (\n    <>\n      <Switch>\n        <Route path=\"/account/support/ticket/:_id\" component={SingleTicket} />\n        <Route path=\"/account/support/ticket\" component={Tickets} />\n        <Route path=\"/\">\n          <div className=\"supportContainer\">\n            <div className=\"benner\">\n              <div className=\"clas\">\n                <Link className=\"ticketLink\" to=\"/account/support/ticket\">\n                  My Tickets\n                </Link>\n                <button\n                  className=\"ticketLink\"\n                  onClick={() => setBugReport(true)}\n                >\n                  Report Bug\n                </button>\n              </div>\n              <h1>Support portal</h1>\n              <p>\n                Search for an answer or browse help topics to create a ticket\n              </p>\n              <form onSubmit={(e) => e.preventDefault()}>\n                <input\n                  type=\"text\"\n                  required={true}\n                  placeholder=\"Eg: How does the Delivery pay Hold Works\"\n                  onChange={(e) => {\n                    fetch(`/api/faq?audience=${userType}&q=${e.target.value}`)\n                      .then((res) => res.json())\n                      .then((data) => {\n                        if (data.code === \"ok\") {\n                          setFaqs(data.faqs);\n                        }\n                      });\n                  }}\n                />\n                <button type=\"submit\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"31.336\"\n                    height=\"31.336\"\n                    viewBox=\"0 0 31.336 31.336\"\n                  >\n                    <path\n                      id=\"Path_1935\"\n                      data-name=\"Path 1935\"\n                      d=\"M25.4,22.708H23.98l-.5-.484a11.663,11.663,0,1,0-1.254,1.254l.484.5V25.4l8.958,8.94,2.67-2.67Zm-10.75,0a8.062,8.062,0,1,1,8.063-8.063A8.052,8.052,0,0,1,14.646,22.708Z\"\n                      transform=\"translate(-3 -3)\"\n                      fill=\"#707070\"\n                    />\n                  </svg>\n                </button>\n              </form>\n            </div>\n            <div className=\"content\">\n              <div className=\"faq\">\n                <h3 className=\"label\">\n                  FAQs {userType && <span>(for {userType}s)</span>}\n                </h3>\n                <ul>\n                  {faqs.map((item) => (\n                    <li key={item._id}>\n                      <h4>{item.ques}</h4>\n                      <p className=\"ans\">{item.ans}</p>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"feedback\">\n                <form>\n                  <textarea required={true} />\n                  <button>Submit</button>\n                </form>\n                <Link className=\"feedbackLink\" to=\"/support/myFeedbacks\">\n                  Submitted Feedbacks\n                </Link>\n              </div>\n            </div>\n          </div>\n        </Route>\n      </Switch>\n      <Modal\n        open={bugReport}\n        setOpen={setBugReport}\n        className=\"bugReport\"\n        label=\"Report Bug\"\n        head={true}\n      >\n        <BugReportForm\n          onSuccess={() => {\n            setBugReport(false);\n            setMsg(\n              <>\n                <button onClick={() => setMsg(null)}>Okay</button>\n                <div>\n                  <Succ_svg />\n                  <h4>Report has been submitted.</h4>\n                </div>\n              </>\n            );\n          }}\n        />\n      </Modal>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport default Support;\n"],"sourceRoot":""}