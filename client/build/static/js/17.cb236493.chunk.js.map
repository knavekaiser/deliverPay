{"version":3,"sources":["components/Forms.js","components/Hold.js"],"names":["MilestoneForm","action","client","onSuccess","definedAmount","order","refund","strict","useContext","SiteContext","user","config","setUser","useState","loading","setLoading","userDetail","clientDetail","dscr","setDscr","amount","setAmount","fee","setFee","msg","setMsg","onTimeout","useRef","requestMilestone","useCallback","fetch","method","headers","body","JSON","stringify","buyer_id","_id","then","res","json","data","code","milestone","onClick","catch","err","console","log","createMilestone","seller","to","useEffect","fix","className","onSubmit","e","preventDefault","toast","current","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","onClose","draggable","progress","undefined","readOnly","min","defaultValue","required","onChange","target","value","toString","firstName","lastName","type","src","profileImg","phone","email","address","street","city","zip","open","MilestoneReleaseForm","setReleaseForm","AddressForm","onCancel","name","setName","setPhone","setZip","locality","setLocatily","setStreet","setCity","state","setState","landmark","setLandmark","altPhone","setAltPhone","htmlFor","resiz","DisputeForm","setDisputeForm","issue","setIssue","caseFiles","setCaseFiles","submit","a","length","UploadFiles","files","fileLinks","milestoneId","defendantId","_case","options","role","label","multiple","accept","TicketForm","setMilestone","transaction","setTransaction","setFiles","message","setMessage","ticket","TicketReplyForm","require","CommonMilestoneElement","format","createdAt","status","dispute","SellerMilestone","setMilestones","useHistory","releaseForm","disputeForm","myCase","disputeFiledBy","plaintiff","defendant","case","approveMilestone","milestone_id","prev","map","item","Confirm","question","callback","head","setOpen","BuyerMilestone","declineMilestone","cancelRequest","filter","requestRelease","Hold","history","location","userType","match","milestones","total","setTotal","queryString","parse","search","page","setPage","perPage","setPerPage","q","replace","setSearch","setStatus","dateRange","setDateRange","column","sort","startDate","moment","time","endDate","Date","setHours","pathname","URLSearchParams","dateFrom","dateTo","style","display","xmlns","width","height","viewBox","id","d","transform","fill","opacity","placeholder","range","i","currentPage","btns"],"mappings":"+gBAgBaA,EAAgB,SAAC,GAQvB,IAAD,QAPJC,EAOI,EAPJA,OACAC,EAMI,EANJA,OACAC,EAKI,EALJA,UACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,OACAC,EACI,EADJA,OAEA,EAAkCC,qBAAWC,KAArCC,EAAR,EAAQA,KAAeC,GAAvB,EAAcC,QAAd,EAAuBD,QACvB,EAA8BE,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBACA,GADA,UACsCA,oBAAS,IAA/C,mBACA,GADA,UACoCA,mBAAS,eAAKH,KAAlD,mBAAOM,EAAP,KACA,GADA,KACwCH,mBAAS,eAAKX,KAAtD,mBAAOe,EAAP,KACA,GADA,KACwBJ,mBAAS,KAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA4BN,mBAAST,GAAiB,IAAtD,mBAAOgB,EAAP,KAAeC,EAAf,KACA,EAAsBR,mBAAS,GAA/B,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAAsBV,mBAAS,MAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACMC,GAAYC,mBACZC,GAAmBC,uBAAY,WACnCC,MAAM,wBAAyB,CAC7BC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,SAAUlC,EAAOmC,IACjBjB,SACAF,OACAb,QACAC,aAGDgC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL1B,GAAW,GACO,OAAd0B,EAAKC,KACE,OAATvC,QAAS,IAATA,KAAYsC,EAAKE,WAEjBlB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,mFAMToB,OAAM,SAACC,GACN/B,GAAW,GACXgC,QAAQC,IAAIF,GACZrB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,mGAKT,CAACR,EAAcD,EAAYI,EAAQF,IAChC+B,GAAkBpB,uBAAY,WAClCC,MAAM,uBAAwB,CAC5BC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBe,OAAO,eAAMjC,GACbG,SACAF,OACAb,QACAC,aAGDgC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL1B,GAAW,GACO,OAAd0B,EAAKC,KACE,OAATvC,QAAS,IAATA,KAAS,eAAQsC,IACM,MAAdA,EAAKC,KACdjB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,mDACA,cAAC,IAAD,CAAM0B,GAAG,0BAAT,kDAON1B,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,iFAMToB,OAAM,SAACC,GACN/B,GAAW,GACXgC,QAAQC,IAAIF,GACZrB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,kGAKT,CAACR,EAAcD,EAAYI,EAAQF,IAMtC,OALAkC,qBAAU,WACR7B,GAAO,WACL,QAAUH,EAAS,IAAOT,EAAOW,KAAK+B,WAEvC,CAACjC,IAEF,qCACE,uBACEkC,UAAU,iBACVC,SAAU,SAACC,GACTzC,GAAW,GACXyC,EAAEC,iBACFC,YACE,sBAAKJ,UAAU,QAAf,+BACqB,IACP,WAAXrD,EAAsB,WAAa,aAAc,IAClD,wBACEqD,UAAU,OACVV,QAAS,WACPlB,GAAUiC,QAAU,MAHxB,qBASF,CACEC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,QAAS,WAAO,IAAD,EACb,UAAAvC,GAAUiC,eAAV,cAAAjC,IACAX,GAAW,IAEbmD,WAAW,EACXC,cAAUC,IAIZ1C,GAAUiC,QADG,WAAX1D,EACkBgD,GAEArB,IAnC1B,UAuCE,0BAAS0B,UAAU,oBAAnB,UACE,0BAASA,UAAU,SAAnB,UACE,2CACA,cAAC,IAAD,CACEe,SAAU9D,EACV+D,IAAK,GACLC,aAAcnE,GAAiB,EAC/BoE,UAAU,EACVC,SAAU,SAACjB,GAAD,OAAOnC,IAAYmC,EAAEkB,OAAOC,OAAOC,kBAGhDxD,GACC,qCACc,WAAXnB,GACC,wBAAOqD,UAAU,aAAjB,UACGpD,EAAO2E,UADV,IACsB3E,EAAO4E,SAD7B,wBAEI1D,EAASE,GAAK+B,SAGR,YAAXpD,GACC,wBAAOqD,UAAU,aAAjB,qCACsBlC,EAASE,GAAK+B,YAK1C,oCACE,2CACA,uBACEsB,MAAOzD,EACPsD,UAAU,EACVC,SAAU,SAACjB,GAAD,OAAOrC,EAAQqC,EAAEkB,OAAOC,aAGtC,wBAAQI,KAAK,SAAb,SACc,WAAX9E,EAAsB,mBAAqB,yBAGhD,0BAASqD,UAAU,eAAnB,UACc,YAAXrD,GACC,qCACE,cAAC,IAAD,CAAK+E,KAAW,OAAN9E,QAAM,IAANA,OAAA,EAAAA,EAAQ+E,aAAc,sBAChC,sDACA,sBAAK3B,UAAU,SAAf,UACE,0BAASA,UAAU,gBAAnB,UACE,mBAAGA,UAAU,OAAb,UACS,OAANpD,QAAM,IAANA,OAAA,EAAAA,EAAQ2E,WAAY,KAApB,OAA0B3E,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQ4E,YAErC,mBAAGxB,UAAU,QAAb,gBAAsBpD,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAQgF,QAC9B,mBAAG5B,UAAU,QAAb,gBAAsBpD,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAQiF,YAEzB,OAANjF,QAAM,IAANA,GAAA,UAAAA,EAAQkF,eAAR,eAAiBC,SAChB,yBAAS/B,UAAU,UAAnB,SACE,oBAAGA,UAAU,SAAb,oBACGpD,EAAOkF,eADV,aACG,EAAgBC,OADnB,eAC6BnF,EAAOkF,eADpC,aAC6B,EAAgBE,KAD7C,IACoD,IADpD,UAEGpF,EAAOkF,eAFV,aAEG,EAAgBG,eAOjB,YAAXtF,EAAuB,KACtB,sBAAKqD,UAAU,aAAf,UACE,cAAC,IAAD,CAAK0B,KAAiB,OAAZ/D,QAAY,IAAZA,OAAA,EAAAA,EAAcgE,aAAc,sBACtC,uDACA,qBAAK3B,UAAU,SAAf,SACE,0BAASA,UAAU,gBAAnB,UACE,oBAAGA,UAAU,OAAb,iBACGrC,QADH,IACGA,OADH,EACGA,EAAc4D,UADjB,WAC6B5D,QAD7B,IAC6BA,OAD7B,EAC6BA,EAAc6D,YAE3C,mBAAGxB,UAAU,QAAb,gBAAsBrC,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAciE,QACpC,mBAAG5B,UAAU,QAAb,gBAAsBrC,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAckE,sBAO/CrE,GACC,qBAAKwC,UAAU,mBAAf,SACE,qBAAKA,UAAU,cAGnB,cAAC,QAAD,CAAOA,UAAU,MAAMkC,KAAMhE,EAA7B,SACGA,QAKIiE,EAAuB,SAAC,GAI9B,IAHL9C,EAGI,EAHJA,UACA+C,EAEI,EAFJA,eACAvF,EACI,EADJA,UAEA,EAA4BU,mBAAS8B,EAAUvB,QAA/C,mBAAOA,EAAP,KACA,GADA,KACsBP,mBAAS,OAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACA,OACE,uBACE8B,SAAU,SAACC,GACTA,EAAEC,iBACF3B,MAAM,wBAAyB,CAC7BC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEE,IAAKM,EAAUN,IAAKjB,aAE1CkB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,YAA0B,IAAvBI,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACTA,EACO,OAATxC,QAAS,IAATA,KAAYwC,GAEZlB,EADkB,MAATiB,EAEP,qCACE,wBAAQE,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,uFAMJ,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,wEAMToB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZ,WAGK,QAvCb,qDAsDE,0BAASQ,UAAU,OAAnB,UACE,wBAAQyB,KAAK,SAAb,qBACA,wBACEzB,UAAU,SACVyB,KAAK,SACLnC,QAAS,kBAAM8C,GAAe,IAHhC,uBAQF,cAAC,QAAD,CAAOF,KAAMhE,EAAK8B,UAAU,MAA5B,SACG9B,QAMImE,EAAc,SAAC,GAAqC,IAAD,cAAlCzF,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,UAAWyF,EAAe,EAAfA,SAC/C,EAAwB/E,mBACtBX,EAASA,EAAO2F,MAAQ3F,EAAO2E,UAAY,IAAM3E,EAAO4E,SAAW,IADrE,mBAAOe,EAAP,KAAaC,EAAb,KAGA,EAA0BjF,oBAAe,OAANX,QAAM,IAANA,OAAA,EAAAA,EAAQgF,QAAS,IAApD,mBAAOA,EAAP,KAAca,EAAd,KACA,EAAsBlF,oBAAe,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQkF,eAAR,eAAiBG,MAAO,IAAvD,mBAAOA,EAAP,KAAYS,EAAZ,KACA,EAAgCnF,oBAAe,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQkF,eAAR,eAAiBa,WAAY,IAAtE,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAA4BrF,oBAAe,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQkF,eAAR,eAAiBC,SAAU,IAAhE,mBAAOA,EAAP,KAAec,EAAf,KACA,EAAwBtF,oBAAe,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQkF,eAAR,eAAiBE,OAAQ,IAA1D,mBAAOA,EAAP,KAAac,EAAb,KACA,EAA0BvF,oBAAe,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQkF,eAAR,eAAiBiB,QAAS,IAA7D,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAAgCzF,oBAAe,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQkF,eAAR,eAAiBmB,WAAY,IAAtE,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAAgC3F,oBAAe,OAANX,QAAM,IAANA,GAAA,UAAAA,EAAQkF,eAAR,eAAiBqB,WAAY,IAAtE,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,OACE,uBACEpD,UAAU,cACVC,SAAU,SAACC,GACTA,EAAEC,iBACO,OAATtD,QAAS,IAATA,KAAY,CACViF,QAAS,CACPS,OACAX,QACAG,SACAC,OACAe,QACAd,MACAU,WACAM,WACAE,eAdR,UAmBE,oCACE,uBAAOE,QAAQ,OAAf,uBACA,uBACEhC,MAAOkB,EACPpB,SAAU,SAACjB,GAAD,OAAOsC,EAAQtC,EAAEkB,OAAOC,QAClCI,KAAK,OACLc,KAAK,OACLrB,UAAU,OAGd,oCACE,uBAAOmC,QAAQ,QAAf,0BACA,uBACEhC,MAAOO,EACPT,SAAU,SAACjB,GAAD,OAAOuC,EAASvC,EAAEkB,OAAOC,QACnCI,KAAK,MACLc,KAAK,QACLrB,UAAU,OAGd,oCACE,uBAAOmC,QAAQ,MAAf,sBACA,uBACEhC,MAAOY,EACPd,SAAU,SAACjB,GAAD,OAAOwC,EAAOxC,EAAEkB,OAAOC,QACjCI,KAAK,SACLc,KAAK,MACLrB,UAAU,OAGd,oCACE,uBAAOmC,QAAQ,WAAf,sBACA,uBACEhC,MAAOsB,EACPxB,SAAU,SAACjB,GAAD,OAAO0C,EAAY1C,EAAEkB,OAAOC,QACtCI,KAAK,OACLc,KAAK,WACLrB,UAAU,OAGd,0BAASlB,UAAU,SAAnB,UACE,uBAAOqD,QAAQ,UAAf,qBACA,0BACEhC,MAAOU,EACPZ,SAAU,SAACjB,GAAD,OAAO2C,EAAU3C,EAAEkB,OAAOC,QACpCiC,MAAM,MACN7B,KAAK,OACLc,KAAK,UACLrB,UAAU,OAGd,oCACE,uBAAOmC,QAAQ,OAAf,kBACA,uBACEhC,MAAOW,EACPb,SAAU,SAACjB,GAAD,OAAO4C,EAAQ5C,EAAEkB,OAAOC,QAClCI,KAAK,OACLc,KAAK,OACLrB,UAAU,OAGd,oCACE,uBAAOmC,QAAQ,QAAf,mBACA,uBACEhC,MAAO0B,EACP5B,SAAU,SAACjB,GAAD,OAAO8C,EAAS9C,EAAEkB,OAAOC,QACnCI,KAAK,OACLc,KAAK,QACLrB,UAAU,OAGd,oCACE,uBAAOmC,QAAQ,WAAf,iCACA,uBACEhC,MAAO4B,EACP9B,SAAU,SAACjB,GAAD,OAAOgD,EAAYhD,EAAEkB,OAAOC,QACtCI,KAAK,OACLc,KAAK,gBAGT,oCACE,uBAAOc,QAAQ,WAAf,wCACA,uBACEhC,MAAO8B,EACPhC,SAAU,SAACjB,GAAD,OAAOkD,EAAYlD,EAAEkB,OAAOC,QACtCI,KAAK,MACLc,KAAK,gBAGT,wBAAQvC,UAAU,OAAlB,kBACA,wBAAQA,UAAU,SAASyB,KAAK,SAASnC,QAAS,yBAAMgD,QAAN,IAAMA,OAAN,EAAMA,KAAxD,oBAGA,yBAAStC,UAAU,aAKZuD,EAAc,SAAC,GAA8C,IAA5ClE,EAA2C,EAA3CA,UAA2BxC,GAAgB,EAAhC2G,eAAgC,EAAhB3G,WACvD,EAA0BU,mBAAS,IAAnC,mBAAOkG,EAAP,KAAcC,EAAd,KACA,EAA8BnG,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAkCN,mBAAS,IAA3C,mBAAOoG,EAAP,KAAkBC,EAAlB,KACA,EAAsBrG,mBAAS,MAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACM0F,EAAM,uCAAG,WAAO3D,GAAP,eAAA4D,EAAA,yDACb5D,EAAEC,iBACF1C,GAAW,IACOkG,EAAUI,OAHf,gCAIHC,YAAY,CAChBC,MAAON,EACPxF,WANO,8CAQT,GARS,OAGP+F,EAHO,KASb1F,MAAM,mBAAoB,CACxBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB4E,QACAU,YAAa9E,EAAUN,IACvBqF,YAAa/E,EAAUzC,OAAOmC,IAC9BsF,MAAO,CAAEzG,OAAMqG,MAAOC,OAGvBlF,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL1B,GAAW,GACO,OAAd0B,EAAKC,KACE,OAATvC,QAAS,IAATA,KAAYsC,EAAKE,WACM,MAAdF,EAAKC,KACdjB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,wHAQNA,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,mEAMToB,OAAM,SAACC,GACN/B,GAAW,GACXgC,QAAQC,IAAIF,GACZrB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,4FAzDG,4CAAH,sDA+DZ,OACE,qCACE,uBAAM6B,UAAU,cAAcC,SAAU4D,EAAxC,UACE,wEACA,oCACE,uBAAOR,QAAQ,QAAf,mBACA,cAAC,IAAD,CACEd,KAAK,QACL+B,QACqB,UAAnBjF,EAAUkF,KACN,CACE,CACEC,MAAO,+BACPnD,MAAO,iCAGX,CACE,CACEmD,MAAO,qBACPnD,MAAO,sBAET,CACEmD,MAAO,wBACPnD,MAAO,yBAET,CACEmD,MAAO,UACPnD,MAAO,WAET,CACEmD,MAAO,gBACPnD,MAAO,iBAET,CACEmD,MAAO,mBACPnD,MAAO,qBAIjBF,SAAU,SAACjB,GACTwD,EAASxD,EAAEmB,aAIjB,oCACE,uBAAOgC,QAAQ,cAAf,yBACA,cAAC,IAAD,CACEd,KAAK,cACLlB,MAAOzD,EACPsD,UAAU,EACVC,SAAU,SAACjB,GAAD,OAAOrC,EAAQqC,EAAEkB,OAAOC,aAGtC,oCACE,uBAAOgC,QAAQ,MAAf,wFAIA,cAAC,IAAD,CACEoB,UAAU,EACVC,OAAO,0BACPvD,SAAU,SAACjB,GAAD,OAAO0D,EAAa1D,SAGlC,0BAASF,UAAU,OAAnB,UACE,wBAAQA,UAAU,SAASyB,KAAK,SAAhC,oBAGA,wBAAQzB,UAAU,SAASyB,KAAK,SAAhC,uBAIF,qBAAKzB,UAAU,YAEhBxC,GACC,qBAAKwC,UAAU,mBAAf,SACE,qBAAKA,UAAU,cAGnB,cAAC,QAAD,CAAOkC,KAAMhE,EAAK8B,UAAU,MAA5B,SACG9B,QAMIyG,EAAa,SAAC,GAAmB,IAAjB9H,EAAgB,EAAhBA,UAC3B,EAA8BU,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsBF,oBAAS,GAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACA,EAA0BZ,mBAAS,IAAnC,mBAAOkG,EAAP,KAAcC,EAAd,KACA,EAAkCnG,mBAAS,IAA3C,mBAAO8B,EAAP,KAAkBuF,EAAlB,KACA,EAAsCrH,mBAAS,IAA/C,mBAAOsH,EAAP,KAAoBC,EAApB,KACA,EAA0BvH,mBAAS,IAAnC,mBAAO0G,EAAP,KAAcc,EAAd,KACA,EAA8BxH,mBAAS,IAAvC,mBAAOyH,EAAP,KAAgBC,EAAhB,KACMpB,EAAM,uCAAG,WAAO3D,GAAP,eAAA4D,EAAA,yDACb5D,EAAEC,iBACF1C,GAAW,IACOwG,EAAMF,OAHX,gCAG0BC,YAAY,CAAEC,QAAO9F,WAH/C,8CAG2D,GAH3D,OAGP+F,EAHO,KAIb1F,MAAM,kBAAmB,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB4E,QACApE,YACAwF,cACAG,QAAS,CACPrG,KAAMqG,EACNf,MAAOC,OAIVlF,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL1B,GAAW,GACO,OAAd0B,EAAKC,KACE,OAATvC,QAAS,IAATA,KAAYsC,EAAK+F,QACS,4BAAjB/F,EAAK6F,QACd7G,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,iEAKNA,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,0EAMToB,OAAM,SAACC,GACN/B,GAAW,GACXgC,QAAQC,IAAIF,GACZrB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,mGApDG,4CAAH,sDA0DZ,OACE,qCACE,uBAAM6B,UAAU,aAAaC,SAAU4D,EAAvC,UACE,oCACE,0CACA,uBACExC,MAAOoC,EACPvC,UAAU,EACVC,SAAU,SAACjB,GAAD,OAAOwD,EAASxD,EAAEkB,OAAOC,aAGvC,oCACE,4DACA,uBACEA,MAAOhC,EACP8B,SAAU,SAACjB,GAAD,OAAO0E,EAAa1E,EAAEkB,OAAOC,aAG3C,oCACE,8DACA,uBACEA,MAAOwD,EACP1D,SAAU,SAACjB,GAAD,OAAO4E,EAAe5E,EAAEkB,OAAOC,aAG7C,oCACE,2CACA,cAAC,IAAD,CACEH,UAAU,EACVG,MAAO2D,EACP7D,SAAU,SAACjB,GAAD,OAAO+E,EAAW/E,EAAEkB,OAAOC,aAGzC,oCACE,uBAAOgC,QAAQ,MAAf,8CACA,cAAC,IAAD,CAAWlC,SAAU,SAAC8C,GAAD,OAAWc,EAASd,SAE3C,0BAASjE,UAAU,OAAnB,UACE,wBAAQA,UAAU,SAASyB,KAAK,SAAhC,oBAGA,wBAAQzB,UAAU,SAASyB,KAAK,SAAhC,uBAIF,qBAAKzB,UAAU,YAEhBxC,GACC,qBAAKwC,UAAU,mBAAf,SACE,qBAAKA,UAAU,cAGnB,cAAC,QAAD,CAAOkC,KAAMhE,EAAK8B,UAAU,MAA5B,SACG9B,QAKIiH,EAAkB,SAAC,GAAwB,IAAtBpG,EAAqB,EAArBA,IAAKlC,EAAgB,EAAhBA,UACrC,EAA8BU,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsBF,oBAAS,GAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACA,EAA0BZ,mBAAS,IAAnC,mBAAO0G,EAAP,KAAcc,EAAd,KACA,EAA8BxH,mBAAS,IAAvC,mBAAOyH,EAAP,KAAgBC,EAAhB,KACMpB,EAAM,uCAAG,WAAO3D,GAAP,eAAA4D,EAAA,yDACb5D,EAAEC,iBACF1C,GAAW,IACOwG,EAAMF,OAHX,gCAG0BC,YAAY,CAAEC,QAAO9F,WAH/C,8CAG2D,GAH3D,OAGP+F,EAHO,KAIb1F,MAAM,sBAAuB,CAC3BC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBE,MACAiG,QAAS,CAAErG,KAAMqG,EAASf,MAAOC,OAGlClF,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL1B,GAAW,GACO,OAAd0B,EAAKC,KACE,OAATvC,QAAS,IAATA,KAAYsC,EAAK+F,QAEjB/G,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,yEAMToB,OAAM,SAACC,GACN/B,GAAW,GACXgC,QAAQC,IAAIF,GACZrB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,kGArCG,4CAAH,sDA2CZ,OACE,qCACE,uBAAM6B,UAAU,kBAAkBC,SAAU4D,EAA5C,UACE,oCACE,4CACA,cAAC,IAAD,CACE3C,UAAU,EACVG,MAAO2D,EACP7D,SAAU,SAACjB,GAAD,OAAO+E,EAAW/E,EAAEkB,OAAOC,aAGzC,oCACE,uBAAOgC,QAAQ,MAAf,8CACA,cAAC,IAAD,CACEqB,OAAO,0BACPD,UAAU,EACVtD,SAAU,SAAC8C,GAAD,OAAWc,EAASd,SAGlC,0BAASjE,UAAU,OAAnB,UACE,wBAAQA,UAAU,SAASyB,KAAK,SAAhC,oBAGA,wBAAQzB,UAAU,SAASyB,KAAK,SAAhC,uBAIF,qBAAKzB,UAAU,YAEhBxC,GACC,qBAAKwC,UAAU,mBAAf,SACE,qBAAKA,UAAU,cAGnB,cAAC,QAAD,CAAOkC,KAAMhE,EAAK8B,UAAU,MAA5B,SACG9B,S,kIC3yBTkH,EAAQ,KAER,IAgMMC,EAAyB,SAAC,GAAmB,IAAD,EAAhBhG,EAAgB,EAAhBA,UAChC,OACE,qCACE,sBAAKW,UAAU,eAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAK0B,IAAKrC,EAAUzC,OAAO+E,YAAc,sBACzC,mBAAG3B,UAAU,OAAb,SACGX,EAAUzC,OAAO2E,UAAY,IAAMlC,EAAUzC,OAAO4E,cAGzD,qBAAKxB,UAAU,kBAAf,SACE,+BACE,+BACE,qCADF,IAEE,4BACE,cAAC,IAAD,CAAQsF,OAAO,wBAAf,SACGjG,EAAUkG,iBAIjB,+BACE,qCADF,IACc,mBAAGvF,UAAU,OAAb,SAAqBX,EAAUkF,UAE7C,+BACE,2CADF,IACoB,4BAAIlF,EAAUzB,UAElC,+BACE,6CADF,IACsB,4BAAIyB,EAAUN,SAEpC,qBAAIiB,UAAU,SAAd,UACE,uCADF,IACgB,4BAAIX,EAAUmG,oBAKpC,qBAAIxF,UAAS,gBAAWX,EAAUmG,OAArB,sBAA+BnG,EAAUoG,eAAzC,aAA+B,EAAmBD,QAA/D,UACE,qBAAIxF,UAAU,eAAd,UACE,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAAWA,UAAU,YACrB,cAAC,IAAD,CAAYA,UAAU,UACtB,cAAC,IAAD,CAAWA,UAAU,cAEvB,qDAEF,qBAAIA,UAAU,mBAAd,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,OAEF,qBAAIA,UAAU,cAAd,UACE,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAAWA,UAAU,YACrB,cAAC,IAAD,CAAYA,UAAU,UACtB,cAAC,IAAD,CAAWA,UAAU,cAEvB,iDAEF,qBAAIA,UAAU,kBAAd,UACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,OAEF,qBAAIA,UAAU,gBAAd,UACE,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAAWA,UAAU,YACrB,cAAC,IAAD,CAAYA,UAAU,UACtB,cAAC,IAAD,CAAWA,UAAU,cAEvB,mDAOJ0F,EAAkB,SAAC,GAAkC,IAAD,MAOO,MAPtCrG,EAA+B,EAA/BA,UAAWsG,EAAoB,EAApBA,cAEpC,GADgBC,cACsBrI,oBAAS,IAA/C,mBAAOsI,EAAP,KAAoBzD,EAApB,KACA,EAAsC7E,oBAAS,GAA/C,mBAAOuI,EAAP,KAAoBtC,EAApB,KACA,EAAsBjG,mBAAS,MAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACI4H,EAAS,KACTC,EAAiB,MACjB,UAAA3G,EAAUoG,eAAV,eAAmBQ,UAAUlH,OAAQM,EAAUzC,OAAOmC,KACxDgH,EAAM,UAAG1G,EAAUoG,eAAb,iBAAG,EAAmBS,iBAAtB,iBAAG,EAA8BC,YAAjC,aAAG,EAAoCvI,KAC7CoI,EAAiB,WACR,UAAA3G,EAAUoG,eAAV,eAAmBS,UAAUnH,OAAQM,EAAUzC,OAAOmC,MAC/DiH,EAAiB,QAEnB,IAAMI,EAAmB,WACvB5H,MAAM,wBAAyB,CAC7BC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBwH,aAAchH,EAAUN,IACxBjB,OAAQuB,EAAUvB,WAGnBkB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACa,OAAdA,EAAKC,KACPuG,GAAc,SAACW,GAAD,OACZA,EAAKC,KAAI,SAACC,GACR,OAAIA,EAAKzH,MAAQI,EAAKE,UAAUN,IACvB,2BACFI,EAAKE,WADV,IAEEzC,OAAQyC,EAAUzC,OAClB2H,KAAMlF,EAAUkF,OAGXiC,QAIU,MAAdrH,EAAKC,KACdjB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,wFAKNA,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,0FAMToB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZrB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,iGAMZ,OACE,qCACE,qBAAI6B,UAAS,mBAAb,UACE,cAACqF,EAAD,CAAwBhG,UAAWA,IACnC,sBAAKW,UAAU,OAAf,UACE,wCAAMX,EAAUvB,UAChB,sBAAKkC,UAAU,OAAf,UACwB,YAArBX,EAAUmG,QACT,mBACElG,QAAS,kBACPmH,kBAAQ,CACNjC,MAAO,qBACPkC,SAAU,2CACVC,SAAUP,KALhB,qBAYoB,mBAArB/G,EAAUmG,QACT,mBAAGxF,UAAU,WAAb,gCAEqB,eAArBX,EAAUmG,QACW,mBAArBnG,EAAUmG,SACV,mBAAGlG,QAAS,kBAAM8C,GAAe,IAAjC,qBAiBoB,aAArB/C,EAAUmG,QACT,mBAAGxF,UAAU,UAAUV,QAAS,kBAAMkE,GAAe,IAArD,4BAIoB,WAAnBwC,GAA+BD,GACb,SAAnBC,IACA,oBAAGhG,UAAU,WAAb,+BAAiCX,EAAUoG,eAA3C,aAAiC,EAAmBD,UAElC,WAAnBQ,IAAgCD,GAC/B,mBAAG/F,UAAU,aAAaV,QAAS,kBAAMkE,GAAe,IAAxD,6BAIoB,aAArBnE,EAAUmG,QACT,mBAAGxF,UAAU,WAAb,sBAEF,cAAC,QAAD,CAAOkC,KAAMhE,EAAK8B,UAAU,MAA5B,SACG9B,UAIP,cAAC,QAAD,CACEgE,KAAM2D,EACNe,MAAM,EACNpC,MAAM,gBACNqC,QAASzE,EACTpC,UAAU,uBALZ,SAOE,cAAC,uBAAD,CACEX,UAAWA,EACX+C,eAAgBA,EAChBvF,UAAW,SAACwC,GACVsG,GAAc,SAACW,GAAD,OACZA,EAAKC,KAAI,SAACC,GACR,OAAIA,EAAKzH,MAAQM,EAAUN,IAClB,2BACFM,GADL,IAEEzC,OAAQ4J,EAAK5J,OACb2H,KAAMiC,EAAKjC,OAGNiC,QAIbpE,GAAe,GACfjE,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,qBAAI6B,UAAU,SAAd,mBAAyBX,EAAUvB,UACnC,0EAOZ,cAAC,QAAD,CACEoE,KAAM4D,EACNc,MAAM,EACNpC,MAAM,gBACNqC,QAASrD,EACTxD,UAAU,cALZ,SAOE,cAAC,cAAD,CACEX,UAAWA,EACXmE,eAAgBA,EAChB3G,UAAW,SAACwC,GACVsG,GAAc,SAACW,GAAD,OACZA,EAAKC,KAAI,SAACC,GACR,OAAIA,EAAKzH,MAAQM,EAAUN,IAClB,2BACFM,GADL,IAEEzC,OAAQ4J,EAAK5J,OACb2H,KAAMiC,EAAKjC,OAGNiC,QAIbhD,GAAe,GACfrF,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,6BACsB,WAAnB6H,EACG,oDACA,4CArIoB3G,EAAUN,KA8IlD,cAAC,QAAD,CAAOiB,UAAU,MAAMkC,KAAMhE,EAA7B,SACGA,QAKH4I,EAAiB,SAAC,GAAkC,IAAD,MAKQ,MALvCzH,EAA+B,EAA/BA,UAAWsG,EAAoB,EAApBA,cACnC,EAAsCpI,oBAAS,GAA/C,mBAAOuI,EAAP,KAAoBtC,EAApB,KACA,EAAsBjG,mBAAS,MAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KACI4H,EAAS,KACTC,EAAiB,MACjB,UAAA3G,EAAUoG,eAAV,eAAmBQ,UAAUlH,OAAQM,EAAUzC,OAAOmC,KACxDgH,EAAM,UAAG1G,EAAUoG,eAAb,iBAAG,EAAmBS,iBAAtB,iBAAG,EAA8BC,YAAjC,aAAG,EAAoCvI,KAC7CoI,EAAiB,WACR,UAAA3G,EAAUoG,eAAV,eAAmBS,UAAUnH,OAAQM,EAAUzC,OAAOmC,MAC/DiH,EAAiB,QAEnB,IAAMe,EAAmB,WACvBvI,MAAM,wBAAyB,CAC7BC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBE,IAAKM,EAAUN,QAGhBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACa,OAAdA,EAAKC,MACPuG,GAAc,SAACW,GAAD,OACZA,EAAKC,KAAI,SAACC,GACR,OAAIA,EAAKzH,MAAQI,EAAKE,UAAUN,IACvB,2BACFI,EAAKE,WADV,IAEEzC,OAAQyC,EAAUzC,OAClB2H,KAAMlF,EAAUkF,OAGXiC,QAIbrI,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,wEAKNA,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,0EAMToB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZrB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,iGAMN6I,EAAgB,WACpBxI,MAAM,8BAA+B,CACnCC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEE,IAAKM,EAAUN,QAErCC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACa,OAAdA,EAAKC,MACPuG,GAAc,SAACW,GAAD,OACZA,EAAKW,QAAO,SAACT,GAAD,OAAUA,EAAKzH,MAAQM,EAAUN,UAE/CZ,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,sEAKNA,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,0FAMToB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZrB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,yGAQN+I,EAAiB,WACrB1I,MAAM,sBAAuB,CAC3BC,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEE,IAAKM,EAAUN,QAErCC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACa,OAAdA,EAAKC,MACPuG,GAAc,SAACW,GAAD,OACZA,EAAKC,KAAI,SAACC,GACR,OAAIA,EAAKzH,MAAQI,EAAKE,UAAUN,IACvB,2BACFI,EAAKE,WADV,IAEEzC,OAAQyC,EAAUzC,OAClB2H,KAAMlF,EAAUkF,OAGXiC,QAIbrI,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,sEAKNA,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,iFAMToB,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZrB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,gGAMZ,OACE,qCACE,qBAAI6B,UAAS,kBAAb,UACE,cAACqF,EAAD,CAAwBhG,UAAWA,IACnC,sBAAKW,UAAU,OAAf,UACE,wCAAMX,EAAUvB,UAChB,sBAAKkC,UAAU,OAAf,UAIyB,mBAArBX,EAAUmG,QACR,qCACE,mBAAGxF,UAAU,WAAb,+BACA,mBAAGA,UAAU,UAAUV,QAAS,kBAAMkE,GAAe,IAArD,8BAMgB,YAArBnE,EAAUmG,QACT,mBACExF,UAAU,aACVV,QAAS,kBACPmH,kBAAQ,CACNjC,MAAO,2BACPkC,SAAU,wCACVC,SAAUK,KANhB,4BAaoB,aAArB3H,EAAUmG,QACT,mBAAGxF,UAAU,WAAb,uBAEoB,WAAnBgG,GAA+BD,GACb,SAAnBC,IACA,oBAAGhG,UAAU,WAAb,+BAAiCX,EAAUoG,eAA3C,aAAiC,EAAmBD,UAElC,WAAnBQ,IAAgCD,GAC/B,mBAAG/F,UAAU,aAAaV,QAAS,kBAAMkE,GAAe,IAAxD,6BAIoB,eAArBnE,EAAUmG,QACT,qCACE,mBACElG,QAAS,kBACPmH,kBAAQ,CACNjC,MAAO,kBACPkC,SACE,sDACFC,SAAUO,KANhB,6BAYA,mBACElH,UAAU,aACVV,QAAS,kBACPmH,kBAAQ,CACNjC,MAAO,oBACPkC,SAAU,2CACVC,SAAUI,KANhB,wBAckB,aAArB1H,EAAUmG,QACT,mBAAGxF,UAAU,WAAb,4BAIN,cAAC,QAAD,CACEkC,KAAM4D,EACNc,MAAM,EACNpC,MAAM,gBACNqC,QAASrD,EACTxD,UAAU,cALZ,SAOE,cAAC,cAAD,CACEX,UAAWA,EACXmE,eAAgBA,EAChB3G,UAAW,SAACwC,GACVsG,GAAc,SAACW,GAAD,OACZA,EAAKC,KAAI,SAACC,GACR,OAAIA,EAAKzH,MAAQM,EAAUN,IAClB,2BACFM,GADL,IAEEzC,OAAQ4J,EAAK5J,OACb2H,KAAMiC,EAAKjC,OAGNiC,QAIbhD,GAAe,GACfrF,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,6BACsB,WAAnB6H,EACG,oDACA,4CA7GmB3G,EAAUN,KAsHjD,cAAC,QAAD,CAAOiB,UAAU,MAAMkC,KAAMhE,EAA7B,SACGA,QAMMiJ,UAtxBF,SAAC,GAAkC,IAAD,EAA/BC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,SACfC,GADqC,EAAZC,MACZrK,qBAAWC,KAAxBmK,UACR,EAAoC/J,mBAAS,IAA7C,mBAAOiK,EAAP,KAAmB7B,EAAnB,KACA,EAA0BpI,mBAAS,MAAnC,mBAAOkK,EAAP,KAAcC,EAAd,KACA,EAAwBnK,mBACtBoK,IAAYC,MAAMP,EAASQ,QAAQC,MAAQ,GAD7C,mBAAOA,EAAP,KAAaC,EAAb,KAGA,EAA8BxK,mBAC5BoK,IAAYC,MAAMP,EAASQ,QAAQG,SAAW,IADhD,mBAAOA,EAAP,KAAgBC,EAAhB,KAGA,EAA4B1K,oBAC1B,UAAAoK,IAAYC,MAAMP,EAASQ,QAAQK,SAAnC,eAAsCC,QAAQ,eAAgB,MAAO,IADvE,mBAAON,EAAP,KAAeO,EAAf,KAGA,EAA4B7K,mBAC1BoK,IAAYC,MAAMP,EAASQ,QAAQrC,QAAU,IAD/C,mBAAOA,EAAP,KAAe6C,EAAf,KAGA,EAAkC9K,mBAAS,MAA3C,mBAAO+K,EAAP,KAAkBC,EAAlB,KACA,EAAwBhL,mBAAS,CAC/BiL,OAAQb,IAAYC,MAAMP,EAASQ,QAAQY,MAAQ,YACnD1L,MAAO4K,IAAYC,MAAMP,EAASQ,QAAQ9K,OAAS,QAFrD,mBAAO0L,EAAP,KAIA,GAJA,KAIsBlL,mBAAS,OAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KA4DA,OA3DA2B,qBAAU,WACRtB,MAAM,iBAAD,OAAkB6I,EAASQ,SAC7B7I,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACa,OAAdA,EAAKC,OACPuG,EAAcxG,EAAKqI,YACnBE,EAASvI,EAAKsI,WAGjBlI,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZrB,EACE,qCACE,wBAAQmB,QAAS,kBAAMnB,EAAO,OAA9B,kBACA,gCACE,cAAC,IAAD,IACA,0EAKT,CAACkJ,EAASQ,OAAQP,IACrBxH,qBAAU,WAAO,IAAD,EACR4I,EAAYC,YAAO,CACvBC,KAAI,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAWI,UACjBpD,OAAQ,eAEJuD,EAAUF,YAAO,CACrBC,KAAI,UAAE,IAAIE,KAAJ,OAASR,QAAT,IAASA,OAAT,EAASA,EAAWO,gBAAtB,aAAE,EAA8BE,SAAS,GAAI,EAAG,EAAG,GACvDzD,OAAQ,eAEV8B,EAAQe,QAAQ,CACda,SAAU3B,EAAS2B,SACnBnB,OACE,IACA,IAAIoB,gBAAJ,qCAEEnB,OACAE,UACAS,KAAMA,EAAKD,OACXzL,MAAO0L,EAAK1L,OACR8K,GAAU,CAAEK,EAAGL,IACfS,GAAa,CACfY,SAAUR,EACVS,OAAQN,IAENrD,GAAU,CAAEA,YACflE,eAEN,CACDwG,EACAE,EACAS,EAAKD,OACLC,EAAK1L,MACL8K,EACAS,EACA9C,EACA8B,IAGA,sBAAKtH,UAAU,gBAAf,UACE,qBAAKoJ,MAAO,CAAEC,QAAS,QAAvB,SACE,cAAC,IAAD,MAEF,sBAAKrJ,UAAU,SAAf,UACE,0DACA,2EAEF,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,UAAf,UACE,oCACE,2CACCyH,KAEH,oCACE,8CACA,cAAC,IAAD,CACExG,aAAc,EACdqD,QAAS,CACP,CAAEE,MAAO,KAAMnD,MAAO,IACtB,CAAEmD,MAAO,KAAMnD,MAAO,IACtB,CAAEmD,MAAO,KAAMnD,MAAO,KAExBF,SAAU,SAACjB,GAAD,OAAO+H,EAAW/H,EAAEmB,aAGlC,0BAASrB,UAAU,SAAnB,UACE,qBACEsJ,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YAJV,SAME,sBACEC,GAAG,wBACH,YAAU,wBACVC,EAAE,6LACFC,UAAU,yBACVC,KAAK,UACLC,QAAQ,WAGZ,uBACEzI,MAAOwG,EACP1G,SAAU,SAACjB,GAAD,OAAOkI,EAAUlI,EAAEkB,OAAOC,QACpC0I,YAAY,yDAEblC,GACC,wBAAQvI,QAAS,kBAAM8I,EAAU,KAAjC,SACE,cAAC,IAAD,SAIN,0BAASpI,UAAU,SAAnB,UACE,4CACA,cAAC,IAAD,CACEiB,aAAcuE,GAAU,EACxBlB,QAAS,CACP,CAAEE,MAAO,MAAOnD,MAAO,IACvB,CAAEmD,MAAO,cAAenD,MAAO,cAC/B,CAAEmD,MAAO,UAAWnD,MAAO,WAC3B,CAAEmD,MAAO,oBAAqBnD,MAAO,kBACrC,CAAEmD,MAAO,WAAYnD,MAAO,YAC5B,CAAEmD,MAAO,UAAWnD,MAAO,YAE7BF,SAAU,SAACjB,GAAD,OAAOmI,EAAUnI,EAAEmB,aAGjC,yBAASrB,UAAS,OAAlB,SACE,cAAC,IAAD,CACEsI,UAAWA,EACXnH,SAAU,SAAC6I,GAAD,OAAWzB,EAAayB,aAK1C,qBAAIhK,UAAU,aAAd,UACGwH,EAAWjB,KAAI,SAAClH,EAAW4K,GAAZ,MACK,WAAnB5K,EAAUkF,KACR,cAACmB,EAAD,CAEErG,UAAWA,EACXsG,cAAeA,GAFVsE,GAKP,cAACnD,EAAD,CAEEzH,UAAWA,EACXsG,cAAeA,GAFVsE,MAMY,IAAtBzC,EAAWzD,QACV,mBAAG/D,UAAU,cAAb,oCAGJ,cAAC,IAAD,CACEyH,MAAOA,EACPO,QAASA,EACTkC,YAAapC,EACbqC,KAAM,EACNpC,QAASA,IAEX,cAAC,QAAD,CAAO/H,UAAU,MAAMkC,KAAMhE,EAA7B,SACGA,S","file":"static/js/17.cb236493.chunk.js","sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport {\n  NumberInput,\n  Combobox,\n  Err_svg,\n  FileInput,\n  UploadFiles,\n  Img,\n} from \"./Elements\";\nimport { Link } from \"react-router-dom\";\nimport { Modal } from \"./Modal\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const MilestoneForm = ({\n  action,\n  client,\n  onSuccess,\n  definedAmount,\n  order,\n  refund,\n  strict,\n}) => {\n  const { user, setUser, config } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [addressForm, setAddressForm] = useState(false);\n  const [userDetail, setUserDetail] = useState({ ...user });\n  const [clientDetail, setClientDetail] = useState({ ...client });\n  const [dscr, setDscr] = useState(\"\");\n  const [amount, setAmount] = useState(definedAmount || \"\");\n  const [fee, setFee] = useState(0);\n  const [msg, setMsg] = useState(null);\n  const onTimeout = useRef();\n  const requestMilestone = useCallback(() => {\n    fetch(\"/api/requestMilestone\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        buyer_id: client._id,\n        amount,\n        dscr,\n        order,\n        refund,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.milestone);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not request milestone. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not request milestone. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [clientDetail, userDetail, amount, dscr]);\n  const createMilestone = useCallback(() => {\n    fetch(\"/api/createMilestone\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        seller: { ...clientDetail },\n        amount,\n        dscr,\n        order,\n        refund,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.({ ...data });\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Insufficient fund</h4>\n                <Link to=\"/account/profile/wallet\">\n                  Add Money to your wallet now.\n                </Link>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not create milestone. Try again</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not create milestone. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [clientDetail, userDetail, amount, dscr]);\n  useEffect(() => {\n    setFee(() => {\n      return ((+amount / 100) * config.fee).fix();\n    });\n  }, [amount]);\n  return (\n    <>\n      <form\n        className=\"milestonesForm\"\n        onSubmit={(e) => {\n          setLoading(true);\n          e.preventDefault();\n          toast(\n            <div className=\"toast\">\n              Milestone is being{\" \"}\n              {action === \"create\" ? \"created.\" : \"requested.\"}{\" \"}\n              <button\n                className=\"undo\"\n                onClick={() => {\n                  onTimeout.current = null;\n                }}\n              >\n                Undo\n              </button>\n            </div>,\n            {\n              position: \"bottom-center\",\n              autoClose: 8000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              onClose: () => {\n                onTimeout.current?.();\n                setLoading(false);\n              },\n              draggable: true,\n              progress: undefined,\n            }\n          );\n          if (action === \"create\") {\n            onTimeout.current = createMilestone;\n          } else {\n            onTimeout.current = requestMilestone;\n          }\n        }}\n      >\n        <section className=\"transactionDetail\">\n          <section className=\"amount\">\n            <label>Amount</label>\n            <NumberInput\n              readOnly={strict}\n              min={10}\n              defaultValue={definedAmount || 0}\n              required={true}\n              onChange={(e) => setAmount((+e.target.value).toString())}\n            />\n          </section>\n          {amount && (\n            <>\n              {action === \"create\" && (\n                <label className=\"receivable\">\n                  {client.firstName} {client.lastName} will recieve ₹\n                  {(amount - fee).fix()}\n                </label>\n              )}\n              {action === \"request\" && (\n                <label className=\"receivable\">\n                  You will recieve ₹{(amount - fee).fix()}\n                </label>\n              )}\n            </>\n          )}\n          <section>\n            <label>Detail</label>\n            <input\n              value={dscr}\n              required={true}\n              onChange={(e) => setDscr(e.target.value)}\n            />\n          </section>\n          <button type=\"submit\">\n            {action === \"create\" ? \"Create Milestone\" : \"Request Milestone\"}\n          </button>\n        </section>\n        <section className=\"clientDetail\">\n          {action === \"request\" && (\n            <>\n              <Img src={client?.profileImg || \"/profile-user.jpg\"} />\n              <label>Buyer Information</label>\n              <div className=\"detail\">\n                <section className=\"profileDetail\">\n                  <p className=\"name\">\n                    {client?.firstName + \" \" + client?.lastName}\n                  </p>\n                  <p className=\"phone\">{client?.phone}</p>\n                  <p className=\"email\">{client?.email}</p>\n                </section>\n                {client?.address?.street && (\n                  <section className=\"address\">\n                    <p className=\"street\">\n                      {client.address?.street}, {client.address?.city},{\" \"}\n                      {client.address?.zip}\n                    </p>\n                  </section>\n                )}\n              </div>\n            </>\n          )}\n          {action === \"request\" ? null : (\n            <div className=\"sellerInfo\">\n              <Img src={clientDetail?.profileImg || \"/profile-user.jpg\"} />\n              <label>Seller Information</label>\n              <div className=\"detail\">\n                <section className=\"profileDetail\">\n                  <p className=\"name\">\n                    {clientDetail?.firstName} {clientDetail?.lastName}\n                  </p>\n                  <p className=\"phone\">{clientDetail?.phone}</p>\n                  <p className=\"email\">{clientDetail?.email}</p>\n                </section>\n              </div>\n            </div>\n          )}\n        </section>\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nexport const MilestoneReleaseForm = ({\n  milestone,\n  setReleaseForm,\n  onSuccess,\n}) => {\n  const [amount, setAmount] = useState(milestone.amount);\n  const [msg, setMsg] = useState(null);\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        fetch(\"/api/releaseMilestone\", {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ _id: milestone._id, amount }),\n        })\n          .then((res) => res.json())\n          .then(({ code, milestone }) => {\n            if (milestone) {\n              onSuccess?.(milestone);\n            } else if (code === 403) {\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Err_svg />\n                    <h4>Could not release Milestone due to low balance.</h4>\n                  </div>\n                </>\n              );\n            } else {\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Err_svg />\n                    <h4>Could not release Milestone.</h4>\n                  </div>\n                </>\n              );\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not release Milestone. Make sure you're online.</h4>\n              </div>\n            </>;\n          });\n      }}\n    >\n      You sure want to release this Milestone?\n      {\n        // <label>How much money you want to release?</label>\n        //   <NumberInput\n        //   defaultValue={amount}\n        //   onChange={(e) => setAmount(e.target.value)}\n        // />\n      }\n      <section className=\"btns\">\n        <button type=\"submit\">Confirm</button>\n        <button\n          className=\"cancel\"\n          type=\"button\"\n          onClick={() => setReleaseForm(false)}\n        >\n          Cancel\n        </button>\n      </section>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </form>\n  );\n};\n\nexport const AddressForm = ({ client, onSuccess, onCancel }) => {\n  const [name, setName] = useState(\n    client ? client.name || client.firstName + \" \" + client.lastName : \"\"\n  );\n  const [phone, setPhone] = useState(client?.phone || \"\");\n  const [zip, setZip] = useState(client?.address?.zip || \"\");\n  const [locality, setLocatily] = useState(client?.address?.locality || \"\");\n  const [street, setStreet] = useState(client?.address?.street || \"\");\n  const [city, setCity] = useState(client?.address?.city || \"\");\n  const [state, setState] = useState(client?.address?.state || \"\");\n  const [landmark, setLandmark] = useState(client?.address?.landmark || \"\");\n  const [altPhone, setAltPhone] = useState(client?.address?.altPhone || \"\");\n  return (\n    <form\n      className=\"addressForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSuccess?.({\n          address: {\n            name,\n            phone,\n            street,\n            city,\n            state,\n            zip,\n            locality,\n            landmark,\n            altPhone,\n          },\n        });\n      }}\n    >\n      <section>\n        <label htmlFor=\"name\">Full Name</label>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"phone\">Phone Number</label>\n        <input\n          value={phone}\n          onChange={(e) => setPhone(e.target.value)}\n          type=\"tel\"\n          name=\"phone\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"zip\">PIN Code</label>\n        <input\n          value={zip}\n          onChange={(e) => setZip(e.target.value)}\n          type=\"number\"\n          name=\"zip\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"locality\">Locality</label>\n        <input\n          value={locality}\n          onChange={(e) => setLocatily(e.target.value)}\n          type=\"text\"\n          name=\"locality\"\n          required={true}\n        />\n      </section>\n      <section className=\"street\">\n        <label htmlFor=\"address\">Address</label>\n        <textarea\n          value={street}\n          onChange={(e) => setStreet(e.target.value)}\n          resiz=\"off\"\n          type=\"text\"\n          name=\"address\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"city\">City</label>\n        <input\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n          type=\"text\"\n          name=\"city\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"state\">State</label>\n        <input\n          value={state}\n          onChange={(e) => setState(e.target.value)}\n          type=\"text\"\n          name=\"state\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"landmark\">Landmark (Optional)</label>\n        <input\n          value={landmark}\n          onChange={(e) => setLandmark(e.target.value)}\n          type=\"text\"\n          name=\"landmark\"\n        />\n      </section>\n      <section>\n        <label htmlFor=\"altPhone\">Alternate Phone (Optional)</label>\n        <input\n          value={altPhone}\n          onChange={(e) => setAltPhone(e.target.value)}\n          type=\"tel\"\n          name=\"altPhone\"\n        />\n      </section>\n      <button className=\"save\">Save</button>\n      <button className=\"cancel\" type=\"button\" onClick={() => onCancel?.()}>\n        Cancel\n      </button>\n      <section className=\"pBtm\" />\n    </form>\n  );\n};\n\nexport const DisputeForm = ({ milestone, setDisputeForm, onSuccess }) => {\n  const [issue, setIssue] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [dscr, setDscr] = useState(\"\");\n  const [caseFiles, setCaseFiles] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = caseFiles.length\n      ? await UploadFiles({\n          files: caseFiles,\n          setMsg,\n        })\n      : [];\n    fetch(\"/api/fileDispute\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        issue,\n        milestoneId: milestone._id,\n        defendantId: milestone.client._id,\n        _case: { dscr, files: fileLinks },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.milestone);\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>\n                  Insufficient fund! you have to have ₹500 in your wallet to\n                  file a dispute.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not file dispute.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(true);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not file dispute. make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"disputeForm\" onSubmit={submit}>\n        <h4>You feel like you are getting scammed?</h4>\n        <section>\n          <label htmlFor=\"issue\">Issue</label>\n          <Combobox\n            name=\"issue\"\n            options={\n              milestone.role === \"buyer\"\n                ? [\n                    {\n                      label: \"Buyer Not Releasing Payments\",\n                      value: \"Buyer Not Releasing Payments\",\n                    },\n                  ]\n                : [\n                    {\n                      label: \"Goods Not Received\",\n                      value: \"Goods Not Received\",\n                    },\n                    {\n                      label: \"Services Not Received\",\n                      value: \"Services Not Received\",\n                    },\n                    {\n                      label: \"Damaged\",\n                      value: \"Damaged\",\n                    },\n                    {\n                      label: \"Not As Agreed\",\n                      value: \"Not As Agreed\",\n                    },\n                    {\n                      label: \"Not As Displayed\",\n                      value: \"Not As Displayed\",\n                    },\n                  ]\n            }\n            onChange={(e) => {\n              setIssue(e.value);\n            }}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"description\">Description</label>\n          <TextareaAutosize\n            name=\"description\"\n            value={dscr}\n            required={true}\n            onChange={(e) => setDscr(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">\n            Upload images to prove your case. ie: Product of image, proof of\n            delivery.\n          </label>\n          <FileInput\n            multiple={true}\n            accept=\"audio/*,video/*,image/*\"\n            onChange={(e) => setCaseFiles(e)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport const TicketForm = ({ onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [issue, setIssue] = useState(\"\");\n  const [milestone, setMilestone] = useState(\"\");\n  const [transaction, setTransaction] = useState(\"\");\n  const [files, setFiles] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = files.length ? await UploadFiles({ files, setMsg }) : [];\n    fetch(\"/api/openTicket\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        issue,\n        milestone,\n        transaction,\n        message: {\n          body: message,\n          files: fileLinks,\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.ticket);\n        } else if (data.message === \"milestone ID is invalid\") {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Milestone Id is invalid.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Ticket could not be submitted.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Ticket could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"ticketForm\" onSubmit={submit}>\n        <section>\n          <label>Issue</label>\n          <input\n            value={issue}\n            required={true}\n            onChange={(e) => setIssue(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Milestone ID (optional)</label>\n          <input\n            value={milestone}\n            onChange={(e) => setMilestone(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Transaction ID (optional)</label>\n          <input\n            value={transaction}\n            onChange={(e) => setTransaction(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Detail</label>\n          <TextareaAutosize\n            required={true}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">Upload relevant files (optional)</label>\n          <FileInput onChange={(files) => setFiles(files)} />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\nexport const TicketReplyForm = ({ _id, onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = files.length ? await UploadFiles({ files, setMsg }) : [];\n    fetch(\"/api/addTicketReply\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id,\n        message: { body: message, files: fileLinks },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.ticket);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Reply could not be submitted.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Reply could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"ticketReplyForm\" onSubmit={submit}>\n        <section>\n          <label>Message</label>\n          <TextareaAutosize\n            required={true}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">Upload relevant files (optional)</label>\n          <FileInput\n            accept=\"audio/*,video/*,image/*\"\n            multiple={true}\n            onChange={(files) => setFiles(files)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  useContext,\n  lazy,\n} from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Modal, Confirm } from \"./Modal\";\nimport {\n  Err_svg,\n  Step_tick,\n  Step_blank,\n  Step_fill,\n  Prog_done,\n  Prog_running,\n  Prog_runningBack,\n  Succ_svg,\n  X_svg,\n  Combobox,\n  Pagination,\n  Img,\n  Moment,\n  moment,\n  InputDateRange,\n} from \"./Elements\";\nimport { MilestoneReleaseForm, DisputeForm } from \"./Forms\";\nimport queryString from \"query-string\";\n\nrequire(\"./styles/hold.scss\");\n\nconst Hold = ({ history, location, match }) => {\n  const { userType } = useContext(SiteContext);\n  const [milestones, setMilestones] = useState([]);\n  const [total, setTotal] = useState(null);\n  const [page, setPage] = useState(\n    queryString.parse(location.search).page || 1\n  );\n  const [perPage, setPerPage] = useState(\n    queryString.parse(location.search).perPage || 20\n  );\n  const [search, setSearch] = useState(\n    queryString.parse(location.search).q?.replace(/\\/(?!.*\\/).*/, \"\") || \"\"\n  );\n  const [status, setStatus] = useState(\n    queryString.parse(location.search).status || \"\"\n  );\n  const [dateRange, setDateRange] = useState(null);\n  const [sort, setSort] = useState({\n    column: queryString.parse(location.search).sort || \"createdAt\",\n    order: queryString.parse(location.search).order || \"dsc\",\n  });\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    fetch(`/api/milestone${location.search}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setMilestones(data.milestones);\n          setTotal(data.total);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not update milestones.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [location.search, userType]);\n  useEffect(() => {\n    const startDate = moment({\n      time: dateRange?.startDate,\n      format: \"YYYY-MM-DD\",\n    });\n    const endDate = moment({\n      time: new Date(dateRange?.endDate)?.setHours(24, 0, 0, 0),\n      format: \"YYYY-MM-DD\",\n    });\n    history.replace({\n      pathname: location.pathname,\n      search:\n        \"?\" +\n        new URLSearchParams({\n          // userType,\n          page,\n          perPage,\n          sort: sort.column,\n          order: sort.order,\n          ...(search && { q: search }),\n          ...(dateRange && {\n            dateFrom: startDate,\n            dateTo: endDate,\n          }),\n          ...(status && { status }),\n        }).toString(),\n    });\n  }, [\n    page,\n    perPage,\n    sort.column,\n    sort.order,\n    search,\n    dateRange,\n    status,\n    userType,\n  ]);\n  return (\n    <div className=\"holdContainer\">\n      <div style={{ display: \"none\" }}>\n        <X_svg />\n      </div>\n      <div className=\"benner\">\n        <h4>Secure your transactions</h4>\n        <p>All payments and transactions come here</p>\n      </div>\n      <div className=\"head\">\n        <div className=\"filters\">\n          <section>\n            <label>Total:</label>\n            {total}\n          </section>\n          <section>\n            <label>Per Page:</label>\n            <Combobox\n              defaultValue={0}\n              options={[\n                { label: \"20\", value: 20 },\n                { label: \"30\", value: 30 },\n                { label: \"50\", value: 50 },\n              ]}\n              onChange={(e) => setPerPage(e.value)}\n            />\n          </section>\n          <section className=\"search\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"23\"\n              height=\"23\"\n              viewBox=\"0 0 23 23\"\n            >\n              <path\n                id=\"Icon_ionic-ios-search\"\n                data-name=\"Icon ionic-ios-search\"\n                d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n                transform=\"translate(-4.5 -4.493)\"\n                fill=\"#707070\"\n                opacity=\"0.74\"\n              />\n            </svg>\n            <input\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              placeholder=\"Search Buyer's or Seller's name, phone, Milestone ID\"\n            />\n            {search && (\n              <button onClick={() => setSearch(\"\")}>\n                <X_svg />\n              </button>\n            )}\n          </section>\n          <section className=\"status\">\n            <label>Status:</label>\n            <Combobox\n              defaultValue={status || 0}\n              options={[\n                { label: \"All\", value: \"\" },\n                { label: \"In Progress\", value: \"inProgress\" },\n                { label: \"Pending\", value: \"pending\" },\n                { label: \"Release requested\", value: \"pendingRelease\" },\n                { label: \"Released\", value: \"released\" },\n                { label: \"Dispute\", value: \"dispute\" },\n              ]}\n              onChange={(e) => setStatus(e.value)}\n            />\n          </section>\n          <section className={`date`}>\n            <InputDateRange\n              dateRange={dateRange}\n              onChange={(range) => setDateRange(range)}\n            />\n          </section>\n        </div>\n      </div>\n      <ul className=\"milestones\">\n        {milestones.map((milestone, i) =>\n          milestone.role === \"seller\" ? (\n            <SellerMilestone\n              key={i}\n              milestone={milestone}\n              setMilestones={setMilestones}\n            />\n          ) : (\n            <BuyerMilestone\n              key={i}\n              milestone={milestone}\n              setMilestones={setMilestones}\n            />\n          )\n        )}\n        {milestones.length === 0 && (\n          <p className=\"placeholder\">No transaction yet.</p>\n        )}\n      </ul>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={page}\n        btns={5}\n        setPage={setPage}\n      />\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst CommonMilestoneElement = ({ milestone }) => {\n  return (\n    <>\n      <div className=\"clientDetail\">\n        <div className=\"profile\">\n          <Img src={milestone.client.profileImg || \"/profile-user.jpg\"} />\n          <p className=\"name\">\n            {milestone.client.firstName + \" \" + milestone.client.lastName}\n          </p>\n        </div>\n        <div className=\"milestoneDetail\">\n          <ul>\n            <li>\n              <p>Date</p>-\n              <p>\n                <Moment format=\"DD MMM, YYYY. hh:mm a\">\n                  {milestone.createdAt}\n                </Moment>\n              </p>\n            </li>\n            <li>\n              <p>Role</p>-<p className=\"role\">{milestone.role}</p>\n            </li>\n            <li>\n              <p>Desciption</p>-<p>{milestone.dscr}</p>\n            </li>\n            <li>\n              <p>Milestone ID</p>-<p>{milestone._id}</p>\n            </li>\n            <li className=\"status\">\n              <p>Status</p>-<p>{milestone.status}</p>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <ul className={`steps ${milestone.status} ${milestone.dispute?.status}`}>\n        <li className=\"step pending\">\n          <div className=\"icons\">\n            <Step_tick className=\"default\" />\n            <Step_blank className=\"blank\" />\n            <Step_fill className=\"filled\" />\n          </div>\n          <p>Deposite recieved</p>\n        </li>\n        <li className=\"progress pending\">\n          <Prog_done />\n          <Prog_running />\n          <Prog_runningBack />\n        </li>\n        <li className=\"step onhold\">\n          <div className=\"icons\">\n            <Step_tick className=\"default\" />\n            <Step_blank className=\"blank\" />\n            <Step_fill className=\"filled\" />\n          </div>\n          <p>Funds on Hold</p>\n        </li>\n        <li className=\"progress onhold\">\n          <Prog_done />\n          <Prog_running />\n          <Prog_runningBack />\n        </li>\n        <li className=\"step released\">\n          <div className=\"icons\">\n            <Step_tick className=\"default\" />\n            <Step_blank className=\"blank\" />\n            <Step_fill className=\"filled\" />\n          </div>\n          <p>Released</p>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nconst SellerMilestone = ({ milestone, setMilestones }) => {\n  const history = useHistory();\n  const [releaseForm, setReleaseForm] = useState(false);\n  const [disputeForm, setDisputeForm] = useState(false);\n  const [msg, setMsg] = useState(null);\n  let myCase = null;\n  let disputeFiledBy = null;\n  if (milestone.dispute?.plaintiff._id === milestone.client._id) {\n    myCase = milestone.dispute?.defendant?.case?.dscr;\n    disputeFiledBy = \"client\";\n  } else if (milestone.dispute?.defendant._id === milestone.client._id) {\n    disputeFiledBy = \"self\";\n  }\n  const approveMilestone = () => {\n    fetch(\"/api/approveMilestone\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        milestone_id: milestone._id,\n        amount: milestone.amount,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setMilestones((prev) =>\n            prev.map((item) => {\n              if (item._id === data.milestone._id) {\n                return {\n                  ...data.milestone,\n                  client: milestone.client,\n                  role: milestone.role,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not approve milestone due to low balance.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not approve milestone. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not approve milestone. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <li className={`milestone seller`} key={milestone._id}>\n        <CommonMilestoneElement milestone={milestone} />\n        <div className=\"clas\">\n          <h4>₹{milestone.amount}</h4>\n          <div className=\"btns\">\n            {milestone.status === \"pending\" && (\n              <a\n                onClick={() =>\n                  Confirm({\n                    label: \"Milestone Approval\",\n                    question: \"You sure want to approve this milestone?\",\n                    callback: approveMilestone,\n                  })\n                }\n              >\n                Approve\n              </a>\n            )}\n            {milestone.status === \"pendingRelease\" && (\n              <a className=\"released\">Release requested</a>\n            )}\n            {(milestone.status === \"inProgress\" ||\n              milestone.status === \"pendingRelease\") && (\n              <a onClick={() => setReleaseForm(true)}>Release</a>\n            )}\n            {\n              //   (milestone.status === \"pending\" ||\n              //   milestone.status === \"inProgress\") && (\n              //   <a\n              //     className=\"disputeRes\"\n              //     onClick={() =>\n              //       console.log(\n              //         \"buyers are not allowed to cancel milestone after 30 seconds.\"\n              //       )\n              //     }\n              //   >\n              //     Cancel\n              //   </a>\n              // )\n            }\n            {milestone.status === \"released\" && (\n              <a className=\"dispute\" onClick={() => setDisputeForm(true)}>\n                Raise Dispute\n              </a>\n            )}\n            {((disputeFiledBy === \"client\" && myCase) ||\n              disputeFiledBy === \"self\") && (\n              <a className=\"disputed\">Dispute {milestone.dispute?.status}</a>\n            )}\n            {disputeFiledBy === \"client\" && !myCase && (\n              <a className=\"disputeRes\" onClick={() => setDisputeForm(true)}>\n                Approve Dispute\n              </a>\n            )}\n            {milestone.status === \"declined\" && (\n              <a className=\"disputed\">Declined</a>\n            )}\n            <Modal open={msg} className=\"msg\">\n              {msg}\n            </Modal>\n          </div>\n        </div>\n        <Modal\n          open={releaseForm}\n          head={true}\n          label=\"Release Money\"\n          setOpen={setReleaseForm}\n          className=\"milestoneReleaseForm\"\n        >\n          <MilestoneReleaseForm\n            milestone={milestone}\n            setReleaseForm={setReleaseForm}\n            onSuccess={(milestone) => {\n              setMilestones((prev) =>\n                prev.map((item) => {\n                  if (item._id === milestone._id) {\n                    return {\n                      ...milestone,\n                      client: item.client,\n                      role: item.role,\n                    };\n                  } else {\n                    return item;\n                  }\n                })\n              );\n              setReleaseForm(false);\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4 className=\"amount\">₹{milestone.amount}</h4>\n                    <h4>Milestone has been released.</h4>\n                  </div>\n                </>\n              );\n            }}\n          />\n        </Modal>\n        <Modal\n          open={disputeForm}\n          head={true}\n          label=\"Raise Dispute\"\n          setOpen={setDisputeForm}\n          className=\"disputeForm\"\n        >\n          <DisputeForm\n            milestone={milestone}\n            setDisputeForm={setDisputeForm}\n            onSuccess={(milestone) => {\n              setMilestones((prev) =>\n                prev.map((item) => {\n                  if (item._id === milestone._id) {\n                    return {\n                      ...milestone,\n                      client: item.client,\n                      role: item.role,\n                    };\n                  } else {\n                    return item;\n                  }\n                })\n              );\n              setDisputeForm(false);\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4>\n                      {disputeFiledBy === \"client\"\n                        ? \"Case submit success. Dispute pending for verdict.\"\n                        : \"Dispute filed succefully.\"}\n                    </h4>\n                  </div>\n                </>\n              );\n            }}\n          />\n        </Modal>\n      </li>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nconst BuyerMilestone = ({ milestone, setMilestones }) => {\n  const [disputeForm, setDisputeForm] = useState(false);\n  const [msg, setMsg] = useState(null);\n  let myCase = null;\n  let disputeFiledBy = null;\n  if (milestone.dispute?.plaintiff._id === milestone.client._id) {\n    myCase = milestone.dispute?.defendant?.case?.dscr;\n    disputeFiledBy = \"client\";\n  } else if (milestone.dispute?.defendant._id === milestone.client._id) {\n    disputeFiledBy = \"self\";\n  }\n  const declineMilestone = () => {\n    fetch(\"/api/declineMilestone\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id: milestone._id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setMilestones((prev) =>\n            prev.map((item) => {\n              if (item._id === data.milestone._id) {\n                return {\n                  ...data.milestone,\n                  client: milestone.client,\n                  role: milestone.role,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Milestone succefully declined.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Milestone succefully declined.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not decline milestone. Make sure you're online</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const cancelRequest = () => {\n    fetch(\"/api/cancelMilestoneRequest\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: milestone._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setMilestones((prev) =>\n            prev.filter((item) => item._id !== milestone._id)\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Milestone request cancelled.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not cancel milestone request. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>\n                Could not cancel milestone request. Make sure you're online.\n              </h4>\n            </div>\n          </>\n        );\n      });\n  };\n  const requestRelease = () => {\n    fetch(\"/api/requestRelease\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: milestone._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setMilestones((prev) =>\n            prev.map((item) => {\n              if (item._id === data.milestone._id) {\n                return {\n                  ...data.milestone,\n                  client: milestone.client,\n                  role: milestone.role,\n                };\n              } else {\n                return item;\n              }\n            })\n          );\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Succ_svg />\n                <h4>Milestone request cancelled.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not request release. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not request release. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <li className={`milestone buyer`} key={milestone._id}>\n        <CommonMilestoneElement milestone={milestone} />\n        <div className=\"clas\">\n          <h4>₹{milestone.amount}</h4>\n          <div className=\"btns\">\n            {\n              // milestone.status === \"pending\" ||\n              // milestone.status === \"inProgress\"\n              milestone.status === \"pendingRelease\" && (\n                <>\n                  <a className=\"released\">Release requested</a>\n                  <a className=\"dispute\" onClick={() => setDisputeForm(true)}>\n                    Raise Dispute\n                  </a>\n                </>\n              )\n            }\n            {milestone.status === \"pending\" && (\n              <a\n                className=\"disputeRes\"\n                onClick={() =>\n                  Confirm({\n                    label: \"Cancel Milestone request\",\n                    question: \"You sure want to cancel this request?\",\n                    callback: cancelRequest,\n                  })\n                }\n              >\n                Cancel Request\n              </a>\n            )}\n            {milestone.status === \"released\" && (\n              <a className=\"released\">Released</a>\n            )}\n            {((disputeFiledBy === \"client\" && myCase) ||\n              disputeFiledBy === \"self\") && (\n              <a className=\"disputed\">Dispute {milestone.dispute?.status}</a>\n            )}\n            {disputeFiledBy === \"client\" && !myCase && (\n              <a className=\"disputeRes\" onClick={() => setDisputeForm(true)}>\n                Approve Dispute\n              </a>\n            )}\n            {milestone.status === \"inProgress\" && (\n              <>\n                <a\n                  onClick={() =>\n                    Confirm({\n                      label: \"Request Release\",\n                      question:\n                        \"You sure want to request release of this milestone?\",\n                      callback: requestRelease,\n                    })\n                  }\n                >\n                  Request Release\n                </a>\n                <a\n                  className=\"disputeRes\"\n                  onClick={() =>\n                    Confirm({\n                      label: \"Decline Milestone\",\n                      question: \"You sure want to decline this milestone?\",\n                      callback: declineMilestone,\n                    })\n                  }\n                >\n                  Decline\n                </a>\n              </>\n            )}\n            {milestone.status === \"declined\" && (\n              <a className=\"disputed\">Declined</a>\n            )}\n          </div>\n        </div>\n        <Modal\n          open={disputeForm}\n          head={true}\n          label=\"Raise Dispute\"\n          setOpen={setDisputeForm}\n          className=\"disputeForm\"\n        >\n          <DisputeForm\n            milestone={milestone}\n            setDisputeForm={setDisputeForm}\n            onSuccess={(milestone) => {\n              setMilestones((prev) =>\n                prev.map((item) => {\n                  if (item._id === milestone._id) {\n                    return {\n                      ...milestone,\n                      client: item.client,\n                      role: item.role,\n                    };\n                  } else {\n                    return item;\n                  }\n                })\n              );\n              setDisputeForm(false);\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4>\n                      {disputeFiledBy === \"client\"\n                        ? \"Case submit success. Dispute pending for verdict.\"\n                        : \"Dispute filed succefully.\"}\n                    </h4>\n                  </div>\n                </>\n              );\n            }}\n          />\n        </Modal>\n      </li>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport default Hold;\n"],"sourceRoot":""}