{"version":3,"sources":["components/Transactions.js"],"names":["MilestoneForm","lazy","then","mod","default","StartTransaction","userType","useContext","SiteContext","history","useHistory","useState","recentPayments","setRecentPayments","client","setClient","msg","setMsg","useRef","useEffect","fetch","res","json","data","catch","err","console","log","location","pathname","push","className","map","user","target","to","_id","onClick","src","profileImg","firstName","lastName","length","path","open","head","label","setOpen","action","onSuccess","milestone","amount","SingleTransaction","transaction","dscr","fix","format","createdAt","milestoneId","releaseDate","status","verification","Transactions","match","transactions","setTransactions"],"mappings":"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","file":"static/js/2.d9ca5068.chunk.js","sourcesContent":["import { useEffect, useState, useContext, lazy, useRef } from \"react\";\nimport { useHistory, Link, Route } from \"react-router-dom\";\nimport { SiteContext } from \"../SiteContext\";\nimport { UserSearch } from \"./Account\";\nimport { Err_svg, Img, Moment, Succ_svg } from \"./Elements\";\nimport { Modal } from \"./Modal\";\nconst MilestoneForm = lazy(() =>\n  import(\"./Forms\").then((mod) => ({ default: mod.MilestoneForm }))\n);\n\nexport const StartTransaction = () => {\n  const { userType } = useContext(SiteContext);\n  const history = useHistory();\n  const [value, setValue] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [recentPayments, setRecentPayments] = useState([]);\n  const [client, setClient] = useState(null);\n  const [msg, setMsg] = useState(null);\n  const milestoneTimeout = useRef();\n  useEffect(() => {\n    fetch(\"/api/recentPayments\")\n      .then((res) => res.json())\n      .then((data) => {\n        setRecentPayments(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  useEffect(() => {\n    if (history.location.pathname === \"/account/home/pay\" && !client) {\n      history.push(\"/account/home\");\n    }\n  }, []);\n  return (\n    <div className=\"homeContainer\">\n      <div className=\"benner\">\n        <h4>Start transactions with Delivery pay</h4>\n        <p>Connect with new buyers/sellers.</p>\n        {\n          // <p>Let us help you make the safest transaction</p>\n        }\n      </div>\n      <UserSearch setClient={setClient} />\n      <div className=\"recentPayments\">\n        <p className=\"label\">\n          Recent Payments\n          <span className=\"note\">\n            {userType === \"buyer\"\n              ? \"Click to view all their products.\"\n              : \"Click to request a milestone.\"}\n          </span>\n        </p>\n        <ul className=\"payments\">\n          {recentPayments.map((user) => (\n            <li key={user._id}>\n              <Link\n                target={userType === \"buyer\" ? \"_blank\" : \"\"}\n                // to={`/account/marketplace?seller=${user._id}`}\n                to={\n                  userType === \"buyer\"\n                    ? `/marketplace?seller=${user._id}`\n                    : \"/account/home/requestMilestone\"\n                }\n                onClick={() => {\n                  setClient(user);\n                }}\n              >\n                <Img src={user.profileImg} />\n                <p className=\"name\">{user.firstName + \" \" + user.lastName}</p>\n              </Link>\n            </li>\n          ))}\n          {recentPayments.length === 0 && <p>Nothing for now</p>}\n        </ul>\n      </div>\n      <Route path={\"/account/home/createMilestone\"}>\n        <Modal\n          open={true}\n          head={true}\n          label=\"Create Milestone\"\n          setOpen={() => {\n            history.push(\"/account/home\");\n            setClient(null);\n          }}\n          className=\"milestoneRequest\"\n        >\n          <MilestoneForm\n            action=\"create\"\n            client={client}\n            onSuccess={(milestone) => {\n              history.push(\"/account/home\");\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4 className=\"amount\">₹{milestone?.amount}</h4>\n                    <h4>Milestone has been created</h4>\n                  </div>\n                  <Link to=\"/account/hold\" onClick={() => setMsg(null)}>\n                    Check your Delivery pay Hold\n                  </Link>\n                </>\n              );\n            }}\n          />\n        </Modal>\n      </Route>\n      <Route path={\"/account/home/requestMilestone\"}>\n        <Modal\n          open={true}\n          head={true}\n          label=\"Request Milestone\"\n          setOpen={() => {\n            history.push(\"/account/home\");\n            setClient(null);\n          }}\n          className=\"milestoneRequest\"\n        >\n          <MilestoneForm\n            action=\"request\"\n            client={client}\n            onSuccess={(milestone) => {\n              history.push(\"/account/home\");\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4 className=\"amount\">₹{milestone?.amount}</h4>\n                    <h4>Milestone has been requested</h4>\n                  </div>\n                  <Link to=\"/account/hold\" onClick={() => setMsg(null)}>\n                    Check your Delivery pay Hold\n                  </Link>\n                </>\n              );\n            }}\n          />\n        </Modal>\n      </Route>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst Transactions = ({ history, location, match }) => {\n  const [transactions, setTransactions] = useState([]);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    fetch(\"/api/transactions?type=P2PTransaction\")\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n      })\n      .then((data) => {\n        if (data) {\n          setTransactions(data);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get transactions.</h4>\n            </div>\n          </>\n        );\n      });\n  }, []);\n  return (\n    <div className=\"transactionContainer\">\n      <p className=\"benner\">Completed Delivery pay Hold Transactions</p>\n      <ul className=\"transactions\">\n        {transactions.map((transaction) => (\n          <SingleTransaction key={transaction._id} transaction={transaction} />\n        ))}\n        {transactions.length === 0 && (\n          <p className=\"placeholder\">No transaction yet.</p>\n        )}\n      </ul>\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </div>\n  );\n};\nconst SingleTransaction = ({ transaction }) => {\n  const { user } = useContext(SiteContext);\n  return (\n    <li className={`transaction ${transaction.amount > 0 ? \"in\" : \"out\"}`}>\n      <div className={`transactionDetail`}>\n        <div className=\"profile\">\n          {transaction.client ? (\n            <>\n              <Img\n                src={transaction.client._id?.profileImg || \"/profile-user.jpg\"}\n              />\n              <p className=\"name\">\n                {transaction.client.firstName +\n                  \" \" +\n                  transaction.client.lastName}\n              </p>\n            </>\n          ) : (\n            <>\n              <Img src={user.profileImg || \"/profile-user.jpg\"} />\n              <p className=\"name\">{user.firstName + \" \" + user.lastName}</p>\n            </>\n          )}\n        </div>\n      </div>\n      <ul>\n        <li>\n          <p>Role</p>-\n          <p className=\"role\">{transaction.amount > 0 ? \"Seller\" : \"Buyer\"}</p>\n        </li>\n        <li>\n          <p>Product detail</p>-<p>{transaction.dscr || \"-\"}</p>\n        </li>\n        <li>\n          <p>Transaction ID</p>-<p>{transaction._id}</p>\n        </li>\n      </ul>\n      <ul className=\"amountDate\">\n        <li>\n          <p>Amount</p>-<p className=\"amount\">₹{transaction.amount.fix()}</p>\n        </li>\n        <li>\n          <p>Hold Date</p>-\n          <p>\n            <Moment format=\"MMM DD, YYYY, hh:mm a\">\n              {transaction.createdAt}\n            </Moment>\n          </p>\n        </li>\n        <li>\n          <p>Released Date</p>-\n          <p>\n            <Moment format=\"MMM DD, YYYY, hh:mm a\">\n              {transaction.milestoneId?.releaseDate || \"--\"}\n            </Moment>\n          </p>\n        </li>\n      </ul>\n      <ul className=\"statusMethod\">\n        <li>\n          <p>Status</p>-\n          <p className=\"status\">{transaction.milestoneId?.status || \"--\"}</p>\n        </li>\n        <li>\n          <p>Released to</p>-<p>{transaction.amount < 0 ? \"Seller\" : \"--\"}</p>\n        </li>\n        <li>\n          <p>Verification Method</p>-\n          <p>{transaction.milestoneId?.verification || \"--\"}</p>\n        </li>\n      </ul>\n    </li>\n  );\n};\n\nexport default Transactions;\n"],"sourceRoot":""}