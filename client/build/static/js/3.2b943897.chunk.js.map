{"version":3,"sources":["components/Forms.js","components/Marketplace.js"],"names":["MilestoneForm","action","client","onSuccess","definedAmount","order","refund","strict","useContext","SiteContext","user","config","setUser","useState","loading","setLoading","userDetail","clientDetail","dscr","setDscr","amount","setAmount","fee","setFee","msg","setMsg","onTimeout","useRef","requestMilestone","useCallback","fetch","method","headers","body","JSON","stringify","buyer_id","_id","then","res","json","data","code","onClick","catch","err","console","log","createMilestone","seller","to","useEffect","fix","className","onSubmit","e","preventDefault","toast","current","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","onClose","draggable","progress","undefined","readOnly","min","defaultValue","required","onChange","target","value","toString","firstName","lastName","type","src","profileImg","phone","email","address","street","city","zip","open","MilestoneReleaseForm","milestone","setReleaseForm","AddressForm","onCancel","name","setName","setPhone","setZip","locality","setLocatily","setStreet","setCity","state","setState","landmark","setLandmark","altPhone","setAltPhone","htmlFor","resiz","DisputeForm","setDisputeForm","issue","setIssue","caseFiles","setCaseFiles","submit","a","length","UploadFiles","files","fileLinks","milestoneId","defendantId","_case","options","role","label","multiple","accept","TicketForm","setMilestone","transaction","setTransaction","setFiles","message","setMessage","ticket","TicketReplyForm","Helmet","lazy","mod","default","require","MiniChat","onToggle","ChatContext","contacts","setContacts","setOpen","userCard","setUserCard","chat","setChat","clientChat","find","contact","status","userBlock","messages","socket","emit","client_id","newChat","prev","xmlns","width","height","viewBox","id","d","transform","fill","Product","userType","setCart","setSellerCart","finalPrice","calculatePrice","product","gst","images","discount","disabled","available","addToCart","SingleProduct","match","nativeShare","setNativeShare","setProduct","chatOpen","setChatOpen","params","navigator","share","content","property","Gallery","title","url","window","location","href","view","setView","ImageView","img","map","item","i","setSrc","boundingBody","setBoundingBody","applyStyle","setApplyStyle","style","setStyle","container","ref","onMouseMove","x","Math","abs","round","clientX","y","clientY","max","onTouchStart","document","querySelector","overflow","getBoundingClientRect","onTouchEnd","onTouchMove","touches","transition","onMouseEnter","onMouseLeave","onError","Cart","cart","carts","setCarts","products","Shop","SellerCart","sellerCart","buyer","SellerShop","deliveryDetail","setDeliveryDetail","addressForm","setAddressForm","milestoneForm","setMilestoneForm","showTerms","setShowTerms","couponCode","setCouponCode","validCoupon","setValidCoupon","couponCodeForm","setCouponCodeForm","note","setNote","productPrice","reduce","c","qty","couponCodeDiscount","maxDiscount","total","shopInfo","shippingCost","CartItem","coupon","sellers","filter","threshold","usage","validPerUser","onBlur","toUpperCase","refundable","Object","entries","key","head","deliveryWithin","some","terms","price","verified","Marketplace","history","useOnScreen","rootMargin","loadingRef","loadingVisible","sortOptions","column","categories","setCategories","setTotal","queryString","parse","search","perPage","page","setPage","q","setSearch","sort","setSort","setProducts","category","setCategory","sellerDetail","setSellerDetail","setLoadingMore","replace","pathname","URLSearchParams","display","shopName","opacity","placeholder"],"mappings":"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","file":"static/js/3.2b943897.chunk.js","sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from \"react\";\nimport { SiteContext } from \"../SiteContext\";\nimport {\n  NumberInput,\n  Combobox,\n  Err_svg,\n  FileInput,\n  UploadFiles,\n  Img,\n} from \"./Elements\";\nimport { Link } from \"react-router-dom\";\nimport { Modal } from \"./Modal\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const MilestoneForm = ({\n  action,\n  client,\n  onSuccess,\n  definedAmount,\n  order,\n  refund,\n  strict,\n}) => {\n  const { user, setUser, config } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [addressForm, setAddressForm] = useState(false);\n  const [userDetail, setUserDetail] = useState({ ...user });\n  const [clientDetail, setClientDetail] = useState({ ...client });\n  const [dscr, setDscr] = useState(\"\");\n  const [amount, setAmount] = useState(definedAmount || \"\");\n  const [fee, setFee] = useState(0);\n  const [msg, setMsg] = useState(null);\n  const onTimeout = useRef();\n  const requestMilestone = useCallback(() => {\n    fetch(\"/api/requestMilestone\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        buyer_id: client._id,\n        amount,\n        dscr,\n        order,\n        refund,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.({ ...data });\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not request milestone. Try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not request milestone. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [clientDetail, userDetail, amount, dscr]);\n  const createMilestone = useCallback(() => {\n    fetch(\"/api/createMilestone\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        seller: { ...clientDetail },\n        amount,\n        dscr,\n        order,\n        refund,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.({ ...data });\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Insufficient fund</h4>\n                <Link to=\"/account/profile/wallet\">\n                  Add Money to your wallet now.\n                </Link>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not create milestone. Try again</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not create milestone. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [clientDetail, userDetail, amount, dscr]);\n  useEffect(() => {\n    setFee(() => {\n      return ((+amount / 100) * config.fee).fix();\n    });\n  }, [amount]);\n  return (\n    <>\n      <form\n        className=\"milestonesForm\"\n        onSubmit={(e) => {\n          setLoading(true);\n          e.preventDefault();\n          toast(\n            <div className=\"toast\">\n              Milestone is being{\" \"}\n              {action === \"create\" ? \"created.\" : \"requested.\"}{\" \"}\n              <button\n                className=\"undo\"\n                onClick={() => {\n                  onTimeout.current = null;\n                }}\n              >\n                Undo\n              </button>\n            </div>,\n            {\n              position: \"bottom-center\",\n              autoClose: 8000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              onClose: () => {\n                onTimeout.current?.();\n                setLoading(false);\n              },\n              draggable: true,\n              progress: undefined,\n            }\n          );\n          if (action === \"create\") {\n            onTimeout.current = createMilestone;\n          } else {\n            onTimeout.current = requestMilestone;\n          }\n        }}\n      >\n        <section className=\"transactionDetail\">\n          <section className=\"amount\">\n            <label>Amount</label>\n            <NumberInput\n              readOnly={strict}\n              min={10}\n              defaultValue={definedAmount || 0}\n              required={true}\n              onChange={(e) => setAmount((+e.target.value).toString())}\n            />\n          </section>\n          {amount && (\n            <>\n              {action === \"create\" && (\n                <label className=\"receivable\">\n                  {client.firstName} {client.lastName} will recieve ₹\n                  {(amount - fee).fix()}\n                </label>\n              )}\n              {action === \"request\" && (\n                <label className=\"receivable\">\n                  You will recieve ₹{(amount - fee).fix()}\n                </label>\n              )}\n            </>\n          )}\n          <section>\n            <label>Detail</label>\n            <input\n              value={dscr}\n              required={true}\n              onChange={(e) => setDscr(e.target.value)}\n            />\n          </section>\n          <button type=\"submit\">\n            {action === \"create\" ? \"Create Milestone\" : \"Request Milestone\"}\n          </button>\n        </section>\n        <section className=\"clientDetail\">\n          {action === \"request\" && (\n            <>\n              <Img src={client?.profileImg || \"/profile-user.jpg\"} />\n              <label>Buyer Information</label>\n              <div className=\"detail\">\n                <section className=\"profileDetail\">\n                  <p className=\"name\">\n                    {client?.firstName + \" \" + client?.lastName}\n                  </p>\n                  <p className=\"phone\">{client?.phone}</p>\n                  <p className=\"email\">{client?.email}</p>\n                </section>\n                {client?.address?.street && (\n                  <section className=\"address\">\n                    <p className=\"street\">\n                      {client.address?.street}, {client.address?.city},{\" \"}\n                      {client.address?.zip}\n                    </p>\n                  </section>\n                )}\n              </div>\n            </>\n          )}\n          {action === \"request\" ? null : (\n            <div className=\"sellerInfo\">\n              <Img src={clientDetail?.profileImg || \"/profile-user.jpg\"} />\n              <label>Seller Information</label>\n              <div className=\"detail\">\n                <section className=\"profileDetail\">\n                  <p className=\"name\">\n                    {clientDetail?.firstName} {clientDetail?.lastName}\n                  </p>\n                  <p className=\"phone\">{clientDetail?.phone}</p>\n                  <p className=\"email\">{clientDetail?.email}</p>\n                </section>\n              </div>\n            </div>\n          )}\n        </section>\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n    </>\n  );\n};\nexport const MilestoneReleaseForm = ({\n  milestone,\n  setReleaseForm,\n  onSuccess,\n}) => {\n  const [amount, setAmount] = useState(milestone.amount);\n  const [msg, setMsg] = useState(null);\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        fetch(\"/api/releaseMilestone\", {\n          method: \"PATCH\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ _id: milestone._id, amount }),\n        })\n          .then((res) => res.json())\n          .then(({ code, milestone }) => {\n            if (milestone) {\n              onSuccess?.(milestone);\n            } else if (code === 403) {\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Err_svg />\n                    <h4>Could not release Milestone due to low balance.</h4>\n                  </div>\n                </>\n              );\n            } else {\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Err_svg />\n                    <h4>Could not release Milestone.</h4>\n                  </div>\n                </>\n              );\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not release Milestone. Make sure you're online.</h4>\n              </div>\n            </>;\n          });\n      }}\n    >\n      You sure want to release this Milestone?\n      {\n        // <label>How much money you want to release?</label>\n        //   <NumberInput\n        //   defaultValue={amount}\n        //   onChange={(e) => setAmount(e.target.value)}\n        // />\n      }\n      <section className=\"btns\">\n        <button type=\"submit\">Confirm</button>\n        <button\n          className=\"cancel\"\n          type=\"button\"\n          onClick={() => setReleaseForm(false)}\n        >\n          Cancel\n        </button>\n      </section>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </form>\n  );\n};\n\nexport const AddressForm = ({ client, onSuccess, onCancel }) => {\n  const [name, setName] = useState(\n    client ? client.name || client.firstName + \" \" + client.lastName : \"\"\n  );\n  const [phone, setPhone] = useState(client?.phone || \"\");\n  const [zip, setZip] = useState(client?.address?.zip || \"\");\n  const [locality, setLocatily] = useState(client?.address?.locality || \"\");\n  const [street, setStreet] = useState(client?.address?.street || \"\");\n  const [city, setCity] = useState(client?.address?.city || \"\");\n  const [state, setState] = useState(client?.address?.state || \"\");\n  const [landmark, setLandmark] = useState(client?.address?.landmark || \"\");\n  const [altPhone, setAltPhone] = useState(client?.address?.altPhone || \"\");\n  return (\n    <form\n      className=\"addressForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        onSuccess?.({\n          address: {\n            name,\n            phone,\n            street,\n            city,\n            state,\n            zip,\n            locality,\n            landmark,\n            altPhone,\n          },\n        });\n      }}\n    >\n      <section>\n        <label htmlFor=\"name\">Full Name</label>\n        <input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"phone\">Phone Number</label>\n        <input\n          value={phone}\n          onChange={(e) => setPhone(e.target.value)}\n          type=\"tel\"\n          name=\"phone\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"zip\">PIN Code</label>\n        <input\n          value={zip}\n          onChange={(e) => setZip(e.target.value)}\n          type=\"number\"\n          name=\"zip\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"locality\">Locality</label>\n        <input\n          value={locality}\n          onChange={(e) => setLocatily(e.target.value)}\n          type=\"text\"\n          name=\"locality\"\n          required={true}\n        />\n      </section>\n      <section className=\"street\">\n        <label htmlFor=\"address\">Address</label>\n        <textarea\n          value={street}\n          onChange={(e) => setStreet(e.target.value)}\n          resiz=\"off\"\n          type=\"text\"\n          name=\"address\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"city\">City</label>\n        <input\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n          type=\"text\"\n          name=\"city\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"state\">State</label>\n        <input\n          value={state}\n          onChange={(e) => setState(e.target.value)}\n          type=\"text\"\n          name=\"state\"\n          required={true}\n        />\n      </section>\n      <section>\n        <label htmlFor=\"landmark\">Landmark (Optional)</label>\n        <input\n          value={landmark}\n          onChange={(e) => setLandmark(e.target.value)}\n          type=\"text\"\n          name=\"landmark\"\n        />\n      </section>\n      <section>\n        <label htmlFor=\"altPhone\">Alternate Phone (Optional)</label>\n        <input\n          value={altPhone}\n          onChange={(e) => setAltPhone(e.target.value)}\n          type=\"tel\"\n          name=\"altPhone\"\n        />\n      </section>\n      <button className=\"save\">Save</button>\n      <button className=\"cancel\" type=\"button\" onClick={() => onCancel?.()}>\n        Cancel\n      </button>\n      <section className=\"pBtm\" />\n    </form>\n  );\n};\n\nexport const DisputeForm = ({ milestone, setDisputeForm, onSuccess }) => {\n  const [issue, setIssue] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [dscr, setDscr] = useState(\"\");\n  const [caseFiles, setCaseFiles] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = caseFiles.length\n      ? await UploadFiles({\n          files: caseFiles,\n          setMsg,\n        })\n      : [];\n    fetch(\"/api/fileDispute\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        issue,\n        milestoneId: milestone._id,\n        defendantId: milestone.client._id,\n        _case: { dscr, files: fileLinks },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.milestone);\n        } else if (data.code === 403) {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>\n                  Insufficient fund! you have to have ₹500 in your wallet to\n                  file a dispute.\n                </h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not file dispute.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(true);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not file dispute. make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"disputeForm\" onSubmit={submit}>\n        <h4>You feel like you are getting scammed?</h4>\n        <section>\n          <label htmlFor=\"issue\">Issue</label>\n          <Combobox\n            name=\"issue\"\n            options={\n              milestone.role === \"buyer\"\n                ? [\n                    {\n                      label: \"Buyer Not Releasing Payments\",\n                      value: \"Buyer Not Releasing Payments\",\n                    },\n                  ]\n                : [\n                    {\n                      label: \"Goods Not Received\",\n                      value: \"Goods Not Received\",\n                    },\n                    {\n                      label: \"Services Not Received\",\n                      value: \"Services Not Received\",\n                    },\n                    {\n                      label: \"Damaged\",\n                      value: \"Damaged\",\n                    },\n                    {\n                      label: \"Not As Agreed\",\n                      value: \"Not As Agreed\",\n                    },\n                    {\n                      label: \"Not As Displayed\",\n                      value: \"Not As Displayed\",\n                    },\n                  ]\n            }\n            onChange={(e) => {\n              setIssue(e.value);\n            }}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"description\">Description</label>\n          <TextareaAutosize\n            name=\"description\"\n            value={dscr}\n            required={true}\n            onChange={(e) => setDscr(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">\n            Upload images to prove your case. ie: Product of image, proof of\n            delivery.\n          </label>\n          <FileInput\n            multiple={true}\n            accept=\"audio/*,video/*,image/*\"\n            onChange={(e) => setCaseFiles(e)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\n\nexport const TicketForm = ({ onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [issue, setIssue] = useState(\"\");\n  const [milestone, setMilestone] = useState(\"\");\n  const [transaction, setTransaction] = useState(\"\");\n  const [files, setFiles] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = files.length ? await UploadFiles({ files, setMsg }) : [];\n    fetch(\"/api/openTicket\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        issue,\n        milestone,\n        transaction,\n        message: {\n          body: message,\n          files: fileLinks,\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.ticket);\n        } else if (data.message === \"milestone ID is invalid\") {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Milestone Id is invalid.</h4>\n              </div>\n            </>\n          );\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Ticket could not be submitted.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Ticket could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"ticketForm\" onSubmit={submit}>\n        <section>\n          <label>Issue</label>\n          <input\n            value={issue}\n            required={true}\n            onChange={(e) => setIssue(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Milestone ID (optional)</label>\n          <input\n            value={milestone}\n            onChange={(e) => setMilestone(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Transaction ID (optional)</label>\n          <input\n            value={transaction}\n            onChange={(e) => setTransaction(e.target.value)}\n          />\n        </section>\n        <section>\n          <label>Detail</label>\n          <TextareaAutosize\n            required={true}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">Upload relevant files (optional)</label>\n          <FileInput onChange={(files) => setFiles(files)} />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\nexport const TicketReplyForm = ({ _id, onSuccess }) => {\n  const [loading, setLoading] = useState(false);\n  const [msg, setMsg] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const submit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const fileLinks = files.length ? await UploadFiles({ files, setMsg }) : [];\n    fetch(\"/api/addTicketReply\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        _id,\n        message: { body: message, files: fileLinks },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          onSuccess?.(data.ticket);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Reply could not be submitted.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Reply could not be submitted. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  return (\n    <>\n      <form className=\"ticketReplyForm\" onSubmit={submit}>\n        <section>\n          <label>Message</label>\n          <TextareaAutosize\n            required={true}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </section>\n        <section>\n          <label htmlFor=\"for\">Upload relevant files (optional)</label>\n          <FileInput\n            accept=\"audio/*,video/*,image/*\"\n            multiple={true}\n            onChange={(files) => setFiles(files)}\n          />\n        </section>\n        <section className=\"btns\">\n          <button className=\"submit\" type=\"submit\">\n            Submit\n          </button>\n          <button className=\"cancel\" type=\"button\">\n            Cancel\n          </button>\n        </section>\n        <div className=\"pBtm\" />\n      </form>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </>\n  );\n};\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  useContext,\n  lazy,\n} from \"react\";\nimport {\n  X_svg,\n  Combobox,\n  Err_svg,\n  Succ_svg,\n  calculatePrice,\n  calculateDiscount,\n  Minus_svg,\n  Plus_svg,\n  addToCart,\n  Header,\n  Footer,\n  Tip,\n  Cart_svg,\n  Img,\n  Moment,\n  useOnScreen,\n  Arrow_left_svg,\n} from \"./Elements\";\nimport { AddressForm } from \"./Forms\";\nimport { SiteContext, ChatContext, socket } from \"../SiteContext\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Modal, Confirm } from \"./Modal\";\nimport { Chat } from \"./Deals\";\nimport queryString from \"query-string\";\nimport { toast } from \"react-toastify\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nconst Helmet = lazy(() => import(\"react-helmet\"));\nconst MilestoneForm = lazy(() =>\n  import(\"./Forms\").then((mod) => ({ default: mod.MilestoneForm }))\n);\n\nrequire(\"./styles/marketplace.scss\");\n\nconst Marketplace = ({ history, location, match }) => {\n  const { userType } = useContext(SiteContext);\n  const [nativeShare, setNativeShare] = useState(false);\n  const [loadingRef, loadingVisible] = useOnScreen({ rootMargin: \"100px\" });\n  const sortOptions = useRef([\n    {\n      label: \"Newest first\",\n      value: { column: \"createdAt\", order: \"dsc\" },\n    },\n    {\n      label: \"Oldest first\",\n      value: { column: \"createdAt\", order: \"asc\" },\n    },\n    {\n      label: \"Price high-low\",\n      value: { column: \"price\", order: \"dsc\" },\n    },\n    {\n      label: \"Price low-high\",\n      value: { column: \"price\", order: \"asc\" },\n    },\n  ]);\n  const [categories, setCategories] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [type, setType] = useState(\n    queryString.parse(location.search).type || \"\"\n  );\n  const [perPage, setPerPage] = useState(\n    queryString.parse(location.search).perPage || 20\n  );\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState(\n    queryString.parse(location.search).q || \"\"\n  );\n  const [sort, setSort] = useState({\n    column: queryString.parse(location.search).sort || \"createdAt\",\n    order: queryString.parse(location.search).order || \"dsc\",\n  });\n  const [products, setProducts] = useState([]);\n  const [msg, setMsg] = useState(null);\n  const [category, setCategory] = useState(\"\");\n  const [seller, setSeller] = useState(\n    queryString.parse(location.search).seller\n  );\n  const [sellerDetail, setSellerDetail] = useState(null);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [chatOpen, setChatOpen] = useState(false);\n  const loadMore = () => {\n    setLoadingMore(true);\n    fetch(`/api/getProducts${location.search}&page=${page + 1}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoadingMore(false);\n        if (data.code === \"ok\") {\n          if (data.products.length) {\n            setProducts((prev) => [...prev, ...data.products]);\n            setPage((prev) => prev + 1);\n          } else {\n          }\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not get products. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        setLoadingMore(false);\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get products. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  };\n  useEffect(() => {\n    fetch(`/api/getProducts?${location.search.replace(\"?\", \"\")}&page=${1}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setTotal(data.total);\n          setProducts(data.products);\n          if (data.seller) {\n            setSellerDetail(data.seller);\n            if (data.categories) {\n              setCategories(data.categories);\n            }\n          } else {\n            setSellerDetail(null);\n          }\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Could not get products. Please try again.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err, 156);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get products. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [location.search]);\n  useEffect(() => {\n    history.replace({\n      pathname: history.location.pathname,\n      search:\n        \"?\" +\n        new URLSearchParams({\n          ...(seller && { seller }),\n          ...(search.length >= 4 && { q: search }),\n          perPage,\n          sort: sort.column,\n          order: sort.order,\n          ...(type && { type }),\n          ...(category && { category }),\n        }).toString(),\n    });\n  }, [page, search, sort, seller, type, category]);\n  useEffect(() => {\n    if (loadingVisible && total > products.length) {\n      loadMore();\n    }\n  }, [loadingVisible]);\n  useEffect(() => {\n    if (navigator.share) {\n      setNativeShare(true);\n    }\n  }, []);\n  return (\n    <div className={`generic marketplace ${chatOpen ? \"chatOpen\" : \"\"}`}>\n      <Header />\n      <div style={{ display: \"none\" }}>\n        <X_svg />\n      </div>\n      <div className=\"benner\">\n        <h1>Delivery Pay Marketplace</h1>\n      </div>\n      <div className=\"content\">\n        <div className=\"mainContent\">\n          {sellerDetail && (\n            <div className=\"sellerDetail\">\n              {sellerDetail?.profileImg && (\n                <Img className=\"logo\" src={\"/profile-user.jpg\"} />\n              )}\n              <p>\n                {seller.shopInfo?.shopName ||\n                  sellerDetail.firstName + \" \" + sellerDetail.lastName}\n              </p>\n            </div>\n          )}\n          <div className=\"filters\">\n            <section className=\"categories\">\n              <label>Category</label>\n              <Combobox\n                defaultValue={0}\n                options={[\n                  { label: \"All\", value: \"\" },\n                  ...categories.map((item) => ({ label: item, value: item })),\n                ]}\n                onChange={(e) => {\n                  setCategory(e.value);\n                }}\n              />\n            </section>\n            <section className=\"search\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"23\"\n                height=\"23\"\n                viewBox=\"0 0 23 23\"\n              >\n                <path\n                  id=\"Icon_ionic-ios-search\"\n                  data-name=\"Icon ionic-ios-search\"\n                  d=\"M27.23,25.828l-6.4-6.455a9.116,9.116,0,1,0-1.384,1.4L25.8,27.188a.985.985,0,0,0,1.39.036A.99.99,0,0,0,27.23,25.828ZM13.67,20.852a7.2,7.2,0,1,1,5.091-2.108A7.155,7.155,0,0,1,13.67,20.852Z\"\n                  transform=\"translate(-4.5 -4.493)\"\n                  fill=\"#707070\"\n                  opacity=\"0.74\"\n                />\n              </svg>\n              <input\n                value={search}\n                onChange={(e) => {\n                  setSearch(e.target.value);\n                }}\n                placeholder=\"Search for products or services\"\n              />\n              {search && (\n                <button onClick={() => setSearch(\"\")}>\n                  <X_svg />\n                </button>\n              )}\n            </section>\n            <section className=\"sort\">\n              <label>Sort by:</label>\n              <Combobox\n                defaultValue={sortOptions.current.find(\n                  (item) =>\n                    item.value.column === sort.column &&\n                    item.value.order === sort.order\n                )}\n                options={sortOptions.current}\n                onChange={(e) => setSort(e.value)}\n              />\n            </section>\n            {nativeShare && (\n              <section className=\"share\">\n                <button\n                  onClick={async () => {\n                    try {\n                      await navigator.share({\n                        title: `Delivery Pay | ${\n                          sellerDetail\n                            ? `${\n                                sellerDetail.firstName +\n                                \" \" +\n                                sellerDetail.lastName\n                              }`\n                            : \"Marketplace\"\n                        }`,\n                        url: window.location.href,\n                      });\n                    } catch (err) {}\n                  }}\n                >\n                  Share this page\n                </button>\n              </section>\n            )}\n          </div>\n          <div className={`products ${products.length === 0 ? \"empty\" : \"\"}`}>\n            {products.map((item) => (\n              <Product key={item._id} data={item} />\n            ))}\n            {total > products.length && (\n              <div className=\"placeholder\">Loading</div>\n            )}\n            {products.length === 0 && (\n              <div className=\"placeholder\">\n                <Img src=\"/open_box.png\" />\n                <p>No Product Found</p>\n              </div>\n            )}\n          </div>\n        </div>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </div>\n      <div ref={loadingRef} />\n      {sellerDetail && (\n        <MiniChat client={sellerDetail} onToggle={setChatOpen} />\n      )}\n      <Footer />\n    </div>\n  );\n};\n\nconst MiniChat = ({ client, onToggle }) => {\n  const { user } = useContext(SiteContext);\n  const { contacts, setContacts } = useContext(ChatContext);\n  const [open, setOpen] = useState(false);\n  const [userCard, setUserCard] = useState(null);\n  const [chat, setChat] = useState(null);\n  useEffect(() => {\n    if (user && client) {\n      const clientChat = contacts.find(\n        (contact) => contact.client._id === client._id\n      );\n      if (clientChat) {\n        setUserCard({\n          ...clientChat.client,\n          status: clientChat.userBlock ? \"blocked\" : \"\",\n        });\n        setChat(clientChat.messages);\n        socket.emit(\"initiateChat\", {\n          client_id: client._id,\n          ...(clientChat.messages === undefined && { newChat: true }),\n        });\n      }\n    }\n  }, [client, contacts]);\n  useEffect(() => {\n    onToggle?.(open);\n  }, [open]);\n  if (!client) {\n    return null;\n  }\n  if (!open) {\n    return (\n      <button\n        className=\"chatBtn\"\n        onClick={() => {\n          if (user && !userCard) {\n            const clientChat = contacts.find(\n              (contact) => contact.client._id === client._id\n            );\n            console.log(clientChat);\n            if (clientChat) {\n              setUserCard({\n                ...clientChat.client,\n                status: clientChat.userBlock ? \"blocked\" : \"\",\n              });\n\n              setChat(clientChat.messages);\n              socket.emit(\"initiateChat\", {\n                client_id: client._id,\n                ...(clientChat.messages === undefined && { newChat: true }),\n              });\n            } else {\n              setContacts((prev) => [\n                ...prev,\n                { client, messages: [], status: \"\" },\n              ]);\n              socket.emit(\"initiateChat\", {\n                client_id: client._id,\n                newChat: true,\n              });\n            }\n          }\n          setOpen(true);\n        }}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"26.55\"\n          height=\"25.219\"\n          viewBox=\"0 0 26.55 25.219\"\n        >\n          <path\n            id=\"Path_1\"\n            data-name=\"Path 1\"\n            d=\"M-242.2-184.285h-13l26.55-10.786-4.252,25.219-5.531-10.637-2.127,4.68v-6.382l7.659-9.148h2.34\"\n            transform=\"translate(255.198 195.071)\"\n            fill=\"#fff\"\n          />\n        </svg>\n      </button>\n    );\n  }\n  if (!user) {\n    return (\n      <div className=\"chatWrapper\">\n        <button className=\"closeChat\" onClick={() => setOpen(false)}>\n          <Arrow_left_svg />\n        </button>\n        <div className=\"chat\">\n          <div className=\"startChat\">\n            <Link to=\"/u/login\">\n              <p>Login to start chat with this seller.</p>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"chatWrapper\">\n      <button className=\"closeChat\" onClick={() => setOpen(false)}>\n        <Arrow_left_svg />\n      </button>\n      <Chat\n        chat={chat}\n        setContacts={setContacts}\n        userCard={userCard}\n        setUserCard={setUserCard}\n        user={user}\n        setChat={setChat}\n      />\n    </div>\n  );\n};\n\nconst Product = ({ data }) => {\n  const { user, userType, setCart, setSellerCart } = useContext(SiteContext);\n  let finalPrice = calculatePrice({ product: data, gst: data.user?.gst });\n  return (\n    <div className=\"product\">\n      <Link to={`/marketplace/${data._id}`}>\n        <div className={`thumb ${data.images[0] ? \"\" : \"noThumb\"}`}>\n          <Img src={data.images[0] || \"/open_box.png\"} />\n        </div>\n      </Link>\n      <div className=\"detail\">\n        <h3>{data.name}</h3>\n        <p className=\"dscr\">{data.dscr}</p>\n        <div className=\"price\">\n          <span className=\"symbol\">₹ </span>\n          {finalPrice}{\" \"}\n          {finalPrice !==\n            calculatePrice({\n              product: data,\n              gst: data.user.gst,\n              discount: false,\n            }) && (\n            <span className=\"originalPrice\">\n              {calculatePrice({\n                product: data,\n                gst: data.user?.gst,\n                discount: false,\n              })}\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\"actions\">\n        {userType === \"buyer\" && data?.user._id === user?._id && (\n          <p className=\"note\">Can't buy product from self.</p>\n        )}\n        <button\n          disabled={\n            !data.available ||\n            (data?.user._id === user?._id && userType === \"buyer\")\n          }\n          onClick={() => {\n            data?.user._id === user?._id\n              ? setSellerCart((prev) => addToCart(prev, data, \"seller\"))\n              : setCart((prev) => addToCart(prev, data));\n          }}\n        >\n          {data?.user._id === user?._id ? \"Add to order\" : \"Add to Cart\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport const SingleProduct = ({ match }) => {\n  const { user, setCart, setSellerCart, userType } = useContext(SiteContext);\n  const [nativeShare, setNativeShare] = useState(false);\n  const [product, setProduct] = useState(null);\n  const [msg, setMsg] = useState(null);\n  const [chatOpen, setChatOpen] = useState(false);\n  useEffect(() => {\n    fetch(`/api/singleProduct?_id=${match.params._id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setProduct(data.product);\n        } else {\n          setMsg(\n            <>\n              <button onClick={() => setMsg(null)}>Okay</button>\n              <div>\n                <Err_svg />\n                <h4>Product does not exists.</h4>\n              </div>\n            </>\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get product. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n    if (navigator.share) {\n      setNativeShare(true);\n    }\n  }, []);\n  if (product) {\n    return (\n      <>\n        <Helmet>\n          <title>{product.name} | Delivery Pay</title>\n          <meta name=\"description\" content={product.dscr} />\n          <meta\n            property=\"og:url\"\n            content={`https://deliverypay.in/marketplace/${product._id}`}\n          />\n          <meta property=\"og:type\" content=\"product\" />\n          <meta\n            property=\"og:title\"\n            content={`${product.name} | Delivery Pay`}\n          />\n          <meta property=\"og:description\" content={product.dscr} />\n          <meta property=\"og:image\" content={product.images[0]} />\n        </Helmet>\n        <div className={`generic singleProduct ${chatOpen ? \"chatOpen\" : \"\"}`}>\n          <Header />\n          <div className=\"content\">\n            <Gallery images={product.images} />\n            <div className=\"detail\">\n              <h1>{product.name}</h1>\n              <p>{product.dscr}</p>\n              <p className=\"price\">\n                <label>Price: </label> <span className=\"symbol\">₹</span>\n                {calculatePrice({ product, gst: product.user?.gst })}{\" \"}\n                {calculatePrice({ product, gst: product.user?.gst }) !==\n                  calculatePrice({\n                    product,\n                    gst: product.user?.gst,\n                    discount: false,\n                  }) && (\n                  <span className=\"originalPrice\">\n                    {calculatePrice({\n                      product,\n                      gst: product.user?.gst,\n                      discount: false,\n                    })}\n                  </span>\n                )}\n              </p>\n              {\n                //   product.user?.gst?.verified && (\n                //   <p className=\"gst\">\n                //     Including {product.gst || product.user.gst.amount}% GST\n                //   </p>\n                // )\n              }\n              <p>\n                {product.type === \"product\" && (\n                  <>\n                    Available: {product.available && product.available}{\" \"}\n                    {product.available === 0 && <>Out of stock</>}\n                    {product.available < 7 && product.available > 0 && (\n                      <>Low stock</>\n                    )}\n                  </>\n                )}\n                {product.type !== \"product\" && (\n                  <>\n                    Availability:{\" \"}\n                    {product.available ? \"Available\" : \"Unavailable\"}\n                  </>\n                )}\n              </p>\n              <div className=\"actions\">\n                <button\n                  disabled={\n                    !product.available ||\n                    (userType === \"buyer\" && product.user?._id === user?._id)\n                  }\n                  onClick={() => {\n                    product?.user._id === user?._id\n                      ? setSellerCart((prev) =>\n                          addToCart(prev, product, \"seller\")\n                        )\n                      : setCart((prev) => addToCart(prev, product));\n                  }}\n                >\n                  {product?.user._id === user?._id\n                    ? \"Add to order\"\n                    : \"Add to Cart\"}\n                </button>\n                {nativeShare && (\n                  <button\n                    onClick={async () => {\n                      try {\n                        await navigator.share({\n                          title: `${product.name} | Delivery Pay`,\n                          url: window.location.href,\n                        });\n                      } catch (err) {}\n                    }}\n                  >\n                    Share this Product\n                  </button>\n                )}\n                {userType === \"seller\" && product?.user?._id !== user?._id && (\n                  <p className=\"note\">\n                    Switch to buyer profile to buy this product.\n                  </p>\n                )}\n                {userType === \"buyer\" && product?.user?._id === user?._id && (\n                  <p className=\"note\">Can't buy product from self.</p>\n                )}\n              </div>\n              {product.user && (\n                <div className=\"seller\">\n                  <label>Being sold by:</label>\n                  <Link to={`/marketplace?seller=${product.user._id}`}>\n                    <div className=\"profile\">\n                      <Img\n                        src={product.user.profileImg || \"/profile-user.jpg\"}\n                      />\n                      <p className=\"name\">\n                        {product.user.firstName} {product.user.lastName}{\" \"}\n                        <span className=\"contact\">{product.user.phone}</span>\n                      </p>\n                    </div>\n                  </Link>\n                </div>\n              )}\n            </div>\n            <Modal className=\"msg\" open={msg}>\n              {msg}\n            </Modal>\n          </div>\n          {product && <MiniChat client={product.user} onToggle={setChatOpen} />}\n          <Footer />\n        </div>\n      </>\n    );\n  }\n  return (\n    <div className={`generic singleProduct ${chatOpen ? \"chatOpen\" : \"\"}`}>\n      <Header />\n      loading\n      <Modal className=\"msg\" open={msg}>\n        {msg}\n      </Modal>\n      <Footer />\n    </div>\n  );\n};\n\nconst Gallery = ({ images }) => {\n  const [view, setView] = useState(images[0]);\n  return (\n    <div className=\"gallery\">\n      <ImageView img={view} />\n      <div className=\"thumbs\">\n        {images.map((item, i) => (\n          <Img key={i} src={item} onClick={() => setView(item)} />\n        ))}\n        {images.length === 0 && <p>No image was provided by the seller.</p>}\n      </div>\n    </div>\n  );\n};\n\nconst ImageView = ({ img }) => {\n  const [src, setSrc] = useState(img || \"/open_box.png\");\n  const [boundingBody, setBoundingBody] = useState(null);\n  const [applyStyle, setApplyStyle] = useState(false);\n  const [style, setStyle] = useState({});\n  const container = useRef();\n  useEffect(() => {\n    setSrc(img || \"/open_box.png\");\n  }, [img]);\n  return (\n    <div\n      ref={container}\n      className={`mainView ${!img ? \"noImg\" : \"\"}`}\n      onMouseMove={(e) => {\n        if (img) {\n          const x =\n            Math.abs(\n              Math.round(\n                (e.clientX - boundingBody?.x) / (boundingBody?.width / 100)\n              )\n            ) * 0.65;\n          const y =\n            Math.round(\n              (e.clientY - boundingBody?.y) / (boundingBody?.height / 100)\n            ) * 0.65;\n          setStyle({\n            transform: `scale(2) translateY(${Math.max(\n              30 + -y,\n              -30\n            )}%) translateX(${Math.max(30 + -x, -30)}%)`,\n          });\n        }\n      }}\n      onTouchStart={(e) => {\n        document.querySelector(\"body\").style.overflow = \"hidden\";\n        setBoundingBody(container.current?.getBoundingClientRect());\n        setApplyStyle(true);\n      }}\n      onTouchEnd={(e) => {\n        document.querySelector(\"body\").style.overflow = \"auto\";\n        setApplyStyle(false);\n      }}\n      onTouchMove={(e) => {\n        if (img) {\n          const x =\n            Math.abs(\n              Math.round(\n                (e.touches[0].clientX - boundingBody.x) /\n                  (boundingBody.width / 100)\n              )\n            ) * 0.65;\n          const y =\n            Math.round(\n              (e.touches[0].clientY - boundingBody.y) /\n                (boundingBody.height / 100)\n            ) * 0.65;\n          setStyle({\n            transform: `scale(2) translateY(${Math.max(\n              30 + -y,\n              -30\n            )}%) translateX(${Math.max(30 + -x, -30)}%)`,\n            transition: \"none\",\n          });\n        }\n      }}\n      onMouseEnter={() => {\n        setApplyStyle(true);\n        setBoundingBody(container.current?.getBoundingClientRect());\n      }}\n      onMouseLeave={() => setApplyStyle(false)}\n    >\n      <img\n        className={applyStyle ? \"scale\" : \"\"}\n        style={applyStyle ? style : {}}\n        src={src}\n        onError={() => setSrc(\"/img_err.png\")}\n      />\n    </div>\n  );\n};\n\nexport const Cart = () => {\n  const { setCart, cart, userType } = useContext(SiteContext);\n  const [loading, setLoading] = useState(true);\n  const [carts, setCarts] = useState(null);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"/api/getCartDetail\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        cart,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          setCarts(data.carts);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get cart detail. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [cart]);\n  if (carts) {\n    return (\n      <div className=\"fullCart\">\n        {userType === \"seller\" && <Redirect to=\"/account/sellerCart\" />}\n        <div className=\"head\">\n          <h1>Cart</h1>\n        </div>\n        <div className=\"allCarts\">\n          {carts.map(({ seller, products }) =>\n            seller && products?.length ? (\n              <Shop\n                key={seller._id}\n                seller={seller}\n                products={products}\n                loading={loading}\n              />\n            ) : null\n          )}\n          {carts?.length === 0 && <p>Cart is empty</p>}\n        </div>\n        <Modal open={msg} className=\"msg\">\n          {msg}\n        </Modal>\n      </div>\n    );\n  }\n  return (\n    <div className=\"fullCart\">\n      {userType === \"seller\" && <Redirect to=\"/account/sellerCart\" />}\n      <div className=\"head\">\n        <h1>Cart</h1>\n      </div>\n      <div className=\"allCarts\">Cart is empty.</div>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </div>\n  );\n};\nexport const SellerCart = () => {\n  const { sellerCart, setSellerCart, userType } = useContext(SiteContext);\n  const [loading, setLoading] = useState(true);\n  const [carts, setCarts] = useState(null);\n  const [msg, setMsg] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"/api/getSellerCartDetail\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ cart: sellerCart }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          setCarts(data.carts);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n        setMsg(\n          <>\n            <button onClick={() => setMsg(null)}>Okay</button>\n            <div>\n              <Err_svg />\n              <h4>Could not get cart detail. Make sure you're online.</h4>\n            </div>\n          </>\n        );\n      });\n  }, [sellerCart]);\n  if (carts) {\n    return (\n      <div className=\"fullCart\">\n        {userType === \"buyer\" && <Redirect to=\"/account/cart\" />}\n        <div className=\"head\">\n          <h1>Create Orders</h1>\n        </div>\n        <div className=\"allCarts\">\n          {carts.map(({ buyer, products }) =>\n            buyer && products?.length ? (\n              <SellerShop\n                key={buyer._id}\n                buyer={buyer}\n                products={products}\n                loading={loading}\n              />\n            ) : null\n          )}\n          {carts?.length === 0 && <p>Cart is empty</p>}\n        </div>\n        <Modal open={msg} className=\"msg\">\n          {msg}\n        </Modal>\n      </div>\n    );\n  }\n  return (\n    <div className=\"fullCart\">\n      {userType === \"buyer\" && <Redirect to=\"/account/cart\" />}\n      <div className=\"head\">\n        <h1>Create Orders</h1>\n      </div>\n      <div className=\"allCarts\">Cart is empty.</div>\n      <Modal open={msg} className=\"msg\">\n        {msg}\n      </Modal>\n    </div>\n  );\n};\n\nconst Shop = ({ seller, products, loading }) => {\n  const { user, setCart, config } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [deliveryDetail, setDeliveryDetail] = useState({\n    name: user.firstName + \" \" + user.lastName,\n    phone: user.phone,\n  });\n  const [addressForm, setAddressForm] = useState(false);\n  const [milestoneForm, setMilestoneForm] = useState(false);\n  const [showTerms, setShowTerms] = useState(false);\n  const [couponCode, setCouponCode] = useState(\"\");\n  const [validCoupon, setValidCoupon] = useState(false);\n  const [couponCodeForm, setCouponCodeForm] = useState(false);\n  const [note, setNote] = useState(\"\");\n  const productPrice = products.reduce(\n    (a, c) =>\n      (\n        a +\n        calculatePrice({ product: c.product, gst: seller.gst }) * c.qty\n      ).fix(),\n    0\n  );\n  const couponCodeDiscount =\n    (validCoupon?.type === \"percent\" &&\n      Math.min(\n        (productPrice / 100) * validCoupon.amount,\n        validCoupon.maxDiscount\n      )) ||\n    (validCoupon?.type === \"flat\" && validCoupon?.amount) ||\n    0;\n  const total =\n    +(productPrice - couponCodeDiscount) +\n    (seller.shopInfo?.shippingCost || 0).fix();\n  const fee = (total * ((100 + config.fee) / 100) - total).fix();\n  return (\n    <>\n      <div className=\"shop\">\n        <div className=\"seller\">\n          <div className=\"profile\">\n            <Img src={seller.profileImg || \"/profile-user.jpg\"} />\n            <p className=\"name\">\n              {seller.firstName} {seller.lastName} •{\" \"}\n              <span className=\"role\">Seller</span>\n              <span className=\"contact\">{seller.phone}</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"cart\">\n          <ul className=\"items\">\n            {products.map(({ product, qty }, i) => (\n              <CartItem key={i} gst={seller.gst} product={product} qty={qty} />\n            ))}\n            <div className=\"total\">\n              <p>\n                <label>Total</label>₹{productPrice}\n              </p>\n              <hr />\n              <div className=\"coupon\">\n                {!validCoupon ? (\n                  <label>Coupon</label>\n                ) : (\n                  <label>\n                    Coupon Code {validCoupon.code}\n                    <br />\n                    Discount{\" \"}\n                    {validCoupon.type === \"percent\" ? (\n                      <>\n                        {validCoupon.amount}% (Upto ₹{validCoupon.maxDiscount})\n                      </>\n                    ) : (\n                      <>flat</>\n                    )}\n                  </label>\n                )}\n                {!couponCodeForm && !validCoupon && (\n                  <button onClick={() => setCouponCodeForm(true)}>\n                    Add Coupon\n                  </button>\n                )}\n                {validCoupon && <span>₹{couponCodeDiscount}</span>}\n                {couponCodeForm && (\n                  <form\n                    onSubmit={(e) => {\n                      e.preventDefault();\n                      fetch(`/api/getCoupon/${couponCode}`)\n                        .then((res) => res.json())\n                        .then(({ code, coupon }) => {\n                          if (code === \"ok\") {\n                            if (\n                              !coupon.sellers ||\n                              coupon.sellers?.filter(\n                                (_id) => _id === seller._id\n                              ).length === 0\n                            ) {\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Err_svg />\n                                    <h4>\n                                      This seller does not accept this coupon\n                                      code.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            } else if (total < coupon.threshold) {\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Err_svg />\n                                    <h4>\n                                      Coupon code {couponCode} can only be\n                                      applied on order more that ₹\n                                      {coupon.threshold}.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            } else if (coupon.usage >= coupon.validPerUser) {\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Err_svg />\n                                    <h4>\n                                      Each user can use this Coupon{\" \"}\n                                      {coupon.validPerUser} times.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            } else {\n                              setValidCoupon(coupon);\n                              setCouponCodeForm(false);\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Succ_svg />\n                                    <h4>\n                                      Coupon code {couponCode} has been applied.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            }\n                          } else {\n                            setMsg(\n                              <>\n                                <button onClick={() => setMsg(null)}>\n                                  Okay\n                                </button>\n                                <div>\n                                  <Err_svg />\n                                  <h4>Invalid Coupon code.</h4>\n                                </div>\n                              </>\n                            );\n                          }\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                          setMsg(\n                            <>\n                              <button onClick={() => setMsg(null)}>Okay</button>\n                              <div>\n                                <Err_svg />\n                                <h4>\n                                  Could not apply Coupon code. Make sure you're\n                                  online.\n                                </h4>\n                              </div>\n                            </>\n                          );\n                        });\n                    }}\n                  >\n                    <input\n                      required={true}\n                      value={couponCode}\n                      onBlur={(e) => {\n                        if (!couponCode) {\n                          setCouponCodeForm(false);\n                        }\n                      }}\n                      onChange={(e) =>\n                        setCouponCode(e.target.value.toUpperCase())\n                      }\n                    />\n                    <button>Apply</button>\n                  </form>\n                )}\n              </div>\n              <hr />\n              <p>\n                <label>Shipping</label>₹{seller.shopInfo?.shippingCost}\n              </p>\n              <p>\n                <label>Delivery Pay Fee {config.fee}%</label>₹{fee}\n              </p>\n              <hr />\n              <p>\n                <label>Grand total</label>₹{(total + fee).fix()}\n              </p>\n              {\n                //   <span className=\"note\">\n                //   All tax and fee inclued.\n                //   <Tip>\n                //     Seller specified GST TAX and 10% Delivery Pay Fee applies to\n                //     all orders.\n                //   </Tip>\n                // </span>\n              }\n            </div>\n            <div className=\"terms\">\n              <p>\n                <label>Refundable: </label>\n                {seller.shopInfo?.refundable || \"N/A\"}\n              </p>\n              <p>\n                By proceeding, I agree to seller's all{\" \"}\n                <span className=\"btn\" onClick={() => setShowTerms(true)}>\n                  Terms\n                </span>\n              </p>\n            </div>\n          </ul>\n          <span className=\"devider\" />\n          <div className=\"deliveryDetail\">\n            <div className=\"head\">\n              <h3>Delivery Information</h3>\n              <button onClick={() => setAddressForm(true)}>Edit</button>\n            </div>\n            <ul>\n              {Object.entries(deliveryDetail).map(([key, value], i) => (\n                <li key={i}>\n                  <label>{key}</label>\n                  {value}\n                </li>\n              ))}\n            </ul>\n            <div className=\"head\">\n              <h3>Note to Seller</h3>\n            </div>\n            <TextareaAutosize\n              value={note}\n              onChange={(e) => setNote(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"actions\">\n          <button onClick={() => setMilestoneForm(true)}>Place order</button>\n        </div>\n        <Modal\n          open={addressForm}\n          head={true}\n          label=\"Delivery Address\"\n          setOpen={setAddressForm}\n          className=\"addAddress\"\n        >\n          <AddressForm\n            client={{\n              name: deliveryDetail.name,\n              phone: deliveryDetail.phone,\n              address: deliveryDetail,\n            }}\n            onSuccess={(data) => {\n              setDeliveryDetail((prev) => ({ ...prev, ...data.address }));\n              setAddressForm(false);\n            }}\n            onCancel={() => setAddressForm(false)}\n          />\n        </Modal>\n        <Modal\n          className=\"milestoneRequest\"\n          head={true}\n          label=\"Checkout\"\n          open={milestoneForm}\n          setOpen={setMilestoneForm}\n        >\n          <MilestoneForm\n            action=\"create\"\n            client={seller}\n            definedAmount={total + fee}\n            order={{\n              products,\n              deliveryDetail: {\n                ...deliveryDetail,\n                deliveryWithin: seller.shopInfo?.deliveryWithin,\n              },\n              ...(note && { note }),\n              ...(validCoupon && { couponCode: validCoupon?.code }),\n            }}\n            onSuccess={({ milestone, order }) => {\n              setCart((prev) =>\n                prev.filter(({ product }) => {\n                  return !order.products.some(\n                    (order) => order.product._id === product._id\n                  );\n                })\n              );\n              setMilestoneForm(false);\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4>Order successfully submitted.</h4>\n                    <Link to=\"/account/myShopping/orders\">View All orders</Link>\n                  </div>\n                </>\n              );\n            }}\n          />\n        </Modal>\n        <Modal\n          open={showTerms}\n          setOpen={setShowTerms}\n          head={true}\n          label=\"Seller's Terms\"\n          className=\"shopTerms\"\n        >\n          <ul>\n            {seller.shopInfo?.terms?.map((item, i) => (\n              <li key={i}>{item}</li>\n            ))}\n          </ul>\n        </Modal>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </div>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n    </>\n  );\n};\nconst SellerShop = ({ buyer, products, loading }) => {\n  const { user, setSellerCart, config } = useContext(SiteContext);\n  const [msg, setMsg] = useState(null);\n  const [deliveryDetail, setDeliveryDetail] = useState({\n    name: user.firstName + \" \" + user.lastName,\n    phone: user.phone,\n  });\n  const [addressForm, setAddressForm] = useState(false);\n  const [milestoneForm, setMilestoneForm] = useState(false);\n  const [showTerms, setShowTerms] = useState(false);\n  const [couponCode, setCouponCode] = useState(\"\");\n  const [validCoupon, setValidCoupon] = useState(false);\n  const [couponCodeForm, setCouponCodeForm] = useState(false);\n  const [note, setNote] = useState(\"\");\n  const productPrice = products.reduce(\n    (a, c) =>\n      (a + calculatePrice({ product: c.product, gst: user.gst }) * c.qty).fix(),\n    0\n  );\n  const couponCodeDiscount =\n    (validCoupon?.type === \"percent\" &&\n      Math.min(\n        (productPrice / 100) * validCoupon.amount,\n        validCoupon.maxDiscount\n      )) ||\n    (validCoupon?.type === \"flat\" && validCoupon?.amount) ||\n    0;\n  const total =\n    +(productPrice - couponCodeDiscount) +\n    (user.shopInfo?.shippingCost || 0).fix();\n  const fee = (total * ((100 + config.fee) / 100) - total).fix();\n  return (\n    <>\n      <div className=\"shop\">\n        <div className=\"seller\">\n          <div className=\"profile\">\n            <Img src={buyer.profileImg || \"/profile-user.jpg\"} />\n            <p className=\"name\">\n              {buyer.firstName} {buyer.lastName} •{\" \"}\n              <span className=\"role\">Buyer</span>\n              <span className=\"contact\">{buyer.phone}</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"cart\">\n          <ul className=\"items\">\n            {products.map(({ product, qty }, i) => (\n              <CartItem key={i} gst={user.gst} product={product} qty={qty} />\n            ))}\n            <div className=\"total\">\n              <p>\n                <label>Total</label>₹{productPrice}\n              </p>\n              <hr />\n              <div className=\"coupon\">\n                {!validCoupon ? (\n                  <label>Coupon</label>\n                ) : (\n                  <label>\n                    Coupon Code {validCoupon.code}\n                    <br />\n                    Discount{\" \"}\n                    {validCoupon.type === \"percent\" ? (\n                      <>\n                        {validCoupon.amount}% (Upto ₹{validCoupon.maxDiscount})\n                      </>\n                    ) : (\n                      <>flat</>\n                    )}\n                  </label>\n                )}\n                {!couponCodeForm && !validCoupon && (\n                  <button onClick={() => setCouponCodeForm(true)}>\n                    Add Coupon\n                  </button>\n                )}\n                {validCoupon && <span>₹{couponCodeDiscount}</span>}\n                {couponCodeForm && (\n                  <form\n                    onSubmit={(e) => {\n                      e.preventDefault();\n                      fetch(`/api/getCoupon/${couponCode}`)\n                        .then((res) => res.json())\n                        .then(({ code, coupon }) => {\n                          if (code === \"ok\") {\n                            if (\n                              !coupon.sellers ||\n                              coupon.sellers?.filter((_id) => _id === user._id)\n                                .length === 0\n                            ) {\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Err_svg />\n                                    <h4>\n                                      This seller does not accept this coupon\n                                      code.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            } else if (total < coupon.threshold) {\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Err_svg />\n                                    <h4>\n                                      Coupon code {couponCode} can only be\n                                      applied on order more that ₹\n                                      {coupon.threshold}.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            } else if (coupon.usage >= coupon.validPerUser) {\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Err_svg />\n                                    <h4>\n                                      Each user can use this Coupon{\" \"}\n                                      {coupon.validPerUser} times.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            } else {\n                              setValidCoupon(coupon);\n                              setCouponCodeForm(false);\n                              setMsg(\n                                <>\n                                  <button onClick={() => setMsg(null)}>\n                                    Okay\n                                  </button>\n                                  <div>\n                                    <Succ_svg />\n                                    <h4>\n                                      Coupon code {couponCode} has been applied.\n                                    </h4>\n                                  </div>\n                                </>\n                              );\n                            }\n                          } else {\n                            setMsg(\n                              <>\n                                <button onClick={() => setMsg(null)}>\n                                  Okay\n                                </button>\n                                <div>\n                                  <Err_svg />\n                                  <h4>Invalid Coupon code.</h4>\n                                </div>\n                              </>\n                            );\n                          }\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                          setMsg(\n                            <>\n                              <button onClick={() => setMsg(null)}>Okay</button>\n                              <div>\n                                <Err_svg />\n                                <h4>\n                                  Could not apply Coupon code. Make sure you're\n                                  online.\n                                </h4>\n                              </div>\n                            </>\n                          );\n                        });\n                    }}\n                  >\n                    <input\n                      required={true}\n                      value={couponCode}\n                      onBlur={(e) => {\n                        if (!couponCode) {\n                          setCouponCodeForm(false);\n                        }\n                      }}\n                      onChange={(e) =>\n                        setCouponCode(e.target.value.toUpperCase())\n                      }\n                    />\n                    <button>Apply</button>\n                  </form>\n                )}\n              </div>\n              <hr />\n              <p>\n                <label>Shipping</label>₹{user.shopInfo?.shippingCost}\n              </p>\n              <p>\n                <label>Delivery Pay Fee {config.fee}%</label>₹{fee}\n              </p>\n              <hr />\n              <p>\n                <label>Grand total</label>₹{(total + fee).fix()}\n              </p>\n            </div>\n            <div className=\"terms\">\n              <p>\n                <label>Refundable: </label>\n                {user.shopInfo?.refundable || \"N/A\"}\n              </p>\n              <p>\n                By proceeding, I agree to seller's all{\" \"}\n                <span className=\"btn\" onClick={() => setShowTerms(true)}>\n                  Terms\n                </span>\n              </p>\n            </div>\n          </ul>\n          <span className=\"devider\" />\n          <div className=\"deliveryDetail\">\n            <div className=\"head\">\n              <h3>Delivery Information</h3>\n              <button onClick={() => setAddressForm(true)}>Edit</button>\n            </div>\n            <ul>\n              {Object.entries(deliveryDetail).map(([key, value], i) => (\n                <li key={i}>\n                  <label>{key}</label>\n                  {value}\n                </li>\n              ))}\n            </ul>\n            <div className=\"head\">\n              <h3>Note to Buyer</h3>\n            </div>\n            <TextareaAutosize\n              value={note}\n              onChange={(e) => setNote(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"actions\">\n          <button onClick={() => setMilestoneForm(true)}>Create order</button>\n        </div>\n        <Modal\n          open={addressForm}\n          head={true}\n          label=\"Delivery Address\"\n          setOpen={setAddressForm}\n          className=\"addAddress\"\n        >\n          <AddressForm\n            client={{\n              name: deliveryDetail.name,\n              phone: deliveryDetail.phone,\n              address: deliveryDetail,\n            }}\n            onSuccess={(data) => {\n              setDeliveryDetail((prev) => ({ ...prev, ...data.address }));\n              setAddressForm(false);\n            }}\n            onCancel={() => setAddressForm(false)}\n          />\n        </Modal>\n        <Modal\n          className=\"milestoneRequest\"\n          head={true}\n          label=\"Checkout\"\n          open={milestoneForm}\n          setOpen={setMilestoneForm}\n        >\n          <MilestoneForm\n            action=\"request\"\n            client={buyer}\n            definedAmount={(total + fee).fix()}\n            order={{\n              products,\n              deliveryDetail: {\n                ...deliveryDetail,\n                deliveryWithin: user.shopInfo?.deliveryWithin,\n              },\n              ...(note && { note }),\n              ...(validCoupon && { couponCode: validCoupon?.code }),\n            }}\n            onSuccess={({ milestone, order }) => {\n              setSellerCart((prev) =>\n                prev.filter(({ product }) => {\n                  return !order.products.some(\n                    (order) => order.product._id === product._id\n                  );\n                })\n              );\n              setMilestoneForm(false);\n              setMsg(\n                <>\n                  <button onClick={() => setMsg(null)}>Okay</button>\n                  <div>\n                    <Succ_svg />\n                    <h4>Order successfully submitted.</h4>\n                    <Link to=\"/account/myShop/orders\">Manage orders</Link>\n                  </div>\n                </>\n              );\n            }}\n          />\n        </Modal>\n        <Modal\n          open={showTerms}\n          setOpen={setShowTerms}\n          head={true}\n          label=\"Seller's Terms\"\n          className=\"shopTerms\"\n        >\n          <ul>\n            {user.shopInfo?.terms?.map((item, i) => (\n              <li key={i}>{item}</li>\n            ))}\n          </ul>\n        </Modal>\n        <Modal className=\"msg\" open={msg}>\n          {msg}\n        </Modal>\n      </div>\n      {loading && (\n        <div className=\"spinnerContainer\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport const CartItem = ({ product, gst, qty }) => {\n  const { setCart, setSellerCart, userType } = useContext(SiteContext);\n  const price = calculatePrice({ product, gst: gst || product.user?.gst });\n  return (\n    <li className={`item ${!product.images.length && \"noImg\"}`}>\n      <Img src={product.images[0] || \"/open_box.png\"} />\n      <div className=\"detail\">\n        <p className=\"name\">{product.name}</p>\n        <div className=\"qty\">\n          QTY:{\" \"}\n          <div className=\"addRemove\">\n            <button\n              onClick={() => {\n                if (userType === \"seller\") {\n                  setSellerCart((prev) =>\n                    prev\n                      .map((item) => {\n                        if (item.product._id === product._id) {\n                          return {\n                            ...item,\n                            qty: item.qty - 1,\n                          };\n                        } else {\n                          return item;\n                        }\n                      })\n                      .filter((item) => item.qty > 0)\n                  );\n                } else {\n                  setCart((prev) =>\n                    prev\n                      .map((item) => {\n                        if (item.product._id === product._id) {\n                          return {\n                            ...item,\n                            qty: item.qty - 1,\n                          };\n                        } else {\n                          return item;\n                        }\n                      })\n                      .filter((item) => item.qty > 0)\n                  );\n                }\n              }}\n            >\n              <Minus_svg />\n            </button>\n            {qty}\n            <button\n              onClick={() => {\n                if (userType === \"seller\") {\n                  setSellerCart((prev) =>\n                    prev.map((item) => {\n                      if (item.product._id === product._id) {\n                        return {\n                          ...item,\n                          qty: item.qty + 1,\n                        };\n                      } else {\n                        return item;\n                      }\n                    })\n                  );\n                } else {\n                  setCart((prev) =>\n                    prev.map((item) => {\n                      if (item.product._id === product._id) {\n                        return {\n                          ...item,\n                          qty: item.qty + 1,\n                        };\n                      } else {\n                        return item;\n                      }\n                    })\n                  );\n                }\n              }}\n            >\n              <Plus_svg />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"price\">\n        <span className=\"qty\">\n          {price} x {qty}\n        </span>\n        ₹{(price * qty).fix()}\n      </div>\n      {gst?.verified && <Tip>Including {product.gst}% GST.</Tip>}\n    </li>\n  );\n};\n\nexport default Marketplace;\n"],"sourceRoot":""}